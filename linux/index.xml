<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Linuxes on 时光小栈</title>
        <link>http://blog.pytool.com/linux/</link>
        <language>zh-CN</language>
        <author>rinetd</author>
        <rights>Copyright (c) 2015, rinetd; all rights reserved.</rights>
        <updated>Tue, 27 Sep 2016 15:58:27 CST</updated>
        
        <item>
            <title>How to Set Locales (i18n) On a Linux or Unix</title>
            <link>http://blog.pytool.com/linux/2016-01-01-linux%E5%AD%97%E7%AC%A6%E9%9B%86locale%E8%AE%BE%E7%BD%AE/</link>
            <pubDate>Tue, 27 Sep 2016 15:58:27 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2016-01-01-linux%E5%AD%97%E7%AC%A6%E9%9B%86locale%E8%AE%BE%E7%BD%AE/</guid>
            <description>

&lt;p&gt;&lt;a href=&#34;http://www.cnblogs.com/happyday56/p/4135845.html&#34; target=&#34;_blank&#34;&gt;各种字符集和编码详解 - 快乐就好 - 博客园&lt;/a&gt;
&lt;a href=&#34;http://blog.jobbole.com/84903/&#34; target=&#34;_blank&#34;&gt;十分钟搞清字符集和字符编码 - 文章 - 伯乐在线&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://zh.wikipedia.org/wiki/Unicode%E5%AD%97%E7%AC%A6%E5%B9%B3%E9%9D%A2%E6%98%A0%E5%B0%84&#34; target=&#34;_blank&#34;&gt;unicode wiki&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;编码&#34;&gt;编码&lt;/h2&gt;

&lt;p&gt;man -k unicode&lt;br /&gt;
ascii&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://image.3001.net/images/ue/10951392173331.png&#34; alt=&#34;ASCII&#34; /&gt;&lt;br /&gt;
转义字符串（Escape Sequence）也称字符实体(Character Entity)。在HTML中，定义转义字符串的原因有两个：第一个原因是像“&amp;lt;”和“&amp;gt;”这类符号已经用来表示HTML标签，因此就不能直接当做文本中的符号来使用。为了在HTML文档中使用这些符号，就需要定义它的转义字符串。当解释程序遇到这类字符串时就把它解释为真实的字符。在输入转义字符串时，要严格遵守字母大小写的规则。第二个原因是，有些字符在ASCII字符集中没有定义，因此需要使用转义字符串来表&lt;/p&gt;

&lt;p&gt;js中的escape的用法汇总&lt;/p&gt;

&lt;p&gt;escape对0-255以外的unicode值进行编码时输出&lt;code&gt;%u****&lt;/code&gt;格式，其它情况下escape，encodeURI，encodeURIComponent编码结果相同。&lt;br /&gt;
最多使用的应为encodeURIComponent，它是将中文、韩文等特殊字符转换成utf-8格式的url编码，所以如果给后台传递参数需要使用encodeURIComponent时需要后台解码对utf-8支持（form中的编码方式和当前页面编码方式相同）&lt;br /&gt;
escape不编码字符有69个：&lt;code&gt;*，+，-，.，/，@，_，0-9，a-z，A-Z&lt;/code&gt;&lt;br /&gt;
encodeURI不编码字符有82个：&lt;code&gt;!，#，$，&amp;amp;，&#39;，(，)，*，+，,，-，.，/，:，;，=，?，@，_，~，0-9，a-z，A-Z&lt;/code&gt;&lt;br /&gt;
encodeURIComponent不编码字符有71个：&lt;code&gt;!， &#39;，(，)，*，-，.，_，~，0-9，a-z，A-Z&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;escape(str) 方法，它用于转义不能用明文正确发送的任何字符。比如，电话号码中的空格将被转换成字符 %20，从而能够在 URL 中传递这些字符&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;escape()不能直接用于URL编码，它的真正作用是返回一个字符的Unicode编码值。比如&amp;rdquo;春节&amp;rdquo;的返回结果是%u6625%u8282，，escape()不对&amp;rdquo;+&amp;ldquo;编码&lt;br /&gt;
主要用于汉字编码，现在已经不提倡使用。&lt;/p&gt;

&lt;p&gt;encodeURI()是Javascript中真正用来对URL编码的函数。&lt;br /&gt;
编码整个url地址，但对特殊含义的符号&amp;rdquo;; / ? : @ &amp;amp; = + $ , #&amp;ldquo;，也不进行编码。对应的解码函数是：decodeURI()。&lt;/p&gt;

&lt;p&gt;encodeURIComponent()&lt;br /&gt;
能编码&amp;rdquo;; / ? : @ &amp;amp; = + $ , #&amp;ldquo;这些特殊字符。对应的解码函数是decodeURIComponent()。&lt;/p&gt;

&lt;p&gt;我想要传递带&amp;amp;符号的网址，所以用encodeURIComponent()&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;url 编码 [形式为 %20] 字符集可能是utf8 肯能是gbk&lt;br /&gt;
```&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://man.chinaunix.net/develop/rfc/RFC1738.txt&#34; target=&#34;_blank&#34;&gt;RFC1738 统一资源定位器(URL)&lt;/a&gt;&lt;br /&gt;
“&lt;code&gt;只有字母和数字[0-9a-zA-Z]、一些特殊符号“$-_.+!*&#39;(),”[不包括双引号]、以及某些保留字，才可以不经过编码直接用于URL。&lt;/code&gt;”&lt;br /&gt;
2．2  URL字符编码问题&lt;/p&gt;

&lt;p&gt;如果存在下面的情况：八位字节数在US-ASCII字符集中没有相应的可显示字符，或者使&lt;br /&gt;
用相应字符会产生不安全因素，或者相应的字符被保留用于特定的URL方案的解释，那&lt;br /&gt;
么它们必须被编成代码。&lt;br /&gt;
1. 没有相应的可显示字符：&lt;br /&gt;
URL只能用US-ASCII字符编码集中的可显示字符表示。US-ASCII中没有用到十六进制的&lt;br /&gt;
八位字节80-FF，并且00－1F和7F代表了控制字符，这些字符必须进行编码。&lt;br /&gt;
2. 不安全：&lt;br /&gt;
字符不安全的原因很多。空格字符就是不安全的，因为URL在被转录或者被排版或者被&lt;br /&gt;
字处理程序处理后其中重要的空格可能被忽略，而可忽略的空格却有可能被解释了。“&amp;lt;”&lt;br /&gt;
和“&amp;gt;”字符也是不安全的，因为它们被用来作为URL在文本中的分隔符；而在有些系统&lt;br /&gt;
中用引号“&amp;rdquo;”来界定URL。“#”字符也是不安全的，因为它在万维网和其他一些系统中&lt;br /&gt;
被用来从“片段/锚点”标志符中界定URL，所以它通常都要被编码。字符“%”被用来对&lt;br /&gt;
其他字符进行编码，它也是不安全的。其他一些字符，如：&lt;br /&gt;
&amp;rdquo;{&amp;ldquo;, &amp;ldquo;}&amp;rdquo;, &amp;ldquo;|&amp;rdquo;, &amp;ldquo;\&amp;ldquo;, &amp;ldquo;^&amp;rdquo;, &amp;ldquo;~&amp;ldquo;,&amp;rdquo;[&amp;ldquo;, &amp;ldquo;]&amp;rdquo;,和&amp;rdquo;`&amp;rdquo;&lt;br /&gt;
，由于网关和其他传输代理有时会对这些字符进行修改，所以它们也是不安全的。&lt;br /&gt;
必须对URL中所有不安全的字符进行编码。例如，URL中的字符“#”即使是在通常不处&lt;br /&gt;
理片断或者锚点标志符的系统也需要进行编码，这样如果这个URL被拷贝到使用这些标&lt;br /&gt;
志符的系统中，也不必改变URL编码了。&lt;br /&gt;
3. 保留：&lt;br /&gt;
许多URL方案保留了一些字符并赋予特定的含义：它们出现在URL的特定部位并表示特&lt;br /&gt;
定的含义。如果一个字符对应的八位字节在方案中被保留了，那么这个八位字节必须进行&lt;br /&gt;
编码。字符&amp;rdquo;;&amp;ldquo;,&amp;rdquo;/&amp;ldquo;, &amp;ldquo;?&amp;rdquo;, &amp;ldquo;:&amp;ldquo;, &amp;ldquo;@&amp;rdquo;, &amp;ldquo;=&amp;rdquo; 和 &amp;ldquo;&amp;amp;&amp;ldquo;可能被某个方案所保留，除此之外没&lt;br /&gt;
有其他的保留字符。&lt;br /&gt;
通常情况下一个八位字节被用一个字符表示后或者被编码之后，URL的解释都是一样的。&lt;br /&gt;
但这对于保留字符来说就不适用了：对某一特定方案的保留字符进行编码可能会改变URL&lt;br /&gt;
的语义。&lt;br /&gt;
这样，在URL中只有字母与数字，以及特殊字符“$-_.+!*&amp;lsquo;(),”和用作保留目的的保留&lt;br /&gt;
字符可以不进行编码。&lt;br /&gt;
另一方面，不必进行编码的字符（包括字母与数字）如果出现在URL的特定部位，只要&lt;br /&gt;
它们不用作保留目的，则可进行编码。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;html_entity_decode&lt;br /&gt;
那么HTML Entity编码具体应该做哪些事情呢？它需要对下面这6个特殊字符进行编码：&lt;br /&gt;
HTML字符实体(Character Entities)&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;有些字符在HTML里有特别的含义，比如小于号&amp;lt;就表示HTML Tag的开始，这个小于号是不显示在我们最终看到的网页里的。那如果我们希望在网页中显示一个小于号，该怎么办呢？&lt;/p&gt;

&lt;p&gt;这就要说到HTML字符实体(HTML Character Entities)了。&lt;/p&gt;

&lt;p&gt;一个字符实体(Character Entity)分成三部分：第一部分是一个&amp;amp;符号，英文叫ampersand；第二部分是实体(Entity)名字或者是#加上实体(Entity)编号；第三部分是一个分号。&lt;/p&gt;

&lt;p&gt;比如，要显示小于号，就可以写&amp;lt;或者&amp;#60;。&lt;/p&gt;

&lt;p&gt;用实体(Entity)名字的好处是比较好理解，一看lt，大概就猜出是less than的意思，但是其劣势在于并不是所有的浏览器都支持最新的Entity名字。而实体(Entity)编号，各种浏览器都能处理。&lt;/p&gt;

&lt;p&gt;注意：Entity是区分大小写的。&lt;/p&gt;

&lt;p&gt;如何显示空格&lt;/p&gt;

&lt;p&gt;通常情况下，HTML会自动截去多余的空格。不管你加多少空格，都被看做一个空格。比如你在两个字之间加了10个空格，HTML会截去9个空格，只保留一个。为了在网页中增加空格，你可以使用&amp;nbsp;表示空格。&lt;/p&gt;

&lt;p&gt;最常用的字符实体(Character Entities)&lt;/p&gt;

&lt;p&gt;显示结果    说明    Entity Name    Entity Number&lt;/p&gt;

&lt;p&gt;显示一个空格    &amp;nbsp;    &amp;#160;&lt;br /&gt;
&amp;lt;    小于    &amp;lt;    &amp;#60;&lt;br /&gt;
&amp;gt;    大于    &amp;gt;    &amp;#62;&lt;br /&gt;
&amp;amp;    &amp;amp;符号    &amp;amp;    &amp;#38;&lt;br /&gt;
&amp;rdquo;    双引号    &amp;quot;    &amp;#34;&lt;/p&gt;

&lt;p&gt;其他常用的字符实体(Character Entities)&lt;/p&gt;

&lt;p&gt;显示结果    说明    Entity Name    Entity Number&lt;/p&gt;

&lt;p&gt;©    版权    &amp;copy;    &amp;#169;&lt;br /&gt;
®    注册商标    &amp;reg;    &amp;#174;&lt;br /&gt;
×    乘号    &amp;times;    &amp;#215;&lt;br /&gt;
÷    除号    &amp;divide;    &amp;#247;&lt;br /&gt;
```&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;查看-4e00-4eff-之间的unicode自符&#34;&gt;查看 4E00 - 4EFF 之间的unicode自符&lt;/h1&gt;

&lt;p&gt;unicode  -x 4E00..&lt;/p&gt;

&lt;p&gt;#查看 ascii&lt;/p&gt;

&lt;p&gt;字符集（Charset）：&lt;br /&gt;
ASCII字符集、GB2312字符集、BIG5字符集、GB18030字符集、Unicode字符集&lt;br /&gt;
字符编码（Character Encoding）：&lt;br /&gt;
Unicode是字符集，UTF-32/ UTF-16/ UTF-8是三种字符编码方案&lt;/p&gt;

&lt;p&gt;How to Set Locales (i18n) On a Linux or Unix&lt;br /&gt;
&lt;a href=&#34;http://www.cyberciti.biz/faq/how-to-set-locales-i18n-on-a-linux-unix/&#34; target=&#34;_blank&#34;&gt;http://www.cyberciti.biz/faq/how-to-set-locales-i18n-on-a-linux-unix/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.linuxfly.org/post/424/&#34; target=&#34;_blank&#34;&gt;http://www.linuxfly.org/post/424/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://blog.csdn.net/lwm_1985/article/details/8509506&#34; target=&#34;_blank&#34;&gt;http://blog.csdn.net/lwm_1985/article/details/8509506&lt;/a&gt;&lt;br /&gt;
1. 添加语言支持&lt;br /&gt;
  sed -i &amp;rsquo;s/# zh_CN.UTF-8 UTF-8/zh_CN.UTF-8 UTF-8/&amp;rsquo; /etc/locale.gen&lt;br /&gt;
  sed -i &amp;rsquo;s/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/&amp;rsquo; /etc/locale.gen&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;locale-gen和dpkg-reconfigure locales 都是根据 /etc/locale.gen 生成指定的语言&lt;br /&gt;
&lt;code&gt;sudo locale-gen en_US.UTF-8 |sudo locale-gen&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales&lt;/code&gt;&lt;br /&gt;
Generating locales (this might take a while)&amp;hellip;&lt;br /&gt;
en_US.UTF-8&amp;hellip; done&lt;br /&gt;
zh_CN.UTF-8&amp;hellip; done&lt;br /&gt;
Generation complete.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;update-locale&lt;/code&gt; LC_ALL= &amp;ldquo;zh_CN.UTF-8&amp;rdquo;&lt;br /&gt;
$ cat &lt;code&gt;/etc/default/locale&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;file-generated-by-update-locale&#34;&gt;File generated by update-locale&lt;/h1&gt;

&lt;p&gt;LANG=zh_CN.UTF-8&lt;br /&gt;
LANGUAGE=&amp;ldquo;zh_CN:zh&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;export LANG=zh_CN.UTF-8&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;################################################################################&lt;br /&gt;
Configuring Locales&lt;br /&gt;
The Easy Way&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Install debconf (i.e. run apt-get update then apt-get install debconf, as root)  
Run dpkg-reconfigure locales as root  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The Hard Way&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Edit /etc/locale.gen as root. If /etc/locale.gen does not exist, create it. An example /etc/locale.gen is below.  
Run /usr/sbin/locale-gen as root  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A sample /etc/locale.gen&lt;/p&gt;

&lt;h1 id=&#34;this-file-lists-locales-that-you-wish-to-have-built-you-can-find-a-list&#34;&gt;This file lists locales that you wish to have built. You can find a list&lt;/h1&gt;

&lt;h1 id=&#34;of-valid-supported-locales-at-usr-share-i18n-supported-other&#34;&gt;of valid supported locales at /usr/share/i18n/SUPPORTED. Other&lt;/h1&gt;

&lt;h1 id=&#34;combinations-are-possible-but-may-not-be-well-tested-if-you-change&#34;&gt;combinations are possible, but may not be well tested. If you change&lt;/h1&gt;

&lt;h1 id=&#34;this-file-you-need-to-rerun-locale-gen&#34;&gt;this file, you need to rerun locale-gen.&lt;/h1&gt;

&lt;h1 id=&#34;xxx-generated-xxx&#34;&gt;XXX GENERATED XXX&lt;/h1&gt;

&lt;h1 id=&#34;note-if-you-change-this-file-by-hand-and-want-to-continue&#34;&gt;NOTE!!! If you change this file by hand, and want to continue&lt;/h1&gt;

&lt;h1 id=&#34;maintaining-manually-remove-the-above-line-otherwise-use-the-command&#34;&gt;maintaining manually, remove the above line. Otherwise, use the command&lt;/h1&gt;

&lt;h1 id=&#34;dpkg-reconfigure-locales-to-manipulate-this-file-you-can-manually&#34;&gt;&amp;ldquo;dpkg-reconfigure locales&amp;rdquo; to manipulate this file. You can manually&lt;/h1&gt;

&lt;h1 id=&#34;change-this-file-without-affecting-the-use-of-debconf-however-since-it&#34;&gt;change this file without affecting the use of debconf, however, since it&lt;/h1&gt;

&lt;h1 id=&#34;does-read-in-your-changes&#34;&gt;does read in your changes.&lt;/h1&gt;

&lt;p&gt;en_US.UTF-8 UTF-8&lt;/p&gt;

&lt;p&gt;查看所有的locale语言&lt;br /&gt;
   # locale -a&lt;br /&gt;
   # locale -a|grep en&lt;/p&gt;

&lt;p&gt;■ 查看当前操作系统使用的语言&lt;/p&gt;

&lt;p&gt;# echo $LANG&lt;/p&gt;

&lt;p&gt;■ 设置系统locale语言为中文环境（永久生效）&lt;/p&gt;

&lt;h1 id=&#34;vi-etc-sysconfig-i18n&#34;&gt;vi /etc/sysconfig/i18n&lt;/h1&gt;

&lt;p&gt;LANG=&amp;ldquo;zh_CN.UTF-8&amp;rdquo;&lt;/p&gt;

&lt;p&gt;■ 设置系统locale语言为英文环境（永久生效）&lt;/p&gt;

&lt;p&gt;LANG=&amp;ldquo;en_US.UTF-8&amp;rdquo;&lt;/p&gt;

&lt;p&gt;■ 临时改变系统locale语言（退出本次登录立即失效）&lt;/p&gt;

&lt;p&gt;# export LANG=zh_CN.UTF-8&lt;/p&gt;

&lt;p&gt;■ 安装中文字体&lt;/p&gt;

&lt;p&gt;# yum install fonts-chinese.noarch&lt;/p&gt;

&lt;p&gt;■ 指定中文字体路径&lt;/p&gt;

&lt;h1 id=&#34;vi-etc-x11-fs-config&#34;&gt;vi /etc/X11/fs/config&lt;/h1&gt;

&lt;p&gt;catalogue = /usr/X11R6/lib/X11/fonts/misc:unscaled,&lt;br /&gt;
           /usr/X11R6/lib/X11/fonts/75dpi:unscaled,&lt;br /&gt;
           /usr/X11R6/lib/X11/fonts/100dpi:unscaled,&lt;br /&gt;
           /usr/X11R6/lib/X11/fonts/Type1,&lt;br /&gt;
           /usr/share/fonts/default/Type1,&lt;br /&gt;
           ,&lt;br /&gt;
           /usr/share/fonts/zh_CN/TrueType,&lt;br /&gt;
           /usr/share/fonts/zh_TW/TrueType&lt;/p&gt;

&lt;p&gt;方法2&lt;/p&gt;

&lt;p&gt;修改CentOS运行环境的默认语言环境变量值&lt;/p&gt;

&lt;p&gt;[root@www ~]# vi /etc/profile&lt;/p&gt;

&lt;p&gt;找到export语句，在语句前面加入&lt;/p&gt;

&lt;p&gt;LANG=”en_US.UTF-8″&lt;/p&gt;

&lt;p&gt;再在export后面追加LANG&lt;/p&gt;

&lt;p&gt;export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE INPUTRC LANG&lt;/p&gt;

&lt;p&gt;保存配置，修改CentOS语言完成。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Linux 下/etc/fstab文件详解</title>
            <link>http://blog.pytool.com/linux/2016-01-01-linux-fstab/</link>
            <pubDate>Tue, 27 Sep 2016 15:58:27 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2016-01-01-linux-fstab/</guid>
            <description>&lt;p&gt;有很多人经常修改/etc/fstab文件，但是其中却有很多人对这个文件所表达的意义不太清楚，因为只要按照一定的模式，就可以轻而易举地添加一行挂载信息，而不需要完全理解其中的原理。&lt;/p&gt;

&lt;p&gt;/etc/fstab是用来存放文件系统的静态信息的文件。位于/etc/目录下，可以用命令less /etc/fstab 来查看，如果要修改的话，则用命令 vi /etc/fstab 来修改。&lt;/p&gt;

&lt;p&gt;当系统启动的时候，系统会自动地从这个文件读取信息，并且会自动将此文件中指定的文件系统挂载到指定的目录。下面我来介绍如何在此文件下填写信息。&lt;/p&gt;

&lt;p&gt;在这个文件下，我们要关注的是它的六个域，分别为：&lt;file system&gt;、&lt;mount point&gt;、&lt;type&gt; 、&lt;options&gt;、&lt;dump&gt;、&lt;pass&gt;。下面将详细介绍这六个域的详细意义。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;fie sysytem&gt;。这里用来指定你要挂载的文件系统的设备名称或块信息，也可以是远程的文件系统。做过嵌入式linux开发的朋友都可能知道 mount 192.168.1.56:/home/nfs /mnt/nfs/ -o nolock (可以是其他IP)命令所代表的意义。它的任务是把IP为192.168.1.56的远程主机上的/home/nfs/目录挂载到本机的/mnt/nfs /目录之下。如果要把它写进/etc/fstab文件中，file system这部分应填写为：/192.168.1.56:/home/nfs/。&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果想把本机上的某个设备（device）挂载上来，写法如：/dev/sda1、/dev/hda2或/dev/cdrom，其中，/dev/sda1 表示第一个串口硬盘的第一个分区，也可以是第一个SCSI硬盘的第一个分区，/dev/hda1表示第一个IDE硬盘的第一个分区，/dev/cdrom 表示光驱。&lt;/p&gt;

&lt;p&gt;此外，还可以label(卷标)或UUID（Universally Unique Identifier全局唯一标识符）来表示。用label表示之前，先要e2label创建卷标，如：e2label /dir_1 /dir_2，其意思是说用/dir_2来表示/dir_1的名称。然后，再在/etc/fstab下按如下形式添加：LABEL=/dir_2 /dir_2 &lt;type&gt;   &lt;options&gt; &lt;dump&gt; &lt;pass&gt;。重启后，系统就会将/dir_1挂载到/dir_2目录上。对于UUID，可以用blkid -o value -s UUID /dev/sdxx来获取。比如我想挂载第一块硬盘的第十一个分区，先用命令blkid -o value -s UUID /dev/sda11 来取得UUID，比如是：5dc08a62-3472-471b-9ef5-0a91e5e2c126，然后在&lt;file system&gt;这个域上填写： UUID=5dc08a62-3472-471b-9ef5-0a91e5e2c126，即可表示/dev/sda11。Red Hat linux 一般会使用label，而Ubuntu linux 一般会用UUID。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;mount point&gt;。挂载点，也就是自己找一个或创建一个dir（目录），然后把文件系统&lt;fie sysytem&gt;挂到这个目录上，然后就可以从这个目录中访问要挂载文件系统。对于swap分区，这个域应该填写：none，表示没有挂载点。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;type&gt;。这里用来指定文件系统的类型。下面的文件系统都是目前Linux所能支持的：adfs、befs、cifs、ext3、 ext2、ext、iso9660、kafs、minix、msdos、vfat、umsdos、proc、reiserfs、swap、 squashfs、nfs、hpfs、ncpfs、ntfs、affs、ufs。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;options&gt;。这里用来填写设置选项，各个选项用逗号隔开。由于选项非常多，而这里篇幅有限，所以不再作详细介绍，如需了解，请用命令 man mount 来查看。但在这里有个非常重要的关键字需要了解一下：defaults，它代表包含了选项rw,suid,dev,exec,auto,nouser和 async。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;dump&gt;。此处为1的话，表示要将整个&lt;fie sysytem&gt;里的内容备份；为0的话，表示不备份。现在很少用到dump这个工具，在这里一般选0。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;pass&gt;。这里用来指定如何使用fsck来检查硬盘。如果这里填0，则不检查；挂载点为 / 的（即根分区），必须在这里填写1，其他的都不能填写1。如果有分区填写大于1的话，则在检查完根分区后，接着按填写的数字从小到大依次检查下去。同数字的同时检查。比如第一和第二个分区填写2，第三和第四个分区填写3，则系统在检查完根分区后，接着同时检查第一和第二个分区，然后再同时检查第三和第四个分区。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;参考文献：&lt;br /&gt;
1、On-line reference manuals of Linux (用命令 man 5 fstab 查看)。&lt;br /&gt;
2、Linux Bible 2008 Edition.   By Christopher Negus. Published by Wiley Publishing, Inc.2008&lt;br /&gt;
3、Linux Administration Handbook (Second Edition)    By [US] Evi Nemeth   Garth Snyder   Trent R. Hein .    Published by Pearson Education,Inc.2007&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Linux 时区设置</title>
            <link>http://blog.pytool.com/linux/2016-01-01-linux%E6%97%B6%E5%8C%BA%E8%AE%BE%E7%BD%AE/</link>
            <pubDate>Tue, 27 Sep 2016 15:58:27 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2016-01-01-linux%E6%97%B6%E5%8C%BA%E8%AE%BE%E7%BD%AE/</guid>
            <description>

&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000005026503&#34; target=&#34;_blank&#34;&gt;https://segmentfault.com/a/1190000005026503&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GMT + 8 = UTC + 8 = CST
CST= UTC + 8 = GMT + 8  北京时间等于 UTC + 8 小时
CST:中国标准时间（China Standard Time)  等价于&lt;br /&gt;
UTC:世界标准时间(Universal Time/Temps Cordonn&amp;amp;eacute) + 8&lt;br /&gt;
GMT：格林尼治标准时间(Greenwich Mean Time) 等于UTC时间&lt;br /&gt;
PST是太平洋标准时间（西八区），与北京时间（东八区）时差-16个小时，也就是北京时间减去16就是PST时间。而PDT比PST早1个小时，就是说PDT与北京时间时差为-15小时&lt;br /&gt;
&lt;code&gt;timedatectl&lt;/code&gt;
      Local time: Mon 2018-01-15 18:07:21 CST
  Universal time: Mon 2018-01-15 10:07:21 UTC
        RTC time: Mon 2018-01-15 18:07:21
       Time zone: Asia/Shanghai (CST, +0800)
     NTP enabled: yes
NTP synchronized: yes
 RTC in local TZ: yes
      DST active: n/a&lt;/p&gt;

&lt;h1 id=&#34;linux-如何计算系统显示时间&#34;&gt;linux 如何计算系统显示时间&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;** 计算机上显示时间 locatetime&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;硬件时间 就是主板上BIOS的RTC 时钟时间&lt;br /&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置时区 [UTC] 就是伦敦时间 [PRC]是Asia/Shanghai别名 北京时间 可以通过tzselect进行设置&lt;br /&gt;
Linux系统上显示的time总是通过系统上的timezone设置的&lt;/p&gt;

&lt;h1 id=&#34;如何保证windows和linux时间同步&#34;&gt;如何保证windows和linux时间同步？&lt;/h1&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置显示时间为  本地时间(Local time) CST - timedatectl set-local-rtc 1 &amp;ndash;adjust-system-clock  | sudo timedatectl &amp;ndash;adjust-system-clock set-local-rtc true&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;硬件时间[RTC]为 本地时间(Local time) CST - hwclock &amp;ndash;systohc &amp;ndash;localtime  # 将LOCAL时间存入RTC&lt;br /&gt;
注意: RTC设为本地时间会有告警;
因为硬件时钟不能保存时区和夏令时调整，修改后就无法从硬件时钟中读取出准确标准时间；不建议修改。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;设置时区&#34;&gt;设置时区&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;设置硬件[RTC]时间为(UTC)&lt;br /&gt;
timedatectl set-local-rtc 0 &amp;ndash;adjust-system-clock  # 设置硬件时间为(UTC)&lt;br /&gt;
##等效命令&lt;br /&gt;
hwclock &amp;ndash;systohc &amp;ndash;utc        # 将UTC时间存入RTC&lt;br /&gt;
hwclock &amp;ndash;systohc &amp;ndash;localtime  # 将LOCAL时间存入RTC&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置 timezone &lt;code&gt;/etc/timezone&lt;/code&gt;&lt;br /&gt;
echo &amp;ldquo;Asia/Shanghai&amp;rdquo; &amp;gt; /etc/timezone&lt;br /&gt;
timedatectl set-timezone UTC&lt;br /&gt;
timedatectl set-timezone PRC&lt;br /&gt;
&lt;code&gt;timedatectl set-timezone Asia/Shanghai&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置本地时间localtime &lt;code&gt;/etc/localtime&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;sudo dpkg-reconfigure -f noninteractive tzdata&lt;/code&gt;&lt;br /&gt;
等价 &lt;code&gt;sudo DEBIAN_FRONTEND=noninteractive dpkg-reconfigure tzdata&lt;/code&gt;&lt;br /&gt;
等价 &lt;code&gt;ln -snf /usr/share/zoneinfo/$TZ /etc/localtime&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;timedatectl list-timezones&lt;br /&gt;
timedatectl set-timezone “Asia/Kolkata”&lt;br /&gt;
timedatectl set-local-rtc 0&lt;br /&gt;
timedatectl set-ntp true&lt;/p&gt;

&lt;p&gt;2.设置日期与时间&lt;/p&gt;

&lt;p&gt;timedatectl set-time &amp;ldquo;YYYY-MM-DD HH:MM:SS&amp;rdquo;
timedatectl set-time &amp;ldquo;YYYY-MM-DD&amp;rdquo;
timedatectl set-time &amp;ldquo;HH:MM:SS&amp;rdquo;&lt;/p&gt;

&lt;p&gt;################################################################################&lt;br /&gt;
最近在搞RTC，常用的两个命令式 date 和 hwclock。&lt;/p&gt;

&lt;p&gt;date命令：操作内核时间（可以理解为软件时间）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#date -s 20110120        //设置本地日期为 2011年01月20号，这样会把具体时间设置成空00:00:00  
#date -s 12:23:23        //设置本地时间，不会对日期做更改  
#date -s &amp;quot;12:12:23 2011-01-20&amp;quot;   //设置日期和具体时间  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hwclock命令：操作硬件RTC芯片时间（可以理解为硬件时间）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hwclock -r or hwclock --show           显示硬件时钟与日期  
hwclock -s or hwclock --hctosys        将系统时钟调整为与目前的硬件时钟一致。  
hwclock -w or hwclock --systohc        将硬件时钟调整为与目前的系统时钟一致。  

功能说明：显示与设定硬件时钟。  
    语法：hwclock [--adjust][--debug][--directisa][--hctosys][--show][--systohc][--test]  
[--utc][--version][--set --date=&amp;lt;日期与时间&amp;gt;]  

    补充说明：在Linux中有硬件时钟与系统时钟等两种时钟。硬件时钟是指主机板上的时钟设备，也就是通常可在BIOS画面设定的时钟。系统时钟则是指 kernel中的时钟。当Linux启动时，系统时钟会去读取硬件时钟的设定，之后系统时钟即独立运作。所有Linux相关指令与函数都是读取系统时钟的设定。  

    参数：  
    --adjust 　hwclock每次更改硬件时钟时，都会记录在/etc/adjtime文件中。使用--adjust参数，可使hwclock根据先前的记录来估算硬件时钟的偏差，并用来校正目前的硬件时钟。  
    --debug 　显示hwclock执行时详细的信息。  
    --directisa hwclock预设从/dev/rtc设备来存取硬件时钟。若无法存取时，可用此参数直接以I/O指令来存取硬件时钟。  
    --hctosys   将系统时钟调整为与目前的硬件时钟一致。  
    --set --date=&amp;lt;日期与时间&amp;gt; 　设定硬件时钟。  
    --show      显示硬件时钟的时间与日期。  
    --systohc   将硬件时钟调整为与目前的系统时钟一致。  
    --test      仅测试程序，而不会实际更改硬件时钟。  
    --utc       若要使用格林威治时间，请加入此参数，hwclock会执行转换的工作。  
    --version   显示版本信息  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; Linux时间相差8小时备忘录 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;p&gt;一、内核启动时&lt;/p&gt;

&lt;p&gt;内核先读取配置文件 /etc/sysconfig/clock 来确定RTC存的是LOCAL or UTC&lt;/p&gt;

&lt;p&gt;vi /etc/sysconfig/clock&lt;/p&gt;

&lt;p&gt;ZONE=&amp;ldquo;Asia/Shanghai&amp;rdquo;      # 本地时区&lt;br /&gt;
UTC=true                  # true表示RTC保存的时间是UTC时间，false表示保存的是本地时间&lt;br /&gt;
ARC=false                 # 参考hwclock的manpage&lt;br /&gt;
SRM=false&lt;/p&gt;

&lt;p&gt;接着内核调用函数 rtc_systohc()，从RTC内读时间，并根据LOCAL or UTC来设置系统时间&lt;/p&gt;

&lt;p&gt;二、hwclock设置RTC芯片&lt;/p&gt;

&lt;p&gt;hwclock &amp;ndash;systohc &amp;ndash;utc        # 将UTC时间存入RTC&lt;br /&gt;
hwclock &amp;ndash;systohc &amp;ndash;localtime  # 将LOCAL时间存入RTC&lt;/p&gt;

&lt;p&gt;hwclock &amp;ndash;systohc&lt;br /&gt;
没有指定LOCAL or UTC，hwclock 根据配置来确定RTC里面存LOCAL orUTC&lt;br /&gt;
找配置文件的优先级顺序为：&lt;br /&gt;
    $ADJTIME_PATH、/var/state/adjtime、/var/lib/hwclock/adjtime、/etc/adjtime&lt;br /&gt;
配置文件内有写LOCAL 或 RTC&lt;br /&gt;
没有配置文件的话，hwclock认为RTC里面存的是LOCAL&lt;/p&gt;

&lt;p&gt;三、时区配置&lt;/p&gt;

&lt;p&gt;cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&lt;br /&gt;
########&lt;br /&gt;
I&amp;rsquo;ve been using the following script to set Ubuntu 14.04 servers to UTC timezone:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;Etc/UTC&amp;quot; &amp;gt; /etc/timezone  
dpkg-reconfigure --frontend noninteractive tzdata  
echo UTC=yes &amp;gt;&amp;gt; /etc/default/rcS  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, in 16.04 it seems that I can configure everything with timedatectl. Now my script looks like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;timedatectl set-local-rtc 0   # 设置硬件时间为(UTC)  
timedatectl set-timezone UTC  # 设置显示时间为 (UTC)  
timedatectl set-ntp 1  

timedatectl set-local-rtc 1   # 设置硬件时钟为本地时区(PRC)  
timedatectl set-timezone PRC  # 设显示时间为中国区时间(UTC+8)  
timedatectl  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将你的硬件时钟设置为本地时区(PRC)：&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-local-rtc-1&#34;&gt;timedatectl set-local-rtc 1&lt;/h1&gt;

&lt;p&gt;将你的硬件时钟设置为协调世界时（UTC）：&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-local-rtc-0&#34;&gt;timedatectl set-local-rtc 0&lt;/h1&gt;

&lt;p&gt;将Linux系统时钟同步到远程NTP服务器&lt;/p&gt;

&lt;p&gt;NTP即Network Time Protocol（网络时间协议），是一个互联网协议，用于同步计算机之间的系统时钟。timedatectl实用程序可以自动同步你的Linux系统时钟到使用NTP的远程服务器。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;，你必须在系统上安装NTP以实现与NTP服务器的自动时间同步。&lt;/p&gt;

&lt;p&gt;要开始自动时间同步到远程NTP服务器，在终端键入以下命令。&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-ntp-true&#34;&gt;timedatectl set-ntp true&lt;/h1&gt;

&lt;p&gt;要禁用NTP时间同步，在终端键入以下命令。&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-ntp-false&#34;&gt;timedatectl set-ntp false&lt;/h1&gt;

&lt;p&gt;只设置时间的话，我们可以使用set-time开关以及HH：MM：SS（小时，分，秒）的时间格式。&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-time-15-58-30&#34;&gt;timedatectl set-time 15:58:30&lt;/h1&gt;

&lt;p&gt;7.只设置日期的话，我们可以使用set-time开关以及YY：MM：DD（年，月，日）的日期格式。&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-time-20151120&#34;&gt;timedatectl set-time 20151120&lt;/h1&gt;

&lt;p&gt;8.设置日期和时间：&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-time-16-10-40-2015-11-20&#34;&gt;timedatectl set-time &amp;lsquo;16:10:40 2015-11-20&amp;rsquo;&lt;/h1&gt;

&lt;p&gt;通用协调时(UTC, Universal Time Coordinated) 与 格林尼治平均时(GMT, Greenwich Mean Time) 与北京时间的关系。&lt;br /&gt;
GMT=UTC&lt;br /&gt;
UTC+8=北京时间&lt;/p&gt;

&lt;p&gt;UTC和GMT都是指的格林尼治标准时间，只不过UTC的称呼更为正式一点。两者的区别在于前者是一个天文上的概念，而后者是基于一个原子钟。在UTC中，每一年或两年会有一个“闰秒”，而我们一般不理 会这个“闰秒”，但是在Java中，这造成我们有时会出现60秒或61秒。&lt;br /&gt;
整个地球分为二十四时区，每个时区都有自己的本地时间。在国际无线电通信场合，为了统一起见，使用一个统一的时间，称为通用协调时(UTC, Universal Time Coordinated)。UTC与格林尼治平均时(GMT, Greenwich Mean Time)一样，都与英国伦敦的本地时相同。在本文中，UTC与GMT含义完全相同。&lt;br /&gt;
北京时区是东八区，领先UTC八个小时，在电子邮件信头的Date域记为+0800。如果在电子邮件的信头中有这么一行：&lt;br /&gt;
Date: Fri, 08 Nov 2002 09:42:22 +0800&lt;br /&gt;
说明信件的发送地的地方时间是二○○二年十一月八号，星期五，早上九点四十二分（二十二秒），这个地方的本地时领先UTC八个小时(+0800， 就是东八区时间)。电子邮件信头的Date域使用二十四小时的时钟，而不使用AM和PM来标记上下午。&lt;/p&gt;

&lt;p&gt;以这个电子邮件的发送时间为例，如果要把这个时间转化为UTC，可以使用一下公式：&lt;br /&gt;
UTC + 时区差 ＝ 本地时间&lt;br /&gt;
时区差东为正，西为负。在此，把东八区时区差记为 +0800，&lt;br /&gt;
&lt;code&gt;UTC + (＋0800) = 本地（北京）时间 (1)&lt;/code&gt;&lt;br /&gt;
那么，&lt;code&gt;UTC = 本地时间（北京时间)）- 0800 (2)&lt;/code&gt;&lt;br /&gt;
0942 - 0800 = 0142&lt;br /&gt;
即UTC是当天凌晨一点四十二分二十二秒。如果结果是负数就意味着是UTC前一天，把这个负数加上2400就是UTC在前一天的时间。例如，本地（北京）时间是 0432 （凌晨四点三十二分），那么，UTC就是 0432 - 0800 = -0368，负号意味着是前一天， -0368 + 2400 = 2032，既前一天的晚上八点三十二分。&lt;br /&gt;
纽约的时区是西五区，比UTC落后五个小时，记为 -0500：&lt;br /&gt;
UTC ＋ （-0500） = 纽约时间 （3）&lt;br /&gt;
UTC ＝ 纽约时间 ＋ 0500 （4）&lt;br /&gt;
把（2）式 － （4）式相比较，&lt;br /&gt;
UTC = 北京时间 － 0800 ＝ 纽约时间 ＋ 0500 （5）&lt;br /&gt;
即 北京时间 ＝ 纽约时间 ＋ 1300 （6）&lt;br /&gt;
即北京时间领先纽约时间十 三个小时，由（6）式，&lt;br /&gt;
纽约时间 ＝ 北京时间 － 1300 （7）&lt;br /&gt;
在四月下旬，纽约又换用夏令时，又称为日光节约时，比标准纽约时间提前一个小时，实际成为西四区的标准时间，成为 -0400。&lt;br /&gt;
UTC ＋ （－0400） = 纽约夏令时，套用以上公式，&lt;br /&gt;
北京时间 ＝ 纽约夏令时 ＋ 1200&lt;br /&gt;
纽约夏令时 ＝ 北京时间 － 1200&lt;br /&gt;
在这些转换中，最重要的公式就是&lt;br /&gt;
UTC ＋ 时区差 ＝ 本地时间&lt;br /&gt;
时区差东为正，西为负。例如，东八区（北京）是 +0800，西五区（纽约）是-0500，加州是西八区，是-0800，美国中部时区是西六区，-0600，美国山地时区是西七区，-0700，太平洋时区是西八区，-0800，在夏天使用夏时制，成为-0700。德国时区是东一区，+0100，夏天变为+0200。&lt;br /&gt;
多数电子邮件程序，例如Outlook Express，在显示时间时，计算机程序把时间先转换成为本地时间再显示，例如，邮件的Date域为：&lt;br /&gt;
Date: Fri, 08 Nov 2002 09:42:22 +0800&lt;br /&gt;
Outlook Express在显示时就显示为：&lt;br /&gt;
Date: Thur, 07 Nov 2002 08:42:22 pm，把北京时间转换成为了纽约时间，而且把二十四小时格式的时间转换成为了十二小时的格式。当然，为了时间转换正确，发送方和接受方的计算机的时区都要设置正确，在这里，发送方的时区要正确地设为北京时区东八区，而我的时区要设为西五区。&lt;br /&gt;
为了方便起见，我在这里放上纽约，加洲以及北京实时显示的时钟，以省去计算的麻烦。&lt;/p&gt;

&lt;p&gt;格林尼治标准时间（GMT，旧译“格林威治平均时间”或“格林威治标准时间”）是指位于伦敦郊区的皇家格林尼治天文台的标准时间，因为本初子午线被定义在通过那里的经线。&lt;br /&gt;
  理论上来说，格林尼治标准时间的正午是指当太阳横穿格林尼治子午线时（也就是在格林尼治上空最高点时）的时间。由于地球在它的椭圆轨道里的运动速度不均匀，这个时刻可能和实际的太阳时相差16分钟。&lt;br /&gt;
  地球每天的自转是有些不规则的，而且正在缓慢减速。所以，格林尼治时间已经不再被作为标准时间使用。现在的标准时间——协调世界时（UTC）——由原子钟提供。&lt;br /&gt;
  自1924年2月5日开始，格林尼治天文台每隔一小时会向全世界发放调时信息&lt;br /&gt;
  中国大陆、中国香港、中国澳门、中国台湾、蒙古国、新加坡、马来西亚、菲律宾、西澳大利亚州的时间与UTC的时差均为+8，也就是UTC+8&lt;/p&gt;

&lt;h1 id=&#34;时间以及时区设置&#34;&gt;时间以及时区设置&lt;/h1&gt;

&lt;p&gt;首先确认使用[UTC]还是local time.&lt;br /&gt;
1. UTC(Universal Time Coordinated)=GMT(Greenwich Mean Time)&lt;br /&gt;
2. Local time 是你手表上的时间&lt;/p&gt;

&lt;p&gt;传统的POSIX计算机(Solaris,bsd,unix)使用UTC格式&lt;br /&gt;
linux可以处理UTC时间和蹩脚的Windows所使用的local time&lt;/p&gt;

&lt;p&gt;到底是使用UTC还是local time可以这样来确定：&lt;br /&gt;
如果机器上同时安装有Linux和Windows，建议使用local time&lt;br /&gt;
如果机器上只安装有Linux，建议使用utc&lt;br /&gt;
确定后编辑/etc/sysconfig/clock, UTC=0 是local time; UTC=1 是UTC(GMT)&lt;/p&gt;

&lt;p&gt;1) 使用cat /etc/sysconfig/clock查看当前时区&lt;br /&gt;
linux5:~ # cat /etc/sysconfig/clock&lt;/p&gt;

&lt;h2 id=&#34;path-system-environment-clock&#34;&gt;Path:                System/Environment/Clock&lt;/h2&gt;

&lt;h2 id=&#34;description-information-about-your-timezone-and-time&#34;&gt;Description:         Information about your timezone and time&lt;/h2&gt;

&lt;h2 id=&#34;type-string&#34;&gt;Type:                string&lt;/h2&gt;

&lt;h2 id=&#34;servicerestart-boot-clock&#34;&gt;ServiceRestart:      boot.clock&lt;/h2&gt;

&lt;h1 id=&#34;set-to-u-if-your-system-clock-is-set-to-utc-and-to-localtime&#34;&gt;Set to &amp;ldquo;-u&amp;rdquo; if your system clock is set to UTC, and to &amp;ldquo;&amp;ndash;localtime&amp;rdquo;&lt;/h1&gt;

&lt;h1 id=&#34;if-your-clock-runs-that-way&#34;&gt;if your clock runs that way.&lt;/h1&gt;

&lt;p&gt;HWCLOCK=&amp;ldquo;-u&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;type-string-europe-berlin-europe-london-europe-paris&#34;&gt;Type:                string(Europe/Berlin,Europe/London,Europe/Paris)&lt;/h2&gt;

&lt;h2 id=&#34;servicerestart-boot-clock-1&#34;&gt;ServiceRestart:      boot.clock&lt;/h2&gt;

&lt;h1 id=&#34;timezone-e-g-cet&#34;&gt;Timezone (e.g. CET)&lt;/h1&gt;

&lt;h1 id=&#34;this-will-set-usr-lib-zoneinfo-localtime&#34;&gt;(this will set /usr/lib/zoneinfo/localtime)&lt;/h1&gt;

&lt;p&gt;TIMEZONE=&amp;ldquo;US/Pacific&amp;rdquo;&lt;br /&gt;
DEFAULT_TIMEZONE=&amp;ldquo;US/Pacific&amp;rdquo;&lt;br /&gt;
linux5:~ #&lt;/p&gt;

&lt;p&gt;2) 使用tzselect设置时区,最后结果如下&lt;/p&gt;

&lt;p&gt;You can make this change permanent for yourself by appending the line&lt;br /&gt;
        TZ=&amp;lsquo;Asia/Shanghai&amp;rsquo;; export TZ&lt;br /&gt;
to the file &amp;lsquo;.profile&amp;rsquo; in your home directory; then log out and log in again.&lt;/p&gt;

&lt;p&gt;Here is that TZ value again, this time on standard output so that you&lt;br /&gt;
can use the /usr/bin/tzselect command in shell scripts:&lt;br /&gt;
Asia/Shanghai&lt;br /&gt;
linux5:~ #&lt;/p&gt;

&lt;p&gt;3) 复制相应的时区文件，替换系统默认时区&lt;br /&gt;
linux5:~ # cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&lt;br /&gt;
linux5:~ #&lt;/p&gt;

&lt;p&gt;4) 将当前时间写入BIOS永久生效（避免重启后失效）&lt;br /&gt;
linux5:~ # hwclock&lt;br /&gt;
Tue Jan 29 18:22:59 2008  -0.565688 seconds&lt;br /&gt;
linux5:~ #&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;配置ntp客户端&lt;br /&gt;
编辑/etc/ntp.conf,增加一行server 10.30.1.10,其中10.30.1.105就是时钟服务器,如下&lt;br /&gt;
linux:/var/log # grep -v # /etc/ntp.conf&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;server 10.30.1.105&lt;/p&gt;

&lt;p&gt;查看ntp服务的状态&lt;br /&gt;
linux:/var/log # /etc/init.d/xntpd  status&lt;br /&gt;
Checking for network time protocol daemon (NTPD):                    unused&lt;/p&gt;

&lt;p&gt;设置时区以及时间&lt;br /&gt;
/usr/sbin/zic -l PRC&lt;br /&gt;
/bin/date &amp;ldquo;+%H:%M:%S - %d-%m-%Y&amp;rdquo;&lt;/p&gt;

&lt;p&gt;写回硬件时钟&lt;br /&gt;
/sbin/hwclock &amp;ndash;hctosys &amp;ndash;localtime&lt;br /&gt;
或者写回硬件时钟： hwclock &amp;ndash;systohc&lt;/p&gt;

&lt;p&gt;在/etc/rc.d/rc5.d创建xntp服务的启动脚本&lt;br /&gt;
linux:/etc/rc.d/rc5.d # ln -s ../xntpd S14xntpd&lt;br /&gt;
查看ntp时间调整纪录&lt;br /&gt;
linux:/var/log # grep ntp messages&lt;br /&gt;
Aug 14 07:19:51 linux ntpdate[2837]: step time server 10.30.1.105 offset 2.010174 sec&lt;br /&gt;
Aug 14 07:19:51 linux ntpd[2884]: ntpd 4.2.0a@1.1213-r Wed Jun 30 18:37:03 UTC 2004 (1)&lt;br /&gt;
Aug 14 07:19:51 linux ntpd[2884]: precision = 1.000 usec&lt;br /&gt;
Aug 14 07:19:51 linux ntpd[2884]: Listening on interface wildcard, 0.0.0.0#123&lt;br /&gt;
Aug 14 07:19:51 linux ntpd[2884]: Listening on interface wildcard, ::#123&lt;br /&gt;
Aug 14 07:19:51 linux ntpd[2884]: Listening on interface lo, 127.0.0.1#123&lt;br /&gt;
Aug 14 07:19:51 linux ntpd[2884]: Listening on interface eth0, 10.40.157.66#123&lt;br /&gt;
Aug 14 07:19:51 linux ntpd[2884]: kernel time sync status 0040&lt;/p&gt;

&lt;p&gt;mmscbill:~ # date&lt;br /&gt;
Wed May  7 15:53:10 CST 2008&lt;br /&gt;
这里时区设置没有错. PRC是时区的名称,它对应/usr/share/lib/zoneinfo下的PRC时区文件.&lt;br /&gt;
CST是Chinese Standard Time的缩写,用在date命令的输出中.它是定义在PRC时区文件中.看&lt;br /&gt;
一下/usr/share/lib/zoneinfo/src下的asia文件就知道是怎么回事了.&lt;/p&gt;

&lt;p&gt;修改系统时间(bjchenxu，laixi781211，hutuworm)&lt;br /&gt;
date -s “2003-04-14 cst”，cst指时区，时间设定用date -s 18:10&lt;br /&gt;
修改后执行clock -w 写到CMOS&lt;br /&gt;
hwclock &amp;ndash;systohc&lt;br /&gt;
set the hardware clock to the current system time&lt;/p&gt;

&lt;p&gt;timedatectl命令对于RHEL / CentOS 7和基于Fedora 21+的分布式系统来说，是一个新工具，它作为systemd系统和服务管理器的一部分，代替旧的传统的用在基于Linux分布式系统的sysvinit守护进程的date命令。&lt;/p&gt;

&lt;p&gt;timedatectl命令可以查询和更改系统时钟和设置，你可以使用此命令来设置或更改当前的日期，时间和时区，或实现与远程NTP服务器的自动系统时钟同步。&lt;/p&gt;

&lt;p&gt;在本教程中，我要讲的是，如何在你的Linux系统上，通过使用来自于终端使用timedatectl命令的NTP，设置date、time、timezone和synchronize time来管理时间。&lt;/p&gt;

&lt;p&gt;让你的Linux服务器或系统保持正确的时间是一个很好的实践，它有以下优点：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;维护及时操作的系统任务，因为在Linux中的大多数任务都是由时间来控制的。  
记录事件和系统上其它信息等的正确时间。  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如何查找和设置Linux本地时区&lt;/p&gt;

&lt;p&gt;1.要显示系统的当前时间和日期，使用命令行中的timedatectl命令，如下：&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-status&#34;&gt;timedatectl  status&lt;/h1&gt;

&lt;p&gt;在上面的示例中，RTC time就是硬件时钟的时间。&lt;/p&gt;

&lt;p&gt;2.Linux系统上的time总是通过系统上的timezone设置的，要查看当前时区，按如下做：&lt;/p&gt;

&lt;h1 id=&#34;timedatectl&#34;&gt;timedatectl&lt;/h1&gt;

&lt;p&gt;OR&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-grep-time&#34;&gt;timedatectl | grep Time&lt;/h1&gt;

&lt;p&gt;3.要查看所有可用的时区，运行以下命令：&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-list-timezones&#34;&gt;timedatectl list-timezones&lt;/h1&gt;

&lt;p&gt;4.要根据地理位置找到本地的时区，运行以下命令：&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-list-timezones-egrep-o-asia-b&#34;&gt;timedatectl list-timezones |  egrep  -o “Asia/B.*”&lt;/h1&gt;

&lt;h1 id=&#34;timedatectl-list-timezones-egrep-o-europe-l&#34;&gt;timedatectl list-timezones |  egrep  -o “Europe/L.*”&lt;/h1&gt;

&lt;h1 id=&#34;timedatectl-list-timezones-egrep-o-america-n&#34;&gt;timedatectl list-timezones |  egrep  -o “America/N.*”&lt;/h1&gt;

&lt;p&gt;5.要在Linux中设置本地时区，使用set-timezone开关，如下所示。&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-timezone-asia-kolkata&#34;&gt;timedatectl set-timezone “Asia/Kolkata”&lt;/h1&gt;

&lt;p&gt;推荐使用和设置协调世界时，即UTC。&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-timezone-utc&#34;&gt;timedatectl set-timezone UTC&lt;/h1&gt;

&lt;p&gt;你需要输入正确命名的时区，否者在你改变时区的时候，可能会发生错误。在下面的例子中，由于 “Asia/Kalkata” 这个时区是不正确的，因此导致了错误。&lt;/p&gt;

&lt;p&gt;如何在Linux中设置时间和日期&lt;/p&gt;

&lt;p&gt;6.你可以使用timedatectl命令，设置系统上的日期和时间，如下所示：&lt;/p&gt;

&lt;p&gt;设置Linux中的时间&lt;/p&gt;

&lt;p&gt;只设置时间的话，我们可以使用set-time开关以及HH：MM：SS（小时，分，秒）的时间格式。&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-time-15-58-30-1&#34;&gt;timedatectl set-time 15:58:30&lt;/h1&gt;

&lt;p&gt;在Linux中设置日期&lt;/p&gt;

&lt;p&gt;7.只设置日期的话，我们可以使用set-time开关以及YY：MM：DD（年，月，日）的日期格式。&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-time-20151120-1&#34;&gt;timedatectl set-time 20151120&lt;/h1&gt;

&lt;p&gt;8.设置日期和时间：&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-time-16-10-40-2015-11-20-1&#34;&gt;timedatectl set-time &amp;lsquo;16:10:40 2015-11-20&amp;rsquo;&lt;/h1&gt;

&lt;p&gt;如何在Linux中查找和设置硬件时钟&lt;/p&gt;

&lt;p&gt;9.要设置硬件时钟以协调世界时，UTC，可以使用 set-local-rtc boolean-value选项，如下所示：&lt;/p&gt;

&lt;p&gt;首先确定你的硬件时钟是否设置为本地时区：&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-grep-local&#34;&gt;timedatectl | grep local&lt;/h1&gt;

&lt;p&gt;将你的硬件时钟设置为本地时区：&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-local-rtc-1-1&#34;&gt;timedatectl set-local-rtc 1&lt;/h1&gt;

&lt;p&gt;将你的硬件时钟设置为协调世界时（UTC）：&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-local-rtc-0-1&#34;&gt;timedatectl set-local-rtc 0&lt;/h1&gt;

&lt;p&gt;将Linux系统时钟同步到远程NTP服务器&lt;/p&gt;

&lt;p&gt;NTP即Network Time Protocol（网络时间协议），是一个互联网协议，用于同步计算机之间的系统时钟。timedatectl实用程序可以自动同步你的Linux系统时钟到使用NTP的远程服务器。&lt;/p&gt;

&lt;p&gt;注意，你必须在系统上安装NTP以实现与NTP服务器的自动时间同步。&lt;/p&gt;

&lt;p&gt;要开始自动时间同步到远程NTP服务器，在终端键入以下命令。&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-ntp-true-1&#34;&gt;timedatectl set-ntp true&lt;/h1&gt;

&lt;p&gt;要禁用NTP时间同步，在终端键入以下命令。&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-ntp-false-1&#34;&gt;timedatectl set-ntp false&lt;/h1&gt;

&lt;p&gt;总结&lt;/p&gt;

&lt;p&gt;本教程中描述的都是一些非常简单的例子，希望它们能对你设置各种Linux系统时钟和时区有帮助。有不同的看法，也请不吝指教。&lt;/p&gt;

&lt;p&gt;译文链接：&lt;a href=&#34;http://www.codeceo.com/article/linux-timedatectl-set-time.html&#34; target=&#34;_blank&#34;&gt;http://www.codeceo.com/article/linux-timedatectl-set-time.html&lt;/a&gt;&lt;br /&gt;
英文原文：How to Set Time, Timezone and Synchronize System Clock Using timedatectl Comman&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Linux 用文件作为Swap分区</title>
            <link>http://blog.pytool.com/linux/2016-01-01-linux-swap%E5%88%86%E5%8C%BA%E6%96%87%E4%BB%B6/</link>
            <pubDate>Tue, 27 Sep 2016 15:58:27 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2016-01-01-linux-swap%E5%88%86%E5%8C%BA%E6%96%87%E4%BB%B6/</guid>
            <description>

&lt;p&gt;由于未知原因，开发服务器没有配置swap（交换分区）。
虽然有4GB物理内存撑场面，但还是架不住多个tomcat+jetty的啃食，服务器频频死机！&lt;br /&gt;
这时候增加SWAP物理分区是不可能了，但我们可以通过增加swap文件的方式增加swap！&lt;/p&gt;

&lt;p&gt;1.使用dd命令创建一个指定大小的文档 将swap文件写在/var/swap！&lt;/p&gt;

&lt;p&gt;dd if=/dev/zero of=/swapfile bs=1M count=8096&lt;/p&gt;

&lt;p&gt;2.使用mkswap创建swap&lt;/p&gt;

&lt;p&gt;mkswap /swapfile&lt;/p&gt;

&lt;p&gt;3.通过swapon命令开启swap分区&lt;/p&gt;

&lt;p&gt;swapon /swapfile&lt;/p&gt;

&lt;p&gt;4.查看swap分区状况&lt;/p&gt;

&lt;p&gt;&lt;code&gt;swapon -s&lt;/code&gt;  或 &lt;code&gt;cat /proc/swaps&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在/etc/fstab中增加如下语句：&lt;br /&gt;
&lt;file system&gt; &lt;mount point&gt; &lt;type&gt;  &lt;options&gt; &lt;dump&gt; &lt;pass&gt;&lt;br /&gt;
&lt;code&gt;/var/swap  swap  swap    defaults 0 0&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;/swapfile                                 none            swap    sw              0       0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;mount:   对于swap分区，这个域应该填写：none，表示没有挂载点。&lt;br /&gt;
  type：   adfs、cifs、ext3、iso9660、kafs、minix、msdos、vfat、umsdos、proc、swap、 squashfs、nfs、ntfs、affs、ufs&lt;br /&gt;
  options: defaults，它代表包含了选项rw,suid,dev,exec,auto,nouser和 async。&lt;/p&gt;

&lt;p&gt;5.如果不再需要swap，可以清理该分区，关闭swap&lt;/p&gt;

&lt;p&gt;swapoff /tmp/swap&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;格式化分区&#34;&gt;格式化分区&lt;/h1&gt;

&lt;p&gt;mkfs.ext3 /dev/sda5&lt;/p&gt;

&lt;h1 id=&#34;将分区转换成交换分区&#34;&gt;将分区转换成交换分区&lt;/h1&gt;

&lt;p&gt;#1、格式化交换分区［mkswap］&lt;br /&gt;
mkswap /dev/sda5&lt;/p&gt;

&lt;p&gt;#2、激活交换分区［swapon］&lt;br /&gt;
swapon /dev/sda5&lt;/p&gt;

&lt;h1 id=&#34;将交换分区转换成ext3格式&#34;&gt;将交换分区转换成EXT3格式&lt;/h1&gt;

&lt;p&gt;#1、关闭交换分区［swapoff］&lt;br /&gt;
swapoff /dev/sda5&lt;/p&gt;

&lt;p&gt;#2、重新格式化分区[mkfs.ext3]&lt;br /&gt;
mkfs.ext3 /dev/sda5&lt;/p&gt;

&lt;h1 id=&#34;设置磁盘巻标&#34;&gt;设置磁盘巻标&lt;/h1&gt;

&lt;p&gt;e2label /dev/sda5 sky&lt;/p&gt;

&lt;h1 id=&#34;查看巻标&#34;&gt;查看巻标&lt;/h1&gt;

&lt;p&gt;e2label /dev/sda5&lt;/p&gt;

&lt;h1 id=&#34;根据巻标查看硬盘&#34;&gt;根据巻标查看硬盘&lt;/h1&gt;

&lt;p&gt;findfs LABEL=sky&lt;/p&gt;

&lt;p&gt;注：top命令下，想关参数含义&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* %mem 内存使用率  
* virt  虚拟内存  
* res  常驻内存  
* shr  共享内存  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;VIRT：virtual memory usage。Virtual这个词很神，一般解释是：virtual adj.虚的, 实质的, [物]有效的, 事实上的。到底是虚的还是实的？让Google给Define之后，将就明白一点，就是这东西还是非物质的，但是有效果的，不发生在真实世界的，发生在软件世界的等等。这个内存使用就是一个应用占有的地址空间，只是要应用程序要求的，就全算在这里，而不管它真的用了没有。写程序怕出错，又不在乎占用的时候，多开点内存也是很正常的。&lt;/p&gt;

&lt;p&gt;RES：resident memory usage。常驻内存。这个值就是该应用程序真的使用的内存，但还有两个小问题，一是有些东西可能放在交换盘上了（SWAP），二是有些内存可能是共享的。&lt;br /&gt;
SHR：shared memory。共享内存。就是说这一块内存空间有可能也被其他应用程序使用着；而Virt － Shr似乎就是这个程序所要求的并且没有共享的内存空间。&lt;/p&gt;

&lt;p&gt;DATA：数据占用的内存。如果top没有显示，按f键可以显示出来。这一块是真正的该程序要求的数据空间，是真正在运行中要使用的。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Linux 系统开机启动项清理</title>
            <link>http://blog.pytool.com/linux/2016-01-01-linux-%E7%B3%BB%E7%BB%9F%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E9%A1%B9%E6%B8%85%E7%90%86/</link>
            <pubDate>Tue, 27 Sep 2016 15:58:27 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2016-01-01-linux-%E7%B3%BB%E7%BB%9F%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E9%A1%B9%E6%B8%85%E7%90%86/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://www.itcodemonkey.com/article/669.html&#34; target=&#34;_blank&#34;&gt;Linux 系统开机启动项清理 - IT程序猿&lt;/a&gt;&lt;br /&gt;
一般情况下，常规用途的 Linux 发行版在开机启动时拉起各种相关服务进程，包括许多你可能无需使用的服务，例如蓝牙bluetooth、Avahi、 调制解调管理器ModemManager、ppp-dns（LCTT 译注：此处作者笔误 ppp-dns 应该为 pppd-dns) 等服务进程，这些都是什么东西？用于哪里，有何功能？&lt;/p&gt;

&lt;p&gt;Systemd 提供了许多很好的工具用于查看系统启动情况，也可以控制在系统启动时运行什么。在这篇文章中，我将说明在 Systemd 类发行版中如何关闭一些令人讨厌的进程。&lt;br /&gt;
查看开机启动项&lt;/p&gt;

&lt;p&gt;在过去，你能很容易通过查看 /etc/init.d 了解到哪些服务进程会在引导时启动。Systemd 以不同的方式展现，你可以使用如下命令罗列允许开机启动的服务进程。&lt;br /&gt;
1&lt;br /&gt;
2&lt;br /&gt;
3&lt;br /&gt;
4&lt;br /&gt;
5&lt;br /&gt;
6&lt;br /&gt;
7&lt;br /&gt;
8&lt;/p&gt;

&lt;p&gt;$ systemctl list-unit-files &amp;ndash;type=service | grep enabled&lt;br /&gt;
accounts-daemon.service                    enabled&lt;br /&gt;
anacron-resume.service                     enabled&lt;br /&gt;
anacron.service                            enabled&lt;br /&gt;
bluetooth.service                          enabled&lt;br /&gt;
brltty.service                             enabled&lt;br /&gt;
[&amp;hellip;]&lt;/p&gt;

&lt;p&gt;在此列表顶部，对我来说，蓝牙服务是冗余项，因为在该电脑上我不需要使用蓝牙功能，故无需运行此服务。下面的命令将停止该服务进程，并且使其开机不启动。&lt;br /&gt;
1&lt;br /&gt;
2&lt;br /&gt;
3&lt;/p&gt;

&lt;p&gt;$ sudo systemctl stop bluetooth.service&lt;br /&gt;
$ sudo systemctl disable bluetooth.service&lt;/p&gt;

&lt;p&gt;你可以通过下面命令确定是否操作成功。&lt;br /&gt;
1&lt;br /&gt;
2&lt;br /&gt;
3&lt;br /&gt;
4&lt;br /&gt;
5&lt;br /&gt;
6&lt;/p&gt;

&lt;p&gt;$ systemctl status bluetooth.service&lt;br /&gt;
 bluetooth.service - Bluetooth service&lt;br /&gt;
  Loaded: loaded (/lib/systemd/system/bluetooth.service; disabled; vendor preset: enabled)&lt;br /&gt;
  Active: inactive (dead)&lt;br /&gt;
    Docs: man:bluetoothd(8)&lt;/p&gt;

&lt;p&gt;停用的服务进程仍然能够被另外一个服务进程启动。如果你真的想在任何情况下系统启动时都不启动该进程，无需卸载该它，只需要把它掩盖起来就可以阻止该进程在任何情况下开机启动。&lt;br /&gt;
1&lt;br /&gt;
2&lt;br /&gt;
3&lt;/p&gt;

&lt;p&gt;$ sudo systemctl mask bluetooth.service&lt;br /&gt;
 Created symlink from /etc/systemd/system/bluetooth.service to /dev/null.&lt;/p&gt;

&lt;p&gt;一旦你对禁用该进程启动而没有出现负面作用感到满意，你也可以选择卸载该程序。&lt;/p&gt;

&lt;p&gt;通过执行命令可以获得如下服务列表：&lt;br /&gt;
1&lt;br /&gt;
2&lt;br /&gt;
3&lt;br /&gt;
4&lt;br /&gt;
5&lt;br /&gt;
6&lt;br /&gt;
7&lt;/p&gt;

&lt;p&gt;$ systemctl list-unit-files &amp;ndash;type=service&lt;br /&gt;
UNIT FILE                                  STATE&lt;br /&gt;
accounts-daemon.service                    enabled&lt;br /&gt;
acpid.service                              disabled&lt;br /&gt;
alsa-restore.service                       static&lt;br /&gt;
alsa-utils.service                         masked&lt;/p&gt;

&lt;p&gt;你不能启用或禁用静态服务，因为静态服务被其他的进程所依赖，并不意味着它们自己运行。&lt;br /&gt;
哪些服务能够禁止？&lt;/p&gt;

&lt;p&gt;如何知道你需要哪些服务，而哪些又是可以安全地禁用的呢？它总是依赖于你的个性化需求。&lt;/p&gt;

&lt;p&gt;这里举例了几个服务进程的作用。许多服务进程都是发行版特定的，所以你应该看看你的发行版文档（比如通过 google 或 StackOverflow）。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;accounts-daemon.service 是一个潜在的安全风险。它是 AccountsService 的一部分，AccountsService 允许程序获得或操作用户账户信息。我不认为有好的理由能使我允许这样的后台操作，所以我选择掩盖mask该服务进程。  

avahi-daemon.service 用于零配置网络发现，使电脑超容易发现网络中打印机或其他的主机，我总是禁用它，别漏掉它。  

brltty.service 提供布莱叶盲文设备支持，例如布莱叶盲文显示器。  

debug-shell.service 开放了一个巨大的安全漏洞（该服务提供了一个无密码的 root shell ，用于帮助 调试 systemd 问题），除非你正在使用该服务，否则永远不要启动服务。  

ModemManager.service 该服务是一个被 dbus 激活的守护进程，用于提供移动宽频broadband（2G/3G/4G）接口，如果你没有该接口，无论是内置接口，还是通过如蓝牙配对的电话，以及 USB 适配器，那么你也无需该服务。  

pppd-dns.service 是一个计算机发展的遗物，如果你使用拨号接入互联网的话，保留它，否则你不需要它。  

rtkit-daemon.service 听起来很可怕，听起来像是 rootkit。 但是你需要该服务，因为它是一个实时内核调度器real-time kernel scheduler。  

whoopsie.service 是 Ubuntu 错误报告服务。它用于收集 Ubuntu 系统崩溃报告，并发送报告到 https://daisy.ubuntu.com 。 你可以放心地禁止其启动，或者永久的卸载它。  

wpa_supplicant.service 仅在你使用 Wi-Fi 连接时需要。  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;系统启动时发生了什么？&lt;/p&gt;

&lt;p&gt;Systemd 提供了一些命令帮助调试系统开机启动问题。该命令会重演你的系统启动的所有消息。&lt;/p&gt;

&lt;p&gt;$ journalctl -b&lt;/p&gt;

&lt;p&gt;&amp;ndash; Logs begin at Mon 2016-05-09 06:18:11 PDT,&lt;br /&gt;
end at Mon 2016-05-09 10:17:01 PDT. &amp;ndash;&lt;br /&gt;
May 16 06:18:11 studio systemd-journal[289]:&lt;br /&gt;
Runtime journal (/run/log/journal/) is currently using 8.0M.&lt;br /&gt;
Maximum allowed usage is set to 157.2M.&lt;br /&gt;
Leaving at least 235.9M free (of currently available 1.5G of space).&lt;br /&gt;
Enforced usage limit is thus 157.2M.&lt;br /&gt;
[&amp;hellip;]&lt;/p&gt;

&lt;p&gt;通过命令 journalctl -b -1 可以复审前一次启动，journalctl -b -2 可以复审倒数第 2 次启动，以此类推。&lt;/p&gt;

&lt;p&gt;该命令会打印出大量的信息，你可能并不关注所有信息，只是关注其中问题相关部分。为此，系统提供了几个过滤器，用于帮助你锁定目标。让我们以进程号为 1 的进程为例，该进程是所有其它进程的父进程。&lt;/p&gt;

&lt;p&gt;$ journalctl _PID=1&lt;/p&gt;

&lt;p&gt;May 08 06:18:17 studio systemd[1]: Starting LSB: Raise network interfaces&amp;hellip;.&lt;br /&gt;
May 08 06:18:17 studio systemd[1]: Started LSB: Raise network interfaces..&lt;br /&gt;
May 08 06:18:17 studio systemd[1]: Reached target System Initialization.&lt;br /&gt;
May 08 06:18:17 studio systemd[1]: Started CUPS Scheduler.&lt;br /&gt;
May 08 06:18:17 studio systemd[1]: Listening on D-Bus System Message Bus Socket&lt;br /&gt;
May 08 06:18:17 studio systemd[1]: Listening on CUPS Scheduler.&lt;br /&gt;
[&amp;hellip;]&lt;/p&gt;

&lt;p&gt;这些打印消息显示了什么被启动，或者是正在尝试启动。&lt;/p&gt;

&lt;p&gt;一个最有用的命令工具之一 systemd-analyze blame，用于帮助查看哪个服务进程启动耗时最长。&lt;/p&gt;

&lt;p&gt;$ systemd-analyze blame&lt;br /&gt;
         8.708s gpu-manager.service&lt;br /&gt;
         8.002s NetworkManager-wait-online.service&lt;br /&gt;
         5.791s mysql.service&lt;br /&gt;
         2.975s dev-sda3.device&lt;br /&gt;
         1.810s alsa-restore.service&lt;br /&gt;
         1.806s systemd-logind.service&lt;br /&gt;
         1.803s irqbalance.service&lt;br /&gt;
         1.800s lm-sensors.service&lt;br /&gt;
         1.800s grub-common.service&lt;/p&gt;

&lt;p&gt;这个特定的例子没有出现任何异常，但是如果存在系统启动瓶颈，则该命令将能发现它。&lt;/p&gt;

&lt;p&gt;你也能通过如下资源了解 Systemd 如何工作：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;理解和使用 Systemd  

介绍 Systemd 运行级别和服务管理命令  

再次前行，另一个 Linux 初始化系统：Systemd 介绍  
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        
        <item>
            <title>Linux下给力截图工具归纳</title>
            <link>http://blog.pytool.com/linux/2016-01-01-linux%E4%B8%8B%E7%BB%99%E5%8A%9B%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7/</link>
            <pubDate>Tue, 27 Sep 2016 15:58:27 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2016-01-01-linux%E4%B8%8B%E7%BB%99%E5%8A%9B%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7/</guid>
            <description>

&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/ozuijiaoweiyang/article/details/44804787&#34; target=&#34;_blank&#34;&gt;Linux下给力截图工具归纳 - oZuiJiaoWeiYang的专栏 - 博客频道 - CSDN.NET&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-系统自带-gnome-screenshot&#34;&gt;1、系统自带 gnome-screenshot&lt;/h1&gt;

&lt;p&gt;截取自定义区域&lt;br /&gt;
gnome-screenshot -a&lt;br /&gt;
快捷键&lt;br /&gt;
对窗口截屏 alt+ printscreen&lt;br /&gt;
自定义选取截屏 shift+ printscreen&lt;br /&gt;
复制截图到剪切版 ctrl+ printscreen&lt;br /&gt;
复制框口截图到剪切版 ctrl+alt+printscreen&lt;br /&gt;
复制特定选区到剪切版&lt;br /&gt;
gnome3可以直接按键盘上的截屏键截屏的。同时按住shift键可以自定义区域&lt;br /&gt;
&lt;img src=&#34;http://i1.piimg.com/585302/243d3a3c97d7877a.png&#34; alt=&#34;Markdown&#34; /&gt;&lt;br /&gt;
2. ImageMagick&lt;br /&gt;
&lt;code&gt;import filename.png&lt;/code&gt; #filename是你的截图名&lt;br /&gt;
&lt;code&gt;import -frame Image6.png&lt;/code&gt; #截取窗口&lt;br /&gt;
&lt;code&gt;import -window root -resize 640 -pause 4 Pictures/Image7.png&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash  
# https://github.com/Ceryn/img  
# Call with &#39;-s&#39; to target only a selection of the screen.  

clientid=&#39;3e7a4deb7ac67da&#39;  
img=$(mktemp &#39;/tmp/img-XXXXXX.png&#39;)  

scrot -z &amp;quot;$@&amp;quot; $img &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 || exit  
res=$(curl -sH &amp;quot;Authorization: Client-ID $clientid&amp;quot; -F &amp;quot;image=@$img&amp;quot; &amp;quot;https://api.imgur.com/3/upload&amp;quot;)  

echo $res | grep -qo &#39;&amp;quot;status&amp;quot;:200&#39; &amp;amp;&amp;amp; link=$(echo $res | sed -e &#39;s/.*&amp;quot;link&amp;quot;:&amp;quot;\([^&amp;quot;]*\).*/\1/&#39; -e &#39;s/\\//g&#39;)  
test -n &amp;quot;$link&amp;quot; &amp;amp;&amp;amp; (printf $link | xclip; printf &amp;quot;\a&amp;quot; &amp;amp;&amp;amp; rm &amp;quot;$img&amp;quot;) || echo &amp;quot;$res&amp;quot; &amp;gt; &amp;quot;$img.error&amp;quot;  

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;3-scrot&#34;&gt;3、Scrot&lt;/h1&gt;

&lt;p&gt;1.安装很简单，像安装其他软件一样，Fedora下 yum install scrot ， Ubuntu下apt-get install scrot就可以。&lt;br /&gt;
2.一般用法，使用 scrot 可以抓取整个桌面、某个指定的窗口、以及选择的矩形区域。&lt;br /&gt;
　　抓取桌面：scrot desktop.png，该命令将当前的整个桌面抓取下来，并保存为 desktop.png 文件。可以在当前的目录中找到此图像文件。&lt;br /&gt;
　　抓取窗口：scrot -bs window.png，选项 b 使 scrot 在抓取窗口时一同将外边框抓取下来，而 s 选项则让用户选择所要抓取的是何窗口。&lt;br /&gt;
　　抓取区域：scrot -s rectangle.png，在执行此命令后，使用鼠标拖曳的矩形区域将被 scrot 抓取下来，并保存为 rectangle.png 文件。&lt;br /&gt;
3.高级用法，对于普通的抓取，使用 scrot 的基础便足以应付了。但在某些特殊情况之下，使用 scrot 抓取图像需要讲究一些技巧。&lt;br /&gt;
　　延时抓取：scrot -cd 10 menu.png，此命令中的 d 选项用于延时抓取图像，其后的 10 代表延时 10 秒;前面的选项 c 显示倒计时。在抓取菜单或是命令提示时，该技巧将充分展示其魔力。&lt;br /&gt;
　　生成缩图：scrot -t 50% thumb.png，这个命令在抓取图像的同时生成该图像的缩略图。选项 t 将打开此功能，其后的 50% 为原图的缩放百分比。&lt;br /&gt;
　　更改品质：scrot -q 70 quality.jpg，此命令中的 q 选项用于更改所抓图像的品质，其数值介于 1-100 之间，默认为 75。数值越大，意味着图像品质越高;同时，图像的压缩率也就越低，占用空间越大。&lt;br /&gt;
　　操作抓图：scrot action.png -e ‘mv $f ~/images/’，该命令将抓取的图像移动到 ~/images/ 目录。显然，操作图像的功能由 e 选项开启，其中的 $f 代表原图的路径/文件名。&lt;br /&gt;
　　以上示例皆指定了需要保存的抓图的文件名称。实际上，如果不指定名称，那么 scrot 在抓取图像后会自动使用当前的日期时间、宽度高度的组合来生成文件名称。如：2012-07-21-154232_238x148_scrot.png&lt;/p&gt;

&lt;p&gt;　　然而这样还是不太方便。可以新建一个文件，如screenshot&lt;br /&gt;
　　touch screenshot&lt;br /&gt;
　　vim screenshot（如果没有安装vim，可以执行sudo apt-get install vim进行安装）&lt;br /&gt;
　　输入 scrot -s -e ‘mv $f ~/screenshots’（注：mv $f ~/screenshots命令两边为单引号）&lt;br /&gt;
　　保存退出vim，然后 chmod u+x screenshot&lt;br /&gt;
　　这样就可以通过运行screenshot文件来执行scrot了。或者可以通过建立软链接来使用scrot。比如：在/usr/bin目录下执行sudo ln -s ~/screenshot scs。以后直接在终端里输入scs即可用鼠标截图。&lt;br /&gt;
操作抓图：scrot action.png -e &amp;lsquo;mv $f ~/images/&amp;lsquo;，该命令将抓取的图像移动到 ~/images/ 目录。显然，操作图像的功能由 e 选项开启，其中的 $f 代表原图的路径／文件名。&lt;br /&gt;
下面是方便截图的一个脚本，放在/usr/local/bin下，在方便的地方建个快捷方式，一单击即可进入截图状态&lt;br /&gt;
#!/bin/bash&lt;/p&gt;

&lt;h1 id=&#34;注意下面的-号要紧接着-y-我之前没注意到这点-哎-截了半天也没截出东西&#34;&gt;注意下面的“＋”号要紧接着％Y。（我之前没注意到这点，哎，截了半天也没截出东西&lt;/h1&gt;

&lt;p&gt;/soft/scrot/bin/scrot -s /home/用户名/picture/&lt;code&gt;date -d yesterday  
+%Y-%m-%d-%H-%M-%S&lt;/code&gt;.jpg&lt;br /&gt;
4. Deepin-ScreenShot&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash  
# linux deps: xsel espeak scrot rsync  
# osx deps: none  
# assumptions: authorized to ssh into host w/o password  

OS=`uname`  

# Remote server to upload to  
HOST=&amp;quot;yourhost.com&amp;quot;  

# Remote user to login to HOST with  
USER=&amp;quot;user&amp;quot;  

# Path on remote server to upload to  
UPLOAD_PATH=&amp;quot;/path/to/www-img&amp;quot;  

# Base path where image will be accessible from  
BASE_URL=&amp;quot;http://yourhost.com/img&amp;quot;  

# Temp file to store screen shot  
TEMP_FILE=&amp;quot;$(mktemp /tmp/screenshot.XXXXX.png)&amp;quot;  

# Take screen shot, save to temp file  
if [[ &amp;quot;$OS&amp;quot; == &amp;quot;Linux&amp;quot; ]]; then  
    scrot -s $TEMP_FILE  
else  
    screencapture -s $TEMP_FILE  
fi  

# Houston, we have a problem!  
if [[ $? -ne 0 ]]; then  
    if [[ &amp;quot;$OS&amp;quot; == &amp;quot;Linux&amp;quot; ]]; then  
        espeak error &amp;amp;&amp;gt;/dev/null &amp;amp;  
    else  
        say error &amp;amp;  
    fi  
    exit 1  
fi  

# Create filename based on MD5 to guarantee uniqueness  
if [[ &amp;quot;$OS&amp;quot; == &amp;quot;Linux&amp;quot; ]]; then  
    MD5=&amp;quot;$(cat $TEMP_FILE | md5sum)&amp;quot;  
else  
    MD5=&amp;quot;$(cat $TEMP_FILE | md5)&amp;quot;  
fi  

# Only take first five characters from MD5  
IMAGE_NAME=&amp;quot;${MD5:0:5}.png&amp;quot;  

# Copy file to remote server  
rsync --chmod=u=rw,g=r,o=r --perms $TEMP_FILE $USER@$HOST:$UPLOAD_PATH/$IMAGE_NAME  

# Copy link to clipboard  
if [[ &amp;quot;$OS&amp;quot; == &amp;quot;Linux&amp;quot; ]]; then  
    echo &amp;quot;$BASE_URL/$IMAGE_NAME&amp;quot; | tr -d &#39;\n&#39; | xsel --clipboard --input  
else  
    echo &amp;quot;$BASE_URL/$IMAGE_NAME&amp;quot; | tr -d &#39;\n&#39; | pbcopy  
fi  

# Cleanup  
rm $TEMP_FILE  

if [[ &amp;quot;$OS&amp;quot; == &amp;quot;Linux&amp;quot; ]]; then  
    espeak ding &amp;amp;&amp;gt;/dev/null &amp;amp;  
else  
    say ding &amp;amp;  
fi  
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        
        <item>
            <title>Linux字体设置</title>
            <link>http://blog.pytool.com/linux/2016-01-01-linux%E5%AD%97%E4%BD%93fonts%E8%AE%BE%E7%BD%AE/</link>
            <pubDate>Tue, 27 Sep 2016 15:58:27 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2016-01-01-linux%E5%AD%97%E4%BD%93fonts%E8%AE%BE%E7%BD%AE/</guid>
            <description>

&lt;p&gt;[](&lt;a href=&#34;http://www.losttype.com/browse/&#34; target=&#34;_blank&#34;&gt;http://www.losttype.com/browse/&lt;/a&gt;)&lt;br /&gt;
[](&lt;a href=&#34;https://www.fontsquirrel.com/&#34; target=&#34;_blank&#34;&gt;https://www.fontsquirrel.com/&lt;/a&gt;)&lt;br /&gt;
&lt;a href=&#34;https://github.com/adobe-fonts&#34; target=&#34;_blank&#34;&gt;adobe-fonts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jinbuguo.com/gui/fonts.conf.html&#34; target=&#34;_blank&#34;&gt;fonts.conf 中文手册&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.findspace.name/res/1388&#34; target=&#34;_blank&#34;&gt;Ubuntu Chrome 中文字体发虚&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.mintos.org/skill/tweak-fonts.html&#34; target=&#34;_blank&#34;&gt;解决LinuxMint/Ubuntu中文字体发虚的根本之道&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://itsfoss.com/install-fonts-ubuntu-1404-1410/&#34; target=&#34;_blank&#34;&gt;How To Install New Fonts In Ubuntu 14.04 and 14.10&lt;/a&gt;&lt;br /&gt;
[](&lt;a href=&#34;http://forum.ubuntu.org.cn/viewtopic.php?f=8&amp;amp;t=348963&amp;amp;sid=0b91cf911e81ae41561756bd2cfd0dbd&#34; target=&#34;_blank&#34;&gt;http://forum.ubuntu.org.cn/viewtopic.php?f=8&amp;amp;t=348963&amp;amp;sid=0b91cf911e81ae41561756bd2cfd0dbd&lt;/a&gt;)&lt;br /&gt;
&lt;a href=&#34;https://www.fontsquirrel.com/&#34; target=&#34;_blank&#34;&gt;字体下载&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.zitikoudai.com/chinese-fonts/weiruan/Microsoft-Yahei-UI-Light.html&#34; target=&#34;_blank&#34;&gt;字体口袋&lt;/a&gt;&lt;br /&gt;
################################################################################&lt;/p&gt;

&lt;h1 id=&#34;常用命令&#34;&gt;常用命令&lt;/h1&gt;

&lt;p&gt;fc-list #查看已安装字体&lt;br /&gt;
fc-match sans-serif #抓取当前用户sans-serif类字体优先级最高的那款字体&lt;br /&gt;
fc-match serif #抓取当前用户serif类字体优先级最高的那款字体&lt;br /&gt;
fc-match monospace #抓取当前用户monospace类字体优先级最高的那款字体&lt;/p&gt;

&lt;h1 id=&#34;字体安装-install&#34;&gt;字体安装 Install&lt;/h1&gt;

&lt;p&gt;sudo apt-get install ttf-wqy-*&lt;/p&gt;

&lt;p&gt;sudo apt-get remove fonts-noto-cjk #思源黑体&lt;br /&gt;
sudo apt-get remove fonts-arphic-ukai fonts-arphic-uming&lt;/p&gt;

&lt;p&gt;gsettings set org.gnome.desktop.interface font-name &amp;lsquo;THE FONT NAME 11&amp;rsquo;&lt;br /&gt;
gsettings set org.gnome.desktop.interface document-font-name &amp;lsquo;THE FONT NAME 11&amp;rsquo;&lt;/p&gt;

&lt;h1 id=&#34;setting&#34;&gt;setting&lt;/h1&gt;

&lt;p&gt;sudo fc-cache -f -v&lt;/p&gt;

&lt;h2 id=&#34;字体相关目录&#34;&gt;字体相关目录&lt;/h2&gt;

&lt;p&gt;sudo fc-cache -fv&lt;br /&gt;
/usr/share/fonts/       #系统默认字体目录&lt;br /&gt;
/usr/local/share/fonts  #空&lt;br /&gt;
~/.local/share/fonts    #安装字体目录&lt;br /&gt;
~/.fonts                                #空&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-常用字体&#34;&gt;Source Code Pro  
DejaVu Sans Mono  
Inconsolata  
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Mac OS的一些：&lt;/p&gt;

&lt;p&gt;华文细黑：STHeiti Light [STXihei]&lt;br /&gt;
华文黑体：STHeiti&lt;br /&gt;
华文楷体：STKaiti&lt;br /&gt;
华文宋体：STSong&lt;br /&gt;
华文仿宋：STFangsong&lt;br /&gt;
俪黑 Pro：LiHei Pro Medium&lt;br /&gt;
俪宋 Pro：LiSong Pro Light&lt;br /&gt;
标楷体：BiauKai&lt;br /&gt;
苹果俪中黑：Apple LiGothic Medium&lt;br /&gt;
苹果俪细宋：Apple LiSung Light&lt;/p&gt;

&lt;p&gt;Windows的一些：&lt;/p&gt;

&lt;p&gt;新细明体：PMingLiU&lt;br /&gt;
细明体：MingLiU&lt;br /&gt;
标楷体：DFKai-SB&lt;br /&gt;
黑体：SimHei&lt;br /&gt;
宋体：SimSun&lt;br /&gt;
新宋体：NSimSun&lt;br /&gt;
仿宋：FangSong&lt;br /&gt;
楷体：KaiTi&lt;br /&gt;
仿宋_GB2312：FangSong_GB2312&lt;br /&gt;
楷体_GB2312：KaiTi_GB2312&lt;br /&gt;
微软正黑体：Microsoft JhengHei&lt;br /&gt;
微软雅黑体：Microsoft YaHei&lt;/p&gt;

&lt;p&gt;装Office会生出来的一些：&lt;/p&gt;

&lt;p&gt;隶书：LiSu&lt;br /&gt;
幼圆：YouYuan&lt;br /&gt;
华文细黑：STXihei&lt;br /&gt;
华文楷体：STKaiti&lt;br /&gt;
华文宋体：STSong&lt;br /&gt;
华文中宋：STZhongsong&lt;br /&gt;
华文仿宋：STFangsong&lt;br /&gt;
方正舒体：FZShuTi&lt;br /&gt;
方正姚体：FZYaoti&lt;br /&gt;
华文彩云：STCaiyun&lt;br /&gt;
华文琥珀：STHupo&lt;br /&gt;
华文隶书：STLiti&lt;br /&gt;
华文行楷：STXingkai&lt;br /&gt;
华文新魏：STXinwei&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Linux按键设置</title>
            <link>http://blog.pytool.com/linux/2016-01-01-linux-%E6%8C%89%E9%94%AE%E8%AE%BE%E7%BD%AE/</link>
            <pubDate>Tue, 27 Sep 2016 15:58:27 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2016-01-01-linux-%E6%8C%89%E9%94%AE%E8%AE%BE%E7%BD%AE/</guid>
            <description>

&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php?title=Xorg_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&amp;amp;oldid=186764&#34; target=&#34;_blank&#34;&gt;Xorg (简体中文) - ArchWiki&lt;/a&gt;
&lt;a href=&#34;https://wiki.archlinux.org/index.php/Extra_keyboard_keys_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&#34; target=&#34;_blank&#34;&gt;Extra keyboard keys (简体中文) - ArchWiki&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.codeweblog.com/%E4%BF%AE%E6%94%B9%E9%94%AE%E7%9B%98%E9%94%AE%E4%BD%8D/&#34; target=&#34;_blank&#34;&gt;修改键盘键位 - CodeWeblog.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://github.com/Chunlin-Li/Chunlin-Li.github.io/blob/master/blogs/linux/ubuntu-xkb-keyboard-remap.md&#34; target=&#34;_blank&#34;&gt;Ubuntu 14.04 下通过 XKB 修改键盘映射, 实现自定义按键&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;按键绑定&#34;&gt;按键绑定&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;bindkey # 查看所有绑定的快捷键&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;bindkey &amp;lsquo;^Z&amp;rsquo; fancy-ctrl-z # 绑定一个函数到快捷键上&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;：先按下&lt;code&gt;Ctrl+V,然后按下F12&lt;/code&gt; .我们就可以得到F12的&lt;code&gt;字符序列 ^\[\[24~&lt;/code&gt;。&lt;br /&gt;
【附】也可以使用&lt;code&gt;showkey -a&lt;/code&gt;命令查看按键对应的字符序列。&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Linux的一个特色就是其命令多而且功能强大, 频繁输入命令不仅麻烦而且工作量较大，虽然可以使用TAB进行&amp;gt;命令补足，或者使用aliase来简化某个命令的输入，但这并不能从根本上解决敲击键盘次数过多的问题。&lt;br /&gt;
  可以把任何命令或命令的组合指定给键盘上的某个键，可以是Alt+[A-Z],&lt;br /&gt;
  Ctrl-[A-Z], Alt+Shift+[A-Z], F1-F12, Ctrl-F[1-12], Alt-F[1-12], Alt+Shift+F[1-12]，还有更不可思议的是甚至还可以为功能键加上“参数”，这样你按下那个键的时候，它会等待你输入相应的参数，并根据不同的参数运行不同的命令。&lt;br /&gt;
  当然，有一些热键会被终端所捕获，如常见的Ctrl-D/C/Q/Z等，不过没关系，可用的热键还多着呢！&lt;br /&gt;
  定义热键的配置文件为：/etc/inputrc 或 ~/.inputrc，定义热键的格式如下：&lt;br /&gt;
  &amp;ldquo;&amp;lt;热键对应的ASCII字符&amp;gt;&amp;ldquo;：&amp;rdquo;&amp;lt;执行的命令&amp;gt;&amp;rdquo;&lt;br /&gt;
  其中热键对应的ASCII字符可以通过 &amp;ldquo;先按Ctrl-V, 然后按热键&amp;rdquo; 的方式来输入, 如Ctrl-G对应的字符为^G, Alt-P对应的字符为^[p, Ctrl-Alt-H对应的字符为^[^H.&lt;br /&gt;
  可以用\C来代替Ctrl，\M来代替Alt, \M-\C来代替Alt-Ctrl, 如\C-M = Ctrl-M, \M-\C-H = Alt-Ctrl-M. 另外还可以用\e代表^[.&lt;br /&gt;
  先来看一些基本的热键定义，(这里热键里的字母不区分大小写):&lt;br /&gt;
  &amp;ldquo;^[-&amp;rdquo;:&amp;ldquo;su -\C-M&amp;rdquo; # 按Alt+- 执行su - 命令，末尾\C-M表示输入完定义的命令后回车，也可以更简洁地用一个\n来表示.&lt;br /&gt;
  &amp;ldquo;\M-\C-G&amp;rdquo;:&amp;ldquo;gaim &amp;amp; &amp;amp;&amp;gt;/dev/null &amp;amp;&amp;amp; disown\C-M&amp;rdquo;&lt;br /&gt;
  # 按Ctrl-Alt-g在当前shell打开gaim, 并脱离该shell独立运行，即：即使你退出了该shell， gaim也不会关闭&lt;br /&gt;
  其他一些组合键可以根据自己的需要配置，偶就不多说了.&lt;/p&gt;

&lt;h1 id=&#34;原理&#34;&gt;原理&lt;/h1&gt;

&lt;p&gt;系统处理键盘输入：&lt;br /&gt;
键盘中的一个按键被按下时，会产生一个“信号”(keycode)传给操作系统。&lt;br /&gt;
操作系统得到这个信号之后，检查此信号对应的处理方法(keysym)。&lt;br /&gt;
执行对应的处理方法&lt;br /&gt;
keycode: The keycode is the numeric representation received by the kernel when a key or a mouse button is pressed.&lt;br /&gt;
keysym : The keysym is the value assigned to the keycode.&lt;br /&gt;
如，按下 a 产生 &amp;lsquo;keycode 38&amp;rsquo;, &amp;lsquo;keycode 38&amp;rsquo; 映射到 keysym &amp;lsquo;a&amp;rsquo; 或 &amp;lsquo;0×61&amp;rsquo;, 即 a 的ASCII码(97).&lt;br /&gt;
There are two types of key in keyboard: non modification keys and modification keys.&lt;/p&gt;

&lt;p&gt;键盘上的键位产生的keycode是不变的，键帽可以随意更换,keycode对应的keysym也是可以更改的。&lt;br /&gt;
keysym 可以用字母也可以用数字来表示(如 b 和 0x62 等价)&lt;br /&gt;
每一个 keycode 对应一套 keysym&lt;br /&gt;
layer1 layer2 layer3&lt;br /&gt;
keycode keysym modifier&lt;br /&gt;
keycode 66 –&amp;gt; Caps_Lock –&amp;gt; lock&lt;br /&gt;
查看键位信息&lt;br /&gt;
输出现在所有keycode -&amp;gt; keysym的映射(Keymap table), 其中keysym以字符形式表示&lt;/p&gt;

&lt;h2 id=&#34;扫描码-scancode-是一个键的最小识别-id-如果一个键没有扫描码值-我们无法做任何事-因为内核看不到它&#34;&gt;扫描码(scancode)是一个键的最小识别 ID。如果一个键没有扫描码值，我们无法做任何事，因为内核看不到它。&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;xev&lt;/code&gt;&lt;br /&gt;
keycode 38 (keysym 0x61, a)&lt;br /&gt;
keycode 9 (keysym 0xff1b, Escape)&lt;br /&gt;
keycode 23 (keysym 0xff09, Tab)&lt;br /&gt;
keycode 36 (keysym 0xff0d, Return)&lt;br /&gt;
keycode 37 (keysym 0xffe3, Control_L)&lt;br /&gt;
keycode 50 (keysym 0xffe1, Shift_L)&lt;br /&gt;
keycode 62 (keysym 0xffe2, Shift_R)&lt;br /&gt;
keycode 64 (keysym 0xffe9, Alt_L)&lt;br /&gt;
keycode 66 (keysym 0xffe5, Caps_Lock)&lt;br /&gt;
keycode 105 (keysym 0xffe4, Control_R)&lt;br /&gt;
keycode 108 (keysym 0xffea, Alt_R)&lt;br /&gt;
keycode 133 (keysym 0xffeb, Super_L)&lt;br /&gt;
keycode 134 (keysym 0xffec, Super_R)&lt;br /&gt;
keycode 135 (keysym 0xff67, Menu)&lt;br /&gt;
&lt;code&gt;xmodmap -pke&lt;/code&gt;&lt;br /&gt;
keycode  36 = Return NoSymbol Return&lt;br /&gt;
keycode  37 = Control_L NoSymbol Control_L&lt;br /&gt;
keycode  50 = Shift_L NoSymbol Shift_L&lt;br /&gt;
keycode 133 = Super_L NoSymbol Super_L&lt;br /&gt;
keycode 134 = Super_R NoSymbol Super_R&lt;br /&gt;
keycode 135 = Menu NoSymbol Menu&lt;/p&gt;

&lt;h2 id=&#34;键位码-keycode-是一个键的第二级识别-id-对应到一个函数&#34;&gt;键位码(keycode)是一个键的第二级识别 ID，对应到一个函数。&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sudo showkeys&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;sudo showkeys -a&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;符号(symbol)是一个键的第三级识别 ID，Xorg 通过该 ID 引用按键。&lt;/p&gt;

&lt;p&gt;sudo showkeys&lt;br /&gt;
sudo dumpkeys&lt;br /&gt;
sudo loadkeys&lt;/p&gt;

&lt;h2 id=&#34;linux修改键盘映射capslock为ctrl&#34;&gt;linux修改键盘映射capslock为ctrl&lt;/h2&gt;

&lt;p&gt;sudo apt-get install xmodmap&lt;br /&gt;
sudo apt-get install x11-xserver-utils&lt;/p&gt;

&lt;p&gt;在自己的工作目录home里新建一个.xmodmaprc的文件&lt;br /&gt;
vim .xmodmaprc&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;remove Lock = Caps_Lock  
remove Control = Control_R  
keysym Control_R = Caps_Lock  
keysym Caps_Lock = Control_R  
add Lock = Caps_Lock  
add Control = Control_R  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行&lt;br /&gt;
xmodmap .xmodmaprc&lt;br /&gt;
/bin/bash -c &amp;ldquo;sleep 20; /usr/bin/xmodmap /home/$USER/.Xmodmap&amp;rdquo;&lt;br /&gt;
fcitx-xkb覆盖掉了xmodmap，把xkb禁用就好了&lt;/p&gt;

&lt;p&gt;用~$ xev |grep keycode 按要互换的两个键的到以下信息：&lt;/p&gt;

&lt;p&gt;1 state 0×50, keycode 133 (keysym 0xffeb, Super_L), same_screen YES, 2 state 0×10, keycode 66(keysym 0xffe5, Caps_Lock), same_screen YES,然后建立 .Xmodmap 输入以下内容&lt;/p&gt;

&lt;p&gt;1 clear mod4 2 clear lock 3 keycode 133 = Caps_Lock NoSymbol Caps_Lock NoSymbol Caps_Lock 4 keycode 66 = Super_L NoSymbol Super_L NoSymbol Super_L 5 add mod4 = Super_L 6 add lock = Caps_Lock最后执行 xmodmap .xmodmap &amp;amp;&amp;amp; exec awesome即可生效。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
setxkbmap -option ctrl:swapcaps&lt;br /&gt;
&lt;a href=&#34;http://www.codeweblog.com/swap-left-ctrl-and-alt-in-linux/&#34; target=&#34;_blank&#34;&gt;Swap left ctrl and alt in Linux - CodeWeblog.com&lt;/a&gt;&lt;br /&gt;
setxkbmap选项位于这几个文件里： /usr/share/X11/xkb/rules/evdev.lst /usr/share/X11/xkb/rules/base.lst，这俩文件一模 一样……，利用grep搜索过滤&amp;rdquo;ctrl:或:ctrl&amp;rdquo;。&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;$ grep -e &amp;ldquo;ctrl:|:ctrl&amp;rdquo; /usr/share/X11/xkb/rules/evdev.lst&lt;/p&gt;

&lt;p&gt;grp:ctrls_toggle     Both Ctrl keys together&lt;br /&gt;
grp:ctrl_shift_toggle Ctrl+Shift&lt;br /&gt;
grp:ctrl_alt_toggle  Alt+Ctrl&lt;br /&gt;
ctrl:nocaps          Caps Lock as Ctrl&lt;br /&gt;
ctrl:lctrl_meta      Left Ctrl as Meta&lt;br /&gt;
ctrl:swapcaps        Swap Ctrl and Caps Lock&lt;br /&gt;
ctrl:ac_ctrl         At left of &amp;lsquo;A&amp;rsquo;&lt;br /&gt;
ctrl:aa_ctrl         At bottom left&lt;br /&gt;
ctrl:rctrl_ralt      Right Ctrl as Right Alt&lt;br /&gt;
ctrl:menu_rctrl      Menu as Right Ctrl&lt;br /&gt;
ctrl:ctrl_ralt       Right Alt as Right Ctrl&lt;br /&gt;
caps:ctrl_modifier   Make Caps Lock an additional Control but keep the Caps_Lock keysym&lt;br /&gt;
altwin:ctrl_win      Control is mapped to Win keys (and the usual Ctrl keys)&lt;br /&gt;
altwin:ctrl_alt_win  Control is mapped to Alt keys, Alt is mapped to Win keys&lt;br /&gt;
terminate:ctrl_alt_bksp Control + Alt + Backspace&lt;br /&gt;
我选择了ctrl:nocaps，执行dconf-editor, 在org.gnome.desktop.inputsources下面， xkboptions选项，添加如下：[&amp;lsquo;ctrl:nocaps&amp;rsquo;]，OK.若需立即生效，终端键入 setxkbmap -print即可。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;man xkeyboard-config&lt;/code&gt;&lt;br /&gt;
sudo vi /etc/default/keyboard&lt;br /&gt;
找到“XKBOPTIONS”，加入“ctrl:swapcaps”来交换Caps Lock和Control键。如果还要加入其他的选项，中间可以用英文逗号隔开。&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;XKBOPTIONS=&amp;ldquo;ctrl:nocaps&amp;rdquo;&lt;/p&gt;

&lt;p&gt;最后需要执行&lt;/p&gt;

&lt;p&gt;sudo dpkg-reconfigure keyboard-configuration&lt;/p&gt;

&lt;p&gt;这样修改以后，图形界面和虚拟终端下（例如Ctrl+Alt+F1）都可以起作用。而通过gnome-tweak-tool修改的只能在图形界面下起作用。&lt;/p&gt;

&lt;h1 id=&#34;ubuntu-14-04-下通过-xkb-修改键盘映射-实现自定义按键&#34;&gt;Ubuntu 14.04 下通过 XKB 修改键盘映射, 实现自定义按键&lt;/h1&gt;

&lt;p&gt;XKB :  全称 X Keyboard Extension, 是 Liunx 下管理键盘输入的一套较为复杂的系统.&lt;br /&gt;
Ubuntu 14.04 采用这套系统来支持图形界面下的键盘管理.&lt;/p&gt;

&lt;h3 id=&#34;几个基本概念&#34;&gt;几个基本概念&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;key code&lt;/strong&gt; : 键盘上按键的物理代号或者说是物理座标， 比如Q键是 &lt;code&gt;&amp;lt;AD01&amp;gt;&lt;/code&gt;, 我们可以改变它的映射，让Q键变成A键， 但是这个键的 Key code 还是 &lt;code&gt;&amp;lt;AD01&amp;gt;&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;key symbols&lt;/strong&gt; : 表示按键的实际意义， 比如 &lt;code&gt;&amp;lt;AD01&amp;gt;&lt;/code&gt; 只是一个键盘上按键的位置， 而字母Q是一个具有实际意义的符号, 当 key code 和 key symbols 建立关联后, 按下 &lt;code&gt;&amp;lt;AD01&amp;gt;&lt;/code&gt; 位置的按键, 就会输入一个字母 Q.&lt;/p&gt;

&lt;p&gt;按键和符号建立了联系, 可是, 我们一个按键上可不止一种符号.  比如, 小写的 q 和 大写的 Q 都是在一个按键上, 这就需要引入以下的概念了&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;level&lt;/strong&gt; : 我们键盘上的按键, 通常都是通过切换 level 来实现的, 比如 小写字母是 level 1 , 而大写字母是 level 2. 通常只有 2 个 level , 但是我们也可以增加更多的 level 来让一个按键可以表示更多的意义.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;group&lt;/strong&gt; :  作用类似于 level, 但一般是用于切换整个字符集. 比如要用键盘输入日语啥的.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;modifier key&lt;/strong&gt; :  起修饰作用的键, 比如常见的 &lt;code&gt;Shift&lt;/code&gt;,  &lt;code&gt;Ctrl&lt;/code&gt;, &lt;code&gt;Caps Lock&lt;/code&gt; 都属于修饰键.&lt;/p&gt;

&lt;h3 id=&#34;基本的配置修改步骤&#34;&gt;基本的配置修改步骤&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;这里以我自己的使用习惯为例, 介绍一下 xkb 的比较简单的配置修改方式. 注意这并不是唯一的修改方式.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;使用命令查看当前的键盘方案 : &lt;code&gt;setxkbmap -print&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;我这里显示的是:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;xkb_keymap {  
	xkb_keycodes  { include &amp;quot;evdev+aliases(qwerty)&amp;quot;	};  
	xkb_types     { include &amp;quot;complete&amp;quot;	};  
	xkb_compat    { include &amp;quot;complete&amp;quot;	};  
	xkb_symbols   { include &amp;quot;pc+us+inet(evdev)&amp;quot;	};  
	xkb_geometry  { include &amp;quot;pc(pc105)&amp;quot;	};  
};  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;留意 xkb_symbols 这行, 其中显示是  pc + us. 说明我们需要修改的就是这两个 symbols 文件 inet 一般用不到.&lt;/p&gt;

&lt;p&gt;根据之前介绍的概念, 我们修改按键映射, 其实就是修改 key code 和 key symbols 之间的映射关系, 这个映射关系主要保存在以下路径下:&lt;/p&gt;

&lt;p&gt;配置文件的位置 :  &lt;code&gt;/usr/share/X11/xkb/symbols/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在以上路径下可以找到 pc 和 us 两个文件.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;强调一下: 注意备份原始的配置文件, 否则改键失败有可能只能重装系统了&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;使用 vim 等编辑器打开 pc 文件, 会看到类似如下结构&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;default  partial alphanumeric_keys modifier_keys  
xkb_symbols &amp;quot;pc105&amp;quot; {  
	include &amp;quot;pc(editing)&amp;quot;  
	key &amp;lt;LCTL&amp;gt; {  [ Control_L ]  };  
};  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中前两行的部分是这个区块的头, 可以类比与编程语言中函数或方法的概念. 那这两行其实就是函数(方法)的声明(签名).&lt;/p&gt;

&lt;p&gt;花括号中的部分是主体内容.&lt;/p&gt;

&lt;p&gt;include 的功能就是其字面意思, 将其他部分的内容包含进来. 小括号左边的部分即例子中的 pc , 其实就是当前我们编辑的这个文件, 当然他也可以是别的 symbols 文件夹下的文件名. 而小括号内的部分是前面的名称指定的文件中的一个区块名称. 这里引入的是 pc 中的 editing 区块, 它其实就在这个文件的最后面.  而我们当前所在的区块, 按照这种命名方式就应该是  pc(pc105) 了.&lt;/p&gt;

&lt;p&gt;第四行就是定义按键实际意义的部分了. 左边的格式固定为  key &amp;lt;&lt;strong&gt;key code&lt;/strong&gt;&amp;gt;, 表示要定义哪个物理按键. 右边的花括号中包含其按键意义, 一个中括号是一个 &lt;em&gt;group&lt;/em&gt;, 也可以定义多个 group, 可以这样跟在后面写， 中括号内是不同 Level 的意义, level 的个数最多支持 8 个:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;key &amp;lt;xxx&amp;gt; { [ level 1 , level 2, level3, ... ],  
			[ level 1 , level 2 ] }  
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;我要在 pc(pc105) 中找到  &lt;code&gt;Key &amp;lt;CAPS&amp;gt;&lt;/code&gt; 的设置项,  把 symbols 改为 &lt;code&gt;[ Mode_switch ]&lt;/code&gt;. 这样, 就把大小写切换键改为模式切换键. (模式切换键可以用于将一个按键的符号意义切换到 group 2)&lt;/p&gt;

&lt;p&gt;接下来找到 &lt;code&gt;Key &amp;lt;RCTL&amp;gt;&lt;/code&gt; 这行, 把 symbols 改为 &lt;code&gt;[Caps_Lock]&lt;/code&gt;. 这是因为右边的 Ctrl 键我几乎不会用到, 因此把它改成大小写切换键.&lt;/p&gt;

&lt;p&gt;然后找到找到&lt;code&gt;modifier_map Control{ Control_L, Control_R };&lt;/code&gt; 这行. 意思是说, 通用的 Control 修饰键可以由 Control_L 和 Control_R 来触发. 我将其中的 &lt;code&gt;Control_R&lt;/code&gt; 删掉, 因为我要让右边的 Ctrl 键实现大小写切换的功能来替代 Caps Lock 键.&lt;/p&gt;

&lt;p&gt;至此, 所有 &lt;code&gt;CAPS + AnyKey&lt;/code&gt; 会被映射到这个键的 Group1 符号组. (模式切换键也可以按照同样的思路改为其他按键, 只要自己觉得习惯, 并且和现有的其他组合键尽量避免冲突即可)&lt;/p&gt;

&lt;p&gt;下来需要将我需要的功能绑定到对应的按键上了,  需要编辑 us 文件, 这是 English us 键盘布局. 这个文件的结构与 pc 类似, 只不过要长得多.&lt;/p&gt;

&lt;p&gt;虽然 us 文件很长, 但是我所要实现的功能只需要关注 &lt;code&gt;us(basic)&lt;/code&gt; 区块就足够了.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;key &amp;lt;AD08&amp;gt; { [ i, I ] };&lt;/code&gt; 这行, 我需要让 &lt;code&gt;Caps Lock + i&lt;/code&gt; 变成方向键上, 我只需将其改成 :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;key &amp;lt;AD08&amp;gt; { [ i, I ], [ Up ] };  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第二个中括号就是 group 2 了, 其中只包含一个 Up, 就是说这个 group 中只有一个 Level 1.&lt;/p&gt;

&lt;p&gt;同样的道理, 找到别的键, 并设置好自己想要的映射.&lt;br /&gt;
我使用的映射是:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;// 默认都是按住 Mode_switch 键 (即改后的 Caps Lock) 的  
i --&amp;gt; Up  
j --&amp;gt; Left  
k --&amp;gt; Down  
l --&amp;gt; Right  
u --&amp;gt; Home  
o --&amp;gt; End  
[ --&amp;gt; Prior (PageUp)  
; --&amp;gt; Next (PageDown)  
d --&amp;gt; BackSpace  
f --&amp;gt; Delete  

// 在 Poker 2 这种紧凑的键盘上,  
数字键 1-0 以及 - = 键依次加上  F1 - F12 键  

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;全部配置完之后, 保存.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;注意: 接下来的步骤有可能导致系统不能正常使用. 没有 Linux 使用经验的朋友请在高手指导下操作, 或者做好重装系统的准备.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;现在需要让系统重新编译配置文件, 我们进入以下路径:&lt;br /&gt;
 &lt;code&gt;/var/lib/xkb&lt;/code&gt; ,&lt;br /&gt;
将该路径下所有的 .xkm 文件都删除.&lt;br /&gt;
然后 logout 注销用户, 再重新登录到图形界面. 如果一切顺利, 此时按键修改完成.&lt;br /&gt;
在 @zyguan 同学的建议下, 发现了更新配置的更方便更优雅的方式 :&lt;br /&gt;
&lt;code&gt;sudo dpkg-reconfigure xkb-data&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;但是, 哪来那么多一切顺利? 你很有可能碰到以下两种情况:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;键盘还是原先的老样子, 按键并没有修改成功&lt;br /&gt;
恭喜你, 虽然没有成功, 但至少不算最糟. 这种情况一般是由于某些配置步骤遗漏, 致使 group 2 没有被正常触发. 用户登录界面, 即输密码的界面右上角, 有个星星状图标, 点以下打开屏幕虚拟键盘, 看看 Caps Lock 键有没有按照预期发生改变, 比如 Mode_switch 按键在这里会显示 &lt;code&gt;AltGr&lt;/code&gt;. 仔细检查配置文件后重新来过.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;键盘上的所有按键都完全没有任何反应, 只有鼠标能动&lt;br /&gt;
呵呵, 这种情况我真的只能呵呵了, 由于水平有限, 我自己的解决方案是, 用 ubuntu 启动 U 盘启动, 进入试用, 然后通过挂载上来的原磁盘, 找到配置文件仔细检查, 这种问题一般是由于格式错误, 括号写反等低级错误导致, 也有是因为配置了一种 xkb 不支持的映射, 找到他们, 尝试修改, 重新再试.&lt;br /&gt;
如果实在搞不定, 直接恢复成之前备份的配置文件, 放弃改键吧. xkb 的难用是出了名的. 替换完后删掉 .xkm 文件重启就 OK 了.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;另一种可能的键盘配置-适用于-mac-笔记本-2015-10-17-更新&#34;&gt;另一种可能的键盘配置, 适用于 Mac 笔记本   (2015-10-17 更新)&lt;/h3&gt;

&lt;p&gt;Caps Lock &amp;ndash;&amp;gt; Control     ( 交换keycode )&lt;/p&gt;

&lt;p&gt;ALT R &amp;ndash;&amp;gt; Mode Switch    (右 Alt 变 MDSW,  原 MDSW 注掉)&lt;/p&gt;

&lt;p&gt;上下左右 Home End PageUp PageDown  仍然映射为 Mode Switch + 右手区域的按键, 如之前的方案.&lt;/p&gt;

&lt;p&gt;MAC 需要将左侧的 Command 和 Alt 交换位置,  右侧 Command 映射为 Mode,  相对比较复杂.&lt;/p&gt;

&lt;p&gt;详细的配置方式参考代码片段:&lt;/p&gt;

&lt;p&gt;/usr/share/X11/xkb/symbols/us 的配置和最初的一样, 不需要修改.&lt;/p&gt;

&lt;p&gt;/usr/share/X11/xkb/symbols/pc 的关键代码如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	key  &amp;lt;TAB&amp;gt; {        [ Tab,  ISO_Left_Tab    ]       };  
    key &amp;lt;RTRN&amp;gt; {        [ Return                ]       };  

    key &amp;lt;CAPS&amp;gt; {        [ Caps_Lock             ]       };  
    key &amp;lt;NMLK&amp;gt; {        [ Num_Lock              ]       };  

    key &amp;lt;LFSH&amp;gt; {        [ Shift_L               ]       };  
    key &amp;lt;LCTL&amp;gt; {        [ Control_L             ]       };  
    key &amp;lt;LWIN&amp;gt; {        [ Super_L               ]       };  

    key &amp;lt;RTSH&amp;gt; {        [ Shift_R               ]       };  
    key &amp;lt;RCTL&amp;gt; {        [ Control_R             ]       };  
    key &amp;lt;RWIN&amp;gt; {        [ Super_R               ]       };  
    key &amp;lt;MENU&amp;gt; {        [ Menu                  ]       };  
// 注: 以上代码都保持不变, 否则更换不同布局的键盘会导致越改越乱的情况.  

	// Beginning of modifier mappings.  
    modifier_map Shift  { Shift_L, Shift_R };  
    // modifier_map Lock   { Caps_Lock };  
    modifier_map Control{ Control_L, Control_R };  
    modifier_map Mod2   { Num_Lock };  
    modifier_map Mod4   { Super_L, Super_R };  
// 注: 以上部分只需将 Lock 的那行注掉不用就行. 其他的也不做更改.  

    key &amp;lt;ALT&amp;gt;  {        [ NoSymbol, Alt_L       ]       };  
    // include &amp;quot;altwin(meta_alt)&amp;quot;  
    key &amp;lt;LALT&amp;gt; {        [ Alt_L, Meta_L         ]       };  
    key &amp;lt;RALT&amp;gt; {        [ Mode_switch           ]       };  
    modifier_map Mod1 { Alt_L, Meta_L };  
// 注: 原有的 include 的配置直接拿过来做修改, 这样就不再依赖 altwin 配置文件.  
// 注意 RALT 的对应 Symbol 改成 MDSW 了, 另外, Mod1 中和 RALT 有关的都删掉.  

    // Fake keys for virtual&amp;lt;-&amp;gt;real modifiers mapping:  
    key &amp;lt;MDSW&amp;gt; {        [ Mode_switch           ]       };  
    modifier_map Mod5   { &amp;lt;MDSW&amp;gt;, &amp;lt;RALT&amp;gt; };  
// Mod5 中根据需要将 RALT 加进来,  

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/usr/share/X11/xkb/keycodes/evdev   主要是修改 keycode 到 对应变量的映射. 涉及具体键盘布局的问题, 主要是要修改这个文件.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        // &amp;lt;CAPS&amp;gt; = 66;  
        &amp;lt;RCTL&amp;gt; = 66;  
// 将 CAPS 替换成 RCTL  
        // &amp;lt;RCTL&amp;gt; = 105;  
        &amp;lt;CAPS&amp;gt; = 105;  
// 将 RCTL 替换成 CAPS  
        // &amp;lt;RALT&amp;gt; = 108;  
         &amp;lt;MDSW&amp;gt; = 108;  
        // &amp;lt;MDSW&amp;gt; =   203;  
// 将 RALT 替换成 Mode Switch  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果是Mac键盘,   evdev 配置如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        // &amp;lt;CAPS&amp;gt; = 66;  
        &amp;lt;RCTL&amp;gt; = 66;  
        // &amp;lt;RCTL&amp;gt; = 105;  
        &amp;lt;CAPS&amp;gt; = 105;  
// 交换 CAPS 和 RCTL 键, 其实 RCTL 几乎很少用  
        // &amp;lt;LALT&amp;gt; = 64;  
        &amp;lt;LWIN&amp;gt; = 64;  
        // &amp;lt;LWIN&amp;gt; = 133;  
        &amp;lt;LALT&amp;gt; = 133;  
// 交换左Command 键和 Alt 键  
        // &amp;lt;RALT&amp;gt; = 108;  
        &amp;lt;PRSC&amp;gt; = 108;  
        // &amp;lt;PRSC&amp;gt; = 107;  
// RALT 也没什么用了, 干脆换成 Print Screen  
        // &amp;lt;RWIN&amp;gt; = 134;  
        &amp;lt;MDSW&amp;gt; = 134;  
        // &amp;lt;MDSW&amp;gt; =   203;  
// RCOMMAND 键设置为 Mode Switch  

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;xkb-的导出和导入&#34;&gt;xkb 的导出和导入&lt;/h3&gt;

&lt;p&gt;当前配置导出 :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xkbcomp $DISPLAY myxkb.dump  
// 导出的文件是文本, 可编辑, 但结构比较复杂.  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;导入配置:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xkbcomp myxkb.dump $DISPLAY  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;直接切换配置文件并生效:   可以参考文末第一篇引用文章.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;setxkbmap -keycodes [keycodes配置文件名] -print | xkbcomp - $DISPLAY  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上都是低级用法, 更详细的文档和指导请参考这里 :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://madduck.net/docs/extending-xkb/&#34; target=&#34;_blank&#34;&gt;http://madduck.net/docs/extending-xkb/&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.charvolant.org/~doug/xkb/&#34; target=&#34;_blank&#34;&gt;http://www.charvolant.org/~doug/xkb/&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pascal.tsu.ru/en/xkb/&#34; target=&#34;_blank&#34;&gt;http://pascal.tsu.ru/en/xkb/&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Written with &lt;a href=&#34;https://stackedit.io/&#34; target=&#34;_blank&#34;&gt;StackEdit&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        
        <item>
            <title>Linux获取本机IP</title>
            <link>http://blog.pytool.com/linux/2017-10-26-linux%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BAip/</link>
            <pubDate>Tue, 27 Sep 2016 15:58:27 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2017-10-26-linux%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BAip/</guid>
            <description>&lt;p&gt;curl &lt;a href=&#34;http://members.3322.org/dyndns/getip&#34; target=&#34;_blank&#34;&gt;http://members.3322.org/dyndns/getip&lt;/a&gt;&lt;br /&gt;
curl ip.6655.com/ip.aspx&lt;br /&gt;
curl ifconfig.me&lt;br /&gt;
curl icanhazip.com&lt;br /&gt;
curl ident.me&lt;br /&gt;
curl ipecho.net/plain&lt;br /&gt;
curl whatismyip.akamai.com&lt;br /&gt;
curl myip.dnsomatic.com&lt;/p&gt;

&lt;p&gt;#更多用法访问ifconfig.co&lt;br /&gt;
wget -qO - ifconfig.co&lt;/p&gt;

&lt;p&gt;#返回IP和地区&lt;br /&gt;
curl ip.6655.com/ip.aspx?area=1&lt;br /&gt;
curl cip.cc&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>CentOS7常见问题</title>
            <link>http://blog.pytool.com/linux/2010-01-01-centos%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
            <pubDate>Tue, 27 Sep 2016 15:55:04 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2010-01-01-centos%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
            <description>

&lt;h1 id=&#34;镜像&#34;&gt;镜像&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/centos/&#34; target=&#34;_blank&#34;&gt;https://mirrors.tuna.tsinghua.edu.cn/help/centos/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;设置系统时间&#34;&gt;设置系统时间&lt;/h2&gt;

&lt;p&gt;cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
ntpdate time.pool.aliyun.com&lt;/p&gt;

&lt;h2 id=&#34;centos配置时间同步&#34;&gt;Centos配置时间同步&lt;/h2&gt;

&lt;p&gt;yum install -y ntp&lt;br /&gt;
ntpdate ntp1.aliyun.com
ntpdate -u cn.ntp.org.cn ntp.ubuntu.com
ansible all -a &amp;ldquo;ntpdate -u cn.ntp.org.cn&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;更新内核&#34;&gt;更新内核&lt;/h2&gt;

&lt;p&gt;ansible all -a &amp;ldquo;grub2-editenv list&amp;rdquo;
ansible all -a &amp;ldquo;grub2-set-default &amp;lsquo;CentOS Linux (3.10.0-327.el7.x86_64) 7 (Core)&amp;lsquo;&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;centos配置阿里源&#34;&gt;Centos配置阿里源&lt;/h2&gt;

&lt;p&gt;1、备份原来的源
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
2.获取阿里源
curl -so /etc/yum.repos.d/CentOS-Base.repo &lt;a href=&#34;http://mirrors.aliyun.com/repo/Centos-7.repo&#34; target=&#34;_blank&#34;&gt;http://mirrors.aliyun.com/repo/Centos-7.repo&lt;/a&gt;
3.生成缓存
yum makecache&lt;/p&gt;

&lt;h2 id=&#34;centos-配置清华源&#34;&gt;Centos 配置清华源&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.back
wget http://mirrors.aliyun.com/repo/Centos-7.repo  -P /etc/yum.repos.d/
mv /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/CentOS-Base.repo
yum install -y epel-release
yum install -y centos-release-openstack-mitaka
sed -i &amp;quot;s@#baseurl@baseurl@g&amp;quot; /etc/yum.repos.d/epel.repo
sed -i &amp;quot;s@mirrorlist@#mirrorlist@g&amp;quot;  /etc/yum.repos.d/epel.repo
sed -i &amp;quot;s#http://download.fedoraproject.org/pub#https://mirrors.tuna.tsinghua.edu.cn#g&amp;quot; /etc/yum.repos.d/epel.repo
sed -i &amp;quot;s#http://elrepo.org/linux#https://mirror.tuna.tsinghua.edu.cn/elrepo#g&amp;quot; /etc/yum.repos.d/elrepo.repo
sed -i &amp;quot;s#mirror.centos.org#mirrors.163.com#g&amp;quot; /etc/yum.repos.d/CentOS-OpenStack-mitaka.repo
yum clean all
yum makecache
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;centos-mongo&#34;&gt;Centos mongo&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/usr/bin/env bash

# install mongodb
cat &amp;lt;&amp;lt;EOF &amp;gt;/etc/yum.repos.d/mongodb.repo
[mongodb-org]
name=MongoDB Repository
baseurl=https://mirrors.tuna.tsinghua.edu.cn/mongodb/yum/el&#39;$&#39;releasever/
gpgcheck=0
enabled=1
EOF

sudo yum makecache
sudo yum install mongodb-org -y
sed -i &#39;s/127.0.0.1/0.0.0.0/&#39; /etc/mongod.conf
systemctl restart mongod
echo &amp;quot;/software/mongodb/bin/mongod --config /software/mongodb/mongo.config&amp;quot; &amp;gt;&amp;gt; /etc/rc.local
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;gitlab&#34;&gt;gitlab&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 清华大学开源软件镜像站
# https://mirrors.tuna.tsinghua.edu.cn/help/gitlab-ce/
echo -e &amp;quot;[gitlab-ce]\nname=Gitlab CE Repository\nbaseurl=https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el\$releasever/\ngpgcheck=0\nenabled=1&amp;quot; &amp;gt; /etc/yum.repos.d/gitlab-ce.repo
sudo yum makecache
sudo yum install gitlab-ce
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;chmod og-rwx /etc/cron.d&lt;br /&gt;
chmod og-rwx /etc/cron.monthly&lt;br /&gt;
chmod og-rwx /etc/cron.weekly&lt;br /&gt;
chmod og-rwx /etc/cron.daily&lt;br /&gt;
chmod og-rwx /etc/cron.hourly&lt;br /&gt;
chmod og-rwx /etc/crontab&lt;br /&gt;
chmod og-rwx /boot/grub2/grub.cfg&lt;/p&gt;

&lt;p&gt;/etc/sysctl.d/99-cis.conf&lt;/p&gt;

&lt;p&gt;net.ipv4.conf.all.send_redirects=0&lt;br /&gt;
net.ipv4.conf.default.send_redirects=0&lt;br /&gt;
net.ipv4.conf.all.accept_redirects=0&lt;br /&gt;
net.ipv4.conf.default.accept_redirects=0&lt;br /&gt;
net.ipv4.conf.all.secure_redirects=0&lt;br /&gt;
net.ipv4.conf.default.secure_redirects=0&lt;br /&gt;
net.ipv4.conf.all.rp_filter=1&lt;br /&gt;
net.ipv4.conf.default.rp_filter=1&lt;br /&gt;
net.ipv4.conf.default.rp_filter=1&lt;br /&gt;
net.ipv6.conf.all.accept_ra=0&lt;br /&gt;
net.ipv6.conf.default.accept_ra=0&lt;br /&gt;
net.ipv6.conf.all.accept_redirects=0&lt;br /&gt;
net.ipv6.conf.default.accept_redirects=0&lt;br /&gt;
检查项:&lt;br /&gt;
禁止转发ICMP重定向报文&lt;br /&gt;
加固建议:&lt;br /&gt;
执行sysctl -w net.ipv4.conf.all.send_redirects=0,再查看/etc/sysctl.conf中是否存在net.ipv4.conf.all.send_redirects=0，不存在则添加&lt;br /&gt;
检查项:&lt;br /&gt;
禁止转发ICMP重定向报文&lt;br /&gt;
加固建议:&lt;br /&gt;
执行sysctl -w net.ipv4.conf.default.send_redirects=0,再查看/etc/sysctl.conf中是否存在net.ipv4.conf.default.send_redirects=0，不存在则添加&lt;br /&gt;
检查项:&lt;br /&gt;
禁止包含源路由的ip包&lt;br /&gt;
加固建议:&lt;br /&gt;
执行sysctl -w net.ipv4.conf.all.accept_redirects=0,再查看/etc/sysctl.conf中是否存在net.ipv4.conf.all.accept_redirects=0，不存在则添加&lt;br /&gt;
检查项:&lt;br /&gt;
禁止包含源路由的ip包&lt;br /&gt;
加固建议:&lt;br /&gt;
执行sysctl -w net.ipv4.conf.default.accept_redirects=0,再查看/etc/sysctl.conf中是否存在net.ipv4.conf.default.accept_redirects=0，不存在则添加&lt;br /&gt;
检查项:&lt;br /&gt;
禁止转发安全ICMP重定向报文&lt;br /&gt;
加固建议:&lt;br /&gt;
执行sysctl -w net.ipv4.conf.all.secure_redirects=0,再查看/etc/sysctl.conf中是否存在net.ipv4.conf.all.secure_redirects=0，不存在则添加&lt;br /&gt;
检查项:&lt;br /&gt;
禁止转发安全ICMP重定向报文&lt;br /&gt;
加固建议:&lt;br /&gt;
执行sysctl -w net.ipv4.conf.default.secure_redirects=0,再查看/etc/sysctl.conf中是否存在net.ipv4.conf.default.secure_redirects=0，不存在则添加&lt;br /&gt;
检查项:&lt;br /&gt;
启用反转地址路径过滤&lt;br /&gt;
加固建议:&lt;br /&gt;
执行sysctl -w net.ipv4.conf.all.rp_filter=1,再查看/etc/sysctl.conf中是否存在net.ipv4.conf.all.rp_filter=1，不存在则添加&lt;br /&gt;
检查项:&lt;br /&gt;
启用反转地址路径过滤&lt;br /&gt;
加固建议:&lt;br /&gt;
执行sysctl -w net.ipv4.conf.default.rp_filter=1,再查看/etc/sysctl.conf中是否存在net.ipv4.conf.default.rp_filter=1，不存在则添加&lt;br /&gt;
检查项:&lt;br /&gt;
禁止ipv6路由广播&lt;br /&gt;
加固建议:&lt;br /&gt;
执行sysctl -w net.ipv6.conf.all.accept_ra=0,再查看/etc/sysctl.conf中是否存在net.ipv6.conf.all.accept_ra=0，不存在则添加&lt;br /&gt;
检查项:&lt;br /&gt;
禁止ipv6路由广播&lt;br /&gt;
加固建议:&lt;br /&gt;
执行sysctl -w net.ipv6.conf.default.accept_ra=0,再查看/etc/sysctl.conf中是否存在net.ipv6.conf.default.accept_ra=0，不存在则添加&lt;br /&gt;
检查项:&lt;br /&gt;
禁止ipv6路由重定向&lt;br /&gt;
加固建议:&lt;br /&gt;
执行sysctl -w net.ipv6.conf.all.accept_redirects=0,再查看/etc/sysctl.conf中是否存在net.ipv6.conf.all.accept_redirects=0，不存在则添加&lt;br /&gt;
检查项:&lt;br /&gt;
禁止ipv6路由重定向&lt;br /&gt;
加固建议:&lt;br /&gt;
执行sysctl -w net.ipv6.conf.default.accept_redirects=0,再查看/etc/sysctl.conf中是否存在net.ipv6.conf.default.accept_redirects=0，不存在则添加&lt;br /&gt;
检查项:&lt;br /&gt;
SSHD强制使用V2安全协议&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/ssh/sshd_config中取消注释符号#&lt;br /&gt;
检查项:&lt;br /&gt;
SSHD仅记录ssh用户登录活动&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/ssh/sshd_config中取消LogLevel INFO注释符号#&lt;br /&gt;
检查项:&lt;br /&gt;
SSHD仅记录ssh用户登录活动&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/ssh/sshd_config中取消MaxAuthTries注释符号#，设置自定义最大密码尝试失败次数&lt;br /&gt;
检查项:&lt;br /&gt;
清理主机远程登录历史主机记录&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/ssh/sshd_config中取消IgnoreRhosts yes注释符号#&lt;br /&gt;
检查项:&lt;br /&gt;
禁止主机认证登录&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/ssh/sshd_config中取消HostbasedAuthentication no注释符号#&lt;br /&gt;
检查项:&lt;br /&gt;
禁止root直接登录&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/ssh/sshd_config中PermitRootLogin 值设置为no&lt;br /&gt;
检查项:&lt;br /&gt;
禁止空密码用户登录&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/ssh/sshd_config中取消PermitEmptyPasswords no注释符号#&lt;br /&gt;
检查项:&lt;br /&gt;
禁止用户修改环境变量&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/ssh/sshd_config中取消PermitUserEnvironment no注释符号#&lt;br /&gt;
检查项:&lt;br /&gt;
设置输入密码间隔时间&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/ssh/sshd_config中取消LoginGraceTime前注释符，同时设置输入密码时间间隔秒数&lt;br /&gt;
检查项:&lt;br /&gt;
设置用户密码最小长度&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/security/pwquality.conf中取消minlen注释符号#，同时设置最小密码长度建议10位以上&lt;br /&gt;
检查项:&lt;br /&gt;
设置用户密码数字位数&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/security/pwquality.conf中取消dcredit注释符号#，同时设置为负数建议-1最少包含1位数字&lt;br /&gt;
检查项:&lt;br /&gt;
设置用户密码大写字母位数&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/security/pwquality.conf中取消ucredit注释符号#，同时设置为负数建议-1最少包含1位大写字母&lt;br /&gt;
检查项:&lt;br /&gt;
设置用户密码小写字母位数&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/security/pwquality.conf中取消lcredit注释符号#，同时设置为负数建议-1最少包含1位小写字母&lt;br /&gt;
检查项:&lt;br /&gt;
设置用户密码特殊字符位数&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/security/pwquality.conf中取消ocredit注释符号#，同时设置为负数建议-1最少包含1位特殊字符&lt;br /&gt;
检查项:&lt;br /&gt;
新密码与老密码不能重复&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/pam.d/password-auth中添加：password sufficient pam_unix.so remember=3这一行,remember的值表示此次设置密码与过去3次不同&lt;br /&gt;
检查项:&lt;br /&gt;
新密码与老密码不能重复&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/pam.d/system-auth中添加：password sufficient pam_unix.so remember=3这一行,remember的值表示此次设置密码与过去3次不同&lt;br /&gt;
检查项:&lt;br /&gt;
检查空密码账户&lt;br /&gt;
加固建议:&lt;br /&gt;
使用如下命令设置有密码账户不活动最大时间值：useradd -D -f 90，建议值90&lt;br /&gt;
检查项:&lt;br /&gt;
rsyslog日志文件权限配置&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/rsyslog.conf中添加：$FileCreateMode 0640&lt;br /&gt;
检查项:&lt;br /&gt;
强制密码失效时间&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/login.defs 设置强制密码失效时间，建议值365&lt;br /&gt;
检查项:&lt;br /&gt;
密码修改最小间隔时间&lt;br /&gt;
加固建议:&lt;br /&gt;
在/etc/login.defs 设置密码修改最小间隔时间，建议值7&lt;br /&gt;
检查项:&lt;br /&gt;
设置有密码账户不活动最大时间&lt;br /&gt;
加固建议:&lt;br /&gt;
使用如下命令设置有密码账户不活动最大时间值：useradd -D -f 90，建议值90&lt;br /&gt;
检查项:&lt;br /&gt;
检查/boot/grub2/grub.cfg文件ACL属性&lt;br /&gt;
加固建议:&lt;br /&gt;
执行：chmod og-rwx /boot/grub2/grub.cfg&lt;br /&gt;
检查项:&lt;br /&gt;
检查/etc/crontab文件ACL属性&lt;br /&gt;
加固建议:&lt;br /&gt;
执行：chmod og-rwx /etc/crontab&lt;br /&gt;
检查项:&lt;br /&gt;
检查/etc/cron.hourly文件ACL属性&lt;br /&gt;
加固建议:&lt;br /&gt;
执行：chmod og-rwx /etc/cron.hourly&lt;br /&gt;
检查项:&lt;br /&gt;
检查/etc/cron.daily文件ACL属性&lt;br /&gt;
加固建议:&lt;br /&gt;
执行：chmod og-rwx /etc/cron.daily&lt;br /&gt;
检查项:&lt;br /&gt;
检查/etc/cron.weekly 文件ACL属性&lt;br /&gt;
加固建议:&lt;br /&gt;
执行：chmod og-rwx /etc/cron.weekly&lt;br /&gt;
检查项:&lt;br /&gt;
检查/etc/cron.monthly 文件ACL属性&lt;br /&gt;
加固建议:&lt;br /&gt;
执行：chmod og-rwx /etc/cron.monthly&lt;/p&gt;

&lt;p&gt;检查/etc/cron.d 文件ACL属性&lt;br /&gt;
加固建议:&lt;br /&gt;
执行：chmod og-rwx /etc/cron.d&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>CentOS内核升级及gub启动项配置</title>
            <link>http://blog.pytool.com/linux/centos%E5%86%85%E6%A0%B8%E5%8D%87%E7%BA%A7%E5%8F%8Agub%E5%90%AF%E5%8A%A8%E9%A1%B9%E9%85%8D%E7%BD%AE/</link>
            <pubDate>Tue, 27 Sep 2016 15:55:04 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/centos%E5%86%85%E6%A0%B8%E5%8D%87%E7%BA%A7%E5%8F%8Agub%E5%90%AF%E5%8A%A8%E9%A1%B9%E9%85%8D%E7%BD%AE/</guid>
            <description>&lt;p&gt;zybb 更新内核
方式1: 强制更新序号 &lt;code&gt;ls /boot/|grep vmlinuz &amp;amp;&amp;amp; sed -i &#39;/GRUB_DEFAULT/s/^.*$/GRUB_DEFAULT=1/&#39; /etc/default/grub &amp;amp;&amp;amp; grub2-mkconfig -o /boot/grub2/grub.cfg&lt;/code&gt;
方式2: [推荐]更新saved_entry &lt;code&gt;cat /boot/grub2/grub.cfg|grep ^menuentry &amp;amp;&amp;amp; yum update -y &amp;amp;&amp;amp; grub2-set-default &#39;CentOS Linux (3.10.0-327.el7.x86_64) 7 (Core)&#39; &amp;amp;&amp;amp; grub2-editenv list&lt;/code&gt;
1. 查看当前系统内核版本
&lt;code&gt;uname -sr&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Linux 3.10.0-327.3.1.el7.x86_64&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;查看所有内核
&lt;code&gt;ls /boot/|grep vmlinuz&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;vmlinuz-3.10.0-327.3.1.el7.x86_64&lt;br /&gt;
vmlinuz-3.10.0-327.el7.x86_64&lt;br /&gt;
vmlinuz-0-rescue-5cb2c0bac3c040f5807e947c6b0bf499&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;查看当前启动项
&lt;code&gt;grub2-editenv list&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;saved_entry=CentOS Linux (3.10.0-327.3.1.el7.x86_64) 7 (Core)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;查看启动内核在配置的第几项从0开始
&lt;code&gt;cat /boot/grub2/grub.cfg|grep ^menuentry&lt;/code&gt;
&lt;code&gt;grep ^menuentry /boot/grub2/grub.cfg | cut -d &amp;quot;&#39;&amp;quot; -f2&lt;/code&gt;
menuentry &amp;lsquo;CentOS Linux (3.10.0-327.3.1.el7.x86_64) 7 (Core)&amp;rsquo;                 &lt;code&gt;GRUB_DEFAULT=0&lt;/code&gt;
menuentry &amp;lsquo;CentOS Linux (3.10.0-327.el7.x86_64) 7 (Core)&amp;rsquo;                     &lt;code&gt;GRUB_DEFAULT=1&lt;/code&gt;
menuentry &amp;lsquo;CentOS Linux (0-rescue-5cb2c0bac3c040f5807e947c6b0bf499) 7 (Core)&amp;rsquo; &lt;code&gt;GRUB_DEFAULT=2&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置 GRUB 引导,默认的内核版本&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;grub2-set-default &amp;lsquo;CentOS Linux (3.10.0-327.el7.x86_64) 7 (Core)&amp;rsquo;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;grub2-editenv list&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;grub2-mkconfig -o /boot/grub2/grub.cfg&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为了让新安装的内核成为默认启动选项，你需要如下修改 GRUB 配置：
打开并编辑 &lt;code&gt;vi /etc/default/grub&lt;/code&gt; 并设置 &lt;code&gt;GRUB_DEFAULT=0&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR=&amp;quot;$(sed &#39;s, release .*$,,g&#39; /etc/system-release)&amp;quot;
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT=&amp;quot;console&amp;quot;
GRUB_CMDLINE_LINUX=&amp;quot;vconsole.keymap=us crashkernel=auto  vconsole.font=latarcyrheb-sun16 nofb nomodeset console=tty0 console=ttyS0,115200 enforcing=0&amp;quot;
GRUB_DISABLE_RECOVERY=&amp;quot;true&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;重建内核配置。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;grub2-mkconfig -o /boot/grub2/grub.cfg&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
        <item>
            <title>CoreOS常见问题</title>
            <link>http://blog.pytool.com/linux/2010-01-01-coreos%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
            <pubDate>Tue, 27 Sep 2016 15:55:04 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2010-01-01-coreos%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
            <description>&lt;p&gt;yum install epel-release&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>LUbuntu常见问题</title>
            <link>http://blog.pytool.com/linux/2010-01-01-lubuntu%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
            <pubDate>Tue, 27 Sep 2016 15:55:04 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2010-01-01-lubuntu%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
            <description>&lt;p&gt;xterm字体太小&lt;/p&gt;

&lt;p&gt;方法一：CTRL+右键，会出现菜单，选择大些的字体就好了，不过关闭后再打开会恢复原状&lt;/p&gt;

&lt;p&gt;方法二：运行 xterm -fn 8*16, 会打开一个大字体的xterm，8*16也可以改成其他尺寸&lt;/p&gt;

&lt;p&gt;Lx终端字母都挤到一起了&lt;/p&gt;

&lt;p&gt;解决方法：字体选成AR PL UMing&lt;/p&gt;

&lt;p&gt;挤到一起跟字体选择有关，已经尝试过AR PL UMing字体是可以的，其他字体没有尝试&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Ubuntu常见问题</title>
            <link>http://blog.pytool.com/linux/2010-01-01-ubuntu%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
            <pubDate>Tue, 27 Sep 2016 15:55:04 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2010-01-01-ubuntu%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
            <description>

&lt;p&gt;python -m SimpleHTTPServer 4000
axel -n 10 -o /tmp/ &lt;a href=&#34;http://soft.vpser.net/lnmp/lnmp0.7-full.tar.gz&#34; target=&#34;_blank&#34;&gt;http://soft.vpser.net/lnmp/lnmp0.7-full.tar.gz&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://cdimage.ubuntu.com/&#34; target=&#34;_blank&#34;&gt;ubuntu最新镜像&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;清理dns缓存&#34;&gt;清理dns缓存&lt;/h2&gt;

&lt;p&gt;从 NetworkManager 切换到 Systemd-networkd&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudosystemctl restart systemd-networkd&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;开机自启动&#34;&gt;开机自启动&lt;/h2&gt;

&lt;h1 id=&#34;方法一-设置开机自动启动&#34;&gt;方法一：设置开机自动启动&lt;/h1&gt;

&lt;h1 id=&#34;vi-config-upstart-firefox-conf&#34;&gt;vi ~/.config/upstart/firefox.conf&lt;/h1&gt;

&lt;p&gt;start on desktop-start&lt;br /&gt;
stop on desktop-end&lt;br /&gt;
exec /usr/bin/firefox&lt;/p&gt;

&lt;h1 id=&#34;方法二-设置开机自动启动&#34;&gt;方法二：设置开机自动启动&lt;/h1&gt;

&lt;p&gt;mkdir -p ~/.config/autostart&lt;br /&gt;
cp /usr/share/applications/firefox.desktop ~/.config/autostart/firefox.desktop&lt;br /&gt;
chmod +x ~/.config/autostart/firefox.desktop&lt;/p&gt;

&lt;h1 id=&#34;方法三-startup-applications-添加&#34;&gt;方法三：Startup Applications 添加&lt;/h1&gt;

&lt;h1 id=&#34;ubuntu-系统优化&#34;&gt;ubuntu 系统优化&lt;/h1&gt;

&lt;h2 id=&#34;添加-移除更新源&#34;&gt;添加/移除更新源&lt;/h2&gt;

&lt;p&gt;sudo apt-add-repository &amp;lsquo;deb &lt;a href=&#34;https://dl.bintray.com/go-swagger/goswagger-debian&#34; target=&#34;_blank&#34;&gt;https://dl.bintray.com/go-swagger/goswagger-debian&lt;/a&gt; ubuntu main&amp;rsquo;&lt;br /&gt;
sudo apt-add-repository -r &amp;lsquo;deb &lt;a href=&#34;https://dl.bintray.com/go-swagger/goswagger-debian&#34; target=&#34;_blank&#34;&gt;https://dl.bintray.com/go-swagger/goswagger-debian&lt;/a&gt; ubuntu main&amp;rsquo;&lt;/p&gt;

&lt;h2 id=&#34;1-编辑更新源&#34;&gt;1.编辑更新源&lt;/h2&gt;

&lt;p&gt;apt edit-sources  等价 vi /etc/apt/sources.list&lt;/p&gt;

&lt;p&gt;cat /etc/apt/sources.list.d/*.list #查看所有更新源&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-add-repository &#39;deb http://myserver/path/to/repo stable myrepo&#39;  
apt-add-repository &#39;http://myserver/path/to/repo myrepo&#39;  
apt-add-repository &#39;https://packages.medibuntu.org free non-free&#39;  
apt-add-repository http://extras.ubuntu.com/ubuntu  
apt-add-repository ppa:user/repository  
apt-add-repository ppa:user/distro/repository  
apt-add-repository multiverse  
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;切换-更新源aliyun&#34;&gt;切换 更新源aliyun&lt;/h2&gt;

&lt;p&gt;sed -i &amp;ldquo;s/archive.ubuntu/mirrors.aliyun/g&amp;rdquo; /etc/apt/sources.list&lt;br /&gt;
// sed -i &amp;ldquo;s/security.ubuntu/mirrors.aliyun/g&amp;rdquo; /etc/apt/sources.list&lt;/p&gt;

&lt;p&gt;sudo sed -i &amp;rsquo;s/archive.ubuntu.com/mirrors.sohu.com/g&amp;rsquo; /etc/apt/sources.list&lt;br /&gt;
sudo sed -i &amp;rsquo;s/archive.ubuntu.com/mirrors.163.com/g&amp;rsquo; /etc/apt/sources.list&lt;br /&gt;
sudo sed -i &amp;rsquo;s/archive.ubuntu.com/mirrors.ustc.edu.cn/g&amp;rsquo; /etc/apt/sources.list&lt;br /&gt;
sudo sed -i &amp;rsquo;s/archive.ubuntu.com/mirrors.aliyun.com/g&amp;rsquo; /etc/apt/sources.list&lt;br /&gt;
sudo sed -i &amp;rsquo;s/archive.ubuntu.com/mirrors.aliyuncs.com/g&amp;rsquo; /etc/apt/sources.list #内网使用&lt;/p&gt;

&lt;h2 id=&#34;ubuntu-ctrl-alt-b快捷键冲突&#34;&gt;Ubuntu ctrl+alt+b快捷键冲突&lt;/h2&gt;

&lt;p&gt;安装了搜狗拼音后，其快捷键ctrl+alt+b会启动软键盘，造成与其他编辑器快捷键的冲突。&lt;br /&gt;
为了禁止使用ctrl+alt+b启动软键盘，可以：fcitx设置，选择Addon选项卡，高级 &lt;code&gt;取消选择虚拟键盘&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;##GWF&lt;br /&gt;
&lt;code&gt;wget -qO /etc/hosts https://raw.githubusercontent.com/racaljk/hosts/master/hosts&lt;/code&gt;&lt;br /&gt;
##让cd对大小写不敏感&lt;br /&gt;
&lt;code&gt;echo bind \&amp;quot;set completion-ignore-case on\&amp;quot; &amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;ubuntu-14-系统精简&#34;&gt;ubuntu 14 系统精简&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#sudo apt-get -y purge firefox* #firefox  
sudo apt-get -y purge empathy #即时通讯  
sudo apt-get -y purge libreoffice-* #办公套件  
sudo apt-get -y purge unity-webapps-common #Amazon  
sudo apt-get -y purge deja-dup #备份  
sudo apt-get -y purge webbrowser-app #浏览器  
sudo apt-get -y purge unity-scope-gdrive  
sudo apt-get -y purge unity-lens-photos  
sudo apt-get -y purge landscape-client-ui-install #landscape 服务  
sudo apt-get -y purge transmission-gtk #Transmission BitTorrent  
sudo apt-get -y purge rhythmbox* #音乐播放  
sudo apt-get -y purge wodim #命令刻碟  
sudo apt-get -y purge brasero #光盘刻录  
sudo apt-get -y purge gnome-orca #屏幕阅读  
sudo apt-get -y purge ubiquity #安装 RELEASE  
sudo apt-get -y purge totem #视频  
sudo apt-get -y purge cheese #茄子  
sudo apt-get -y purge aisleriot #纸牌王  
sudo apt-get -y purge gnome-mines #扫雷  
sudo apt-get -y purge gnome-sudoku #数独  
sudo apt-get -y purge gnome-mahjongg #对对碰  
sudo apt-get -y autoremove  

sudo apt-get update  
sudo apt-get -y dist-upgrade  
#sudo apt-get -y upgrade  
#sudo apt-get autoclean  
sudo apt-get dist-upgrade --fix-missing  

我用了搜狗输入法。  
卸载了ibus然后装了fcitx，再装了搜狗。  
记得一定要启动  
sogou-qimpanel &amp;amp;  
/usr/bin/fcitx &amp;amp;  
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ubuntu-server&#34;&gt;ubuntu server&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;## docker-engine  
curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -  
curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/intranet | sh -  
## docker-compose  
curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` &amp;gt; /usr/local/bin/docker-compose  
sudo chmod +x /usr/local/bin/docker-machine  
## zip  
apt install unzip  
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ubuntu-14-必备软件&#34;&gt;ubuntu 14 必备软件&lt;/h2&gt;

&lt;p&gt;###terminal&lt;br /&gt;
sudo apt-get install nautilus-open-terminal&lt;br /&gt;
###git&lt;br /&gt;
sudo apt-get install git&lt;br /&gt;
###vim&lt;br /&gt;
sudo apt-get -y install vim&lt;br /&gt;
###chromium-browser&lt;br /&gt;
#sudo apt-get -y install chromium-browser&lt;br /&gt;
sudo apt install adobe-flashplugin&lt;/p&gt;

&lt;p&gt;#firefox Shockwave Flash&lt;br /&gt;
sudo apt-get install flashplugin-installer&lt;br /&gt;
#wireshark&lt;br /&gt;
sudo apt install wireshark&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://launchpad.net/ubuntu/+ppas&#34; target=&#34;_blank&#34;&gt;https://launchpad.net/ubuntu/+ppas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.ubuntuupdates.org&#34; target=&#34;_blank&#34;&gt;http://www.ubuntuupdates.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;sudo add-apt-repository -y ppa:webupd8team/java&lt;br /&gt;
sudo apt-add-repository &amp;ndash;remove ppa:webupd8team/java&lt;br /&gt;
sudo add-apt-repository -y ppa:zeal-developers/ppa  #zeal&lt;br /&gt;
sudo add-apt-repository -y ppa:ubuntu-elisp/ppa         #emacs&lt;br /&gt;
sudo add-apt-repository -y ppa:neovim-ppa/unstable  #neovim&lt;br /&gt;
sudo add-apt-repository -y ppa:webupd8team/sublime-text-3&lt;br /&gt;
sudo add-apt-repository -y ppa:webupd8team/tor-browser&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://launchpad.net/~docker&#34; target=&#34;_blank&#34;&gt;https://launchpad.net/~docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;sudo add-apt-repository -y ppa:docker/experimental         #docker&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://launchpad.net/~nginx&#34; target=&#34;_blank&#34;&gt;https://launchpad.net/~nginx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;sudo add-apt-repository -y ppa:nginx/development #nginx ppa:nginx/stable&lt;br /&gt;
sudo add-apt-repository -y ppa:dreibh/ppa #wireshark&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://launchpad.net/~backbox&#34; target=&#34;_blank&#34;&gt;https://launchpad.net/~backbox&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;sudo add-apt-repository -y ppa:backbox/four #黑客工具&lt;/p&gt;

&lt;p&gt;sudo add-apt-repository &amp;ndash;remove ppa:webupd8team&lt;/p&gt;

&lt;p&gt;kali /etc/apt/sources.list&lt;/p&gt;

&lt;p&gt;deb &lt;a href=&#34;http://http.kali.org/kali&#34; target=&#34;_blank&#34;&gt;http://http.kali.org/kali&lt;/a&gt; kali-rolling main contrib non-free&lt;/p&gt;

&lt;p&gt;For source package access, uncomment the following line&lt;/p&gt;

&lt;p&gt;deb-src &lt;a href=&#34;http://http.kali.org/kali&#34; target=&#34;_blank&#34;&gt;http://http.kali.org/kali&lt;/a&gt; kali-rolling main contrib non-free&lt;/p&gt;

&lt;p&gt;sudo apt-key adv &amp;ndash;keyserver keyserver.ubuntu.com &amp;ndash;recv-keys ED444FF07D8D0BF6&lt;/p&gt;

&lt;h1 id=&#34;软件安装&#34;&gt;软件安装&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;xx-net&lt;br /&gt;
sudo apt-get install python-openssl&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;atom&lt;br /&gt;
sudo add-apt-repository -y ppa:webupd8team/atom&lt;br /&gt;
sudo apt-add-repository &amp;ndash;remove  ppa:webupd8team/atom&lt;br /&gt;
&lt;code&gt;curl -Lxk 127.0.0.1:8087 https://atom-installer.github.com/v1.16.0/atom-amd64.deb -O&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;go&lt;br /&gt;
curl -O &lt;a href=&#34;https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz&#34; target=&#34;_blank&#34;&gt;https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz&lt;/a&gt;&lt;br /&gt;
 &lt;code&gt;sudo tar -zxf go1.8.1.linux-amd64.tar.gz -C /usr/local&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;pandoc&lt;br /&gt;
sudo apt install pandoc&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;typora&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;sudo apt-key adv &amp;ndash;keyserver keyserver.ubuntu.com &amp;ndash;recv-keys BA300B7755AFCFAE&lt;br /&gt;
  sudo add-apt-repository &amp;lsquo;deb &lt;a href=&#34;http://typora.io&#34; target=&#34;_blank&#34;&gt;http://typora.io&lt;/a&gt; linux/&amp;rsquo;&lt;br /&gt;
  sudo add-apt-repository -r &amp;lsquo;deb &lt;a href=&#34;http://typora.io&#34; target=&#34;_blank&#34;&gt;http://typora.io&lt;/a&gt; linux/&amp;rsquo;    #移除&lt;br /&gt;
  sudo apt-get install typora&lt;/p&gt;

&lt;p&gt;###docker&lt;br /&gt;
curl -sSL &lt;a href=&#34;https://get.docker.com/&#34; target=&#34;_blank&#34;&gt;https://get.docker.com/&lt;/a&gt; | sh&lt;br /&gt;
sudo gpasswd -a ${USER} docker&lt;br /&gt;
sudo docker login&lt;br /&gt;
sudo docker pull node&lt;br /&gt;
docker run -it -p 80:4000 -v /media/ubuntu/software/rinetd:/blog emitting/hexo /bin/bash&lt;/p&gt;

&lt;p&gt;##xx-net&lt;br /&gt;
git clone &lt;a href=&#34;https://github.com/XX-net/XX-Net&#34; target=&#34;_blank&#34;&gt;https://github.com/XX-net/XX-Net&lt;/a&gt; ~/XX-Net&lt;/p&gt;

&lt;p&gt;sudo apt-get -y install libnss3-tools&lt;/p&gt;

&lt;p&gt;sudo apt-get -y install python-openssl&lt;/p&gt;

&lt;p&gt;sudo apt-get -y install libffi-dev&lt;/p&gt;

&lt;p&gt;sudo apt-get -y install python-gtk2&lt;/p&gt;

&lt;p&gt;sudo apt-get -y install python-vte&lt;/p&gt;

&lt;p&gt;##hexo&lt;br /&gt;
curl -sL &lt;a href=&#34;https://deb.nodesource.com/setup_5.x&#34; target=&#34;_blank&#34;&gt;https://deb.nodesource.com/setup_5.x&lt;/a&gt; | sudo -E bash -&lt;br /&gt;
sudo apt-get install -y nodejs&lt;br /&gt;
sudo apt-get install -y build-essential #gyp ERR! build error&lt;br /&gt;
sudo npm -y install hexo -g&lt;/p&gt;

&lt;p&gt;##sudo npm -y install cnpm -g&lt;br /&gt;
##sudo ln -sf /usr/bin/nodejs /usr/bin/node&lt;br /&gt;
npm config set proxy &lt;a href=&#34;http://localhost:port&#34; target=&#34;_blank&#34;&gt;http://localhost:port&lt;/a&gt;&lt;br /&gt;
npm config set https-proxy &lt;a href=&#34;http://localhost:port&#34; target=&#34;_blank&#34;&gt;http://localhost:port&lt;/a&gt;&lt;br /&gt;
npm config set registry &lt;a href=&#34;http://registry.npm.taobao.org/&#34; target=&#34;_blank&#34;&gt;http://registry.npm.taobao.org/&lt;/a&gt;&lt;br /&gt;
npm config set registry &lt;a href=&#34;http://registry.cnpmjs.org&#34; target=&#34;_blank&#34;&gt;http://registry.cnpmjs.org&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;

## 字体相关目录  
[字体下载](https://www.fontsquirrel.com/)  
[字体口袋](http://www.zitikoudai.com/chinese-fonts/weiruan/Microsoft-Yahei-UI-Light.html)  
sudo fc-cache -fv  
/usr/share/fonts/ 		#系统默认字体目录  
/usr/local/share/fonts	#空  
~/.local/share/fonts 	#安装字体目录  
~/.fonts								#空  
​``` 常用字体  
Source Code Pro  
DejaVu Sans Mono  
Inconsolata  
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;开机显示按s跳过按m手动修复&#34;&gt;开机显示按S跳过按M手动修复&lt;/h2&gt;

&lt;p&gt;终端下输入&lt;code&gt;sudo blkid&lt;/code&gt;,然后对比uuid,将fstab中的uuid修改为正确的，这种情况多见于双系统，后来又格式化分区造成uuid改变了&lt;/p&gt;

&lt;p&gt;我修改了，我的/etc/fstab文件，与blkid显示的uuid号一样，开机硬盘挂载就正常了。&lt;/p&gt;

&lt;h2 id=&#34;自启动管理&#34;&gt;自启动管理&lt;/h2&gt;

&lt;p&gt;alt+f2 #打开运行命令&lt;br /&gt;
gnome-session-properties&lt;/p&gt;

&lt;h2 id=&#34;解决输入法fcitx无法启动&#34;&gt;解决输入法fcitx无法启动&lt;/h2&gt;

&lt;p&gt;删除~/.config/目录下的fcitx相关目录&lt;/p&gt;

&lt;h2 id=&#34;系统修复&#34;&gt;系统修复&lt;/h2&gt;

&lt;p&gt;rm -rf .gconf&lt;/p&gt;

&lt;h2 id=&#34;sudo-无法解析主机-xenial&#34;&gt;sudo: 无法解析主机：xenial&lt;/h2&gt;

&lt;p&gt;sudo gedit /etc/hosts&lt;br /&gt;
    127.0.0.1   xenial&lt;/p&gt;

&lt;h2 id=&#34;最重要的快捷键&#34;&gt;最重要的快捷键&lt;/h2&gt;

&lt;p&gt;Ctrl + Alt + T 打开终端&lt;/p&gt;

&lt;h1 id=&#34;dpkg-警告-无法找到软件包-xxxx-问题解决&#34;&gt;dpkg：警告：无法找到软件包 XXXX 问题解决&lt;/h1&gt;

&lt;p&gt;sudo apt-get &amp;ndash;fix-missing &amp;ndash;reinstall install &lt;code&gt;dpkg --get-selections | grep &#39;[[:space:]]install&#39; | cut -f1&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;禁用错误报告&#34;&gt;禁用错误报告&lt;/h2&gt;

&lt;p&gt;sudo gedit /etc/default/apport&lt;br /&gt;
enabled=0&lt;br /&gt;
sudo service apport&lt;/p&gt;

&lt;h2 id=&#34;创建桌面快捷方式&#34;&gt;创建桌面快捷方式&lt;/h2&gt;

&lt;p&gt;sudo nautilus&lt;br /&gt;
进入&lt;br /&gt;
/usr/share/applications&lt;br /&gt;
把需要的图标，也就是desktop文件复制到桌面上。&lt;/p&gt;

&lt;h2 id=&#34;linux将中文目录名改为英文&#34;&gt;Linux将中文目录名改为英文&lt;/h2&gt;

&lt;p&gt;export LANG=en_US&lt;br /&gt;
xdg-user-dirs-gtk-update&lt;br /&gt;
export LANG=zh_CN.UTF-8&lt;br /&gt;
vim ~/.config/user-dirs.dirs&lt;/p&gt;

&lt;h2 id=&#34;ubuntu-15-04双击运行-sh-py文件&#34;&gt;Ubuntu 15.04双击运行 .sh、.py文件&lt;/h2&gt;

&lt;p&gt;任意打开一个文件夹，选择左上角的  ”编辑——首选项“&lt;br /&gt;
首选项中切换到行为选项卡，把“可执行文本文件”中的选项“打开可执行文本文件时查看其内容”，改选为“打开可执行文本文件时运行它们”；&lt;/p&gt;

&lt;h2 id=&#34;virtualbox-vboxclient-the-virtualbox-kernel-service-is-not-running-exiting&#34;&gt;【VirtualBox】vboxclient the virtualbox kernel service is not running. exiting.&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo /etc/init.d/vboxdrv setup  
sudo /etc/init.d/vboxadd setup  
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;network-service-discovery-disabled&#34;&gt;Network service discovery disabled&lt;/h2&gt;

&lt;p&gt;sudo -i&lt;br /&gt;
gedit /etc/default/avahi-daemon&lt;br /&gt;
AVAHI_DAEMON_DETECT_LOCAL=0&lt;/p&gt;

&lt;h2 id=&#34;win10-ubuntu16-04-双系统-时间不一致问题解决办法&#34;&gt;win10 ubuntu16.04 双系统 时间不一致问题解决办法&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;问题原因是使用的时间不一致导致的。win10直接从bios读出来的时间认为就是实际时间，ubuntu认为加上8个小时 后的才是。win10用的rtc ，ubuntu用的utc  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;timedatectl set-local-rtc true&lt;/p&gt;

&lt;h2 id=&#34;关闭utc时间&#34;&gt;关闭UTC时间&lt;/h2&gt;

&lt;h1 id=&#34;sudo-timedatectl-set-local-rtc-1&#34;&gt;sudo timedatectl set-local-rtc 1&lt;/h1&gt;

&lt;h1 id=&#34;1-硬件时钟使用-utc&#34;&gt;1 - 硬件时钟使用 UTC&lt;/h1&gt;

&lt;p&gt;timedatectl set-local-rtc 0&lt;/p&gt;

&lt;h1 id=&#34;timedatectl-set-ntp-1&#34;&gt;timedatectl set-ntp 1&lt;/h1&gt;

&lt;h1 id=&#34;2-硬件时钟使用本地时间&#34;&gt;2 - 硬件时钟使用本地时间&lt;/h1&gt;

&lt;p&gt;timedatectl set-local-rtc 1 &amp;ndash;adjust-system-clock&lt;br /&gt;
timedatectl set-ntp 0&lt;/p&gt;

&lt;h2 id=&#34;通过改变内核启动参数获得root权限&#34;&gt;通过改变内核启动参数获得root权限&lt;/h2&gt;

&lt;p&gt;　　启动电脑，等待GRUB菜单，如果GRUB菜单隐藏，可以按Esc调出，如果设置了GRUB密码，按p来解锁，比如我们选择了 Ubuntu, kernel 2.6.12-8-386，按e在启动前编辑启动参数，选择kernel /boot/vmlinuz-2.6.12-8-386 root=/dev/hda2 ro quiet splash，按&lt;code&gt;e&lt;/code&gt;编辑选定的启动菜单项，在参数最后添加&lt;code&gt;rw init=/bin/bash&lt;/code&gt;，即改为如下命令行：&lt;br /&gt;
　　grub edit&amp;gt; kernel /boot/vmlinuz-2.6.12-8-386 root=/dev/hda2 ro quiet splash rw init=/bin/bash&lt;br /&gt;
　　按&lt;code&gt;b&lt;/code&gt;启动即可。&lt;/p&gt;

&lt;h2 id=&#34;解决ubuntu不能挂载ntfs格式硬盘-只读&#34;&gt;解决Ubuntu不能挂载ntfs格式硬盘 只读&lt;/h2&gt;

&lt;p&gt;sudo ntfsfix /dev/sdb2&lt;/p&gt;

&lt;p&gt;sudo ntfs-3g /dev/sda2 /windows&lt;/p&gt;

&lt;p&gt;The disk contains an unclean file system (0, 0).&lt;br /&gt;
Metadata kept in Windows cache, refused to mount.&lt;br /&gt;
Falling back to read-only mount because the NTFS partition is in an&lt;br /&gt;
unsafe state. Please resume and shutdown Windows fully (no hibernation&lt;br /&gt;
or fast restarting.)&lt;/p&gt;

&lt;h1 id=&#34;使用dd来备份还原mbr-分区表&#34;&gt;使用dd来备份还原mbr,分区表&lt;/h1&gt;

&lt;p&gt;备份和还原MBR文件：&lt;br /&gt;
dd if=/dev/sda of=/mnt/usb/mbr.backup bs=512 count=1&lt;br /&gt;
dd if=/mnt/usb/mbr.backup of=/dev/sda bs=512 count=1&lt;/p&gt;

&lt;p&gt;别用512会丢分区的&lt;br /&gt;
dd if=/dev/hda of=/mbr.bak bs=446 count=1&lt;/p&gt;

&lt;h2 id=&#34;修复windows在grub2下的引导&#34;&gt;修复windows在grub2下的引导&lt;/h2&gt;

&lt;p&gt;sudo update-grub2&lt;/p&gt;

&lt;h2 id=&#34;系统安装&#34;&gt;系统安装&lt;/h2&gt;

&lt;p&gt;sudo umount -l /isodevice&lt;br /&gt;
#sudo umount -l /cdrom  #不要执行 否则无法添加ubuntu引导&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;/boot/grub/grub.cfg    系统根据“/etc/grub.d”和“/etc/default/grub”自动生成的文件&lt;br /&gt;

&lt;ol&gt;
&lt;li&gt;/etc/grub.d/             系统生成文件夹&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;/etc/default/grub 用户配置文件 通过&lt;code&gt;sudo update-grub2&lt;/code&gt; 重新生&lt;code&gt;/boot/grub/grub.cfg&lt;/code&gt;&lt;br /&gt;
“GRUB_DEFAULT=0”就是设置的默认启动项了&lt;br /&gt;
GRUB启动项是按照启动菜单依次使用数字进行索引了，起始数字为0。结合前面的系统启动菜单，我们可以看到，&lt;br /&gt;
Windows8的启动项在第5项，因此这里我们就需要修改为4&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;unetbtin&#34;&gt;unetbtin&lt;/h2&gt;

&lt;p&gt;menuentry &amp;lsquo;Ubuntu 14.04 LiveCD&amp;rsquo; {&lt;br /&gt;
set root=(hd0,2) #vmlinuz和initrd.gz文件所在的分区&lt;br /&gt;
linux /vmlinuz.efi boot=casper iso-scan/filename=/ubuntu-14.04.4-desktop-amd64.iso splash locale=zh_CN.UTF-8&lt;br /&gt;
initrd /initrd.lz&lt;br /&gt;
}&lt;/p&gt;

&lt;h2 id=&#34;easybcd&#34;&gt;easyBCD&lt;/h2&gt;

&lt;p&gt;title Install Ubuntu&lt;br /&gt;
root (hd0,1)&lt;br /&gt;
kernel /vmlinuz.efi boot=casper iso-scan/filename=/ubuntu-15.10-desktop-amd64.iso ro quiet splash locale=zh_CN.UTF-8&lt;br /&gt;
initrd /initrd.lz&lt;/p&gt;

&lt;h2 id=&#34;修复win10-引导grub-customizer&#34;&gt;修复Win10 引导Grub-Customizer&lt;/h2&gt;

&lt;p&gt;sudo add-apt-repository ppa:yannUbuntu/boot-repair &amp;amp;&amp;amp; sudo apt-get update&lt;br /&gt;
sudo apt-get install -y boot-repair &amp;amp;&amp;amp; boot-repair&lt;/p&gt;

&lt;p&gt;sudo add-apt-repository ppa:danielrichter2007/grub-customizer&lt;br /&gt;
sudo apt-get update&lt;br /&gt;
sudo apt-get install grub-customizer&lt;br /&gt;
sudo apt-get remove grub-customizer&lt;br /&gt;
移除PPA命令：&lt;br /&gt;
sudo apt-get install ppa-purge&lt;br /&gt;
sudo ppa-purge ppa:danielrichter2007/grub-customizer&lt;/p&gt;

&lt;h2 id=&#34;移动home和让ubuntu拥有分身的技术-主要参考了这个网站&#34;&gt;移动home和让ubuntu拥有分身的技术。 主要参考了这个网站 。&lt;/h2&gt;

&lt;p&gt;新开一个分区，格式化为ext4格式。&lt;br /&gt;
将你的home目录复制过去。建议用root账户操作：&lt;/p&gt;

&lt;p&gt;su sudo cp -afrv /home/* /media/wanze/data&lt;/p&gt;

&lt;p&gt;这里建议使用 gparted 分区工具将分区的卷标加号，比如上面我加上了data卷标，然后挂载就成了/media/wanze/data的地址，当然你也可以用ubuntu的文件浏览器设置那里选择输入位置，那个位置你复制了就是的。 上面选项加上v就是为了防止你出现系统卡死的错觉。。&lt;/p&gt;

&lt;p&gt;复制的时候你可以开始修改/etc/fstab文件。我之前没有/home设置，所以需要重新加上这样一句：&lt;br /&gt;
 # home was on /dev/sda6 during installation&lt;br /&gt;
UUID=e56f656e-8ebb-4ab8-8f76-c1e26aba22a4  /home ext4 defaults 0 0&lt;br /&gt;
上面的UUID也就是你新分区的那个UUID，通过命令：&lt;/p&gt;

&lt;p&gt;ls -l /dev/disk/by-uuid&lt;br /&gt;
查看。日期时间后面那个就是，然后设置/home挂载点，其他就是defaults 0 0 0了。&lt;/p&gt;

&lt;p&gt;稳妥起见，我发现复制完了新的wanze文件夹权限不一样了，用sudo nautilus 修改下权限，和你之前的一模一样就行了。&lt;br /&gt;
重启，发现简直一模一样，包括网络硬盘同步程序等等都没出错。&lt;br /&gt;
将fstab那一句注释掉，重启，发现又进入原来的wanze主目录了。然后将不重要的音乐，下载的文件图片等，因为重复了，所以删除掉节省点根目录的空间。&lt;br /&gt;
将fstab那句不注释，发现又进入新的主目录文件夹了。这样就感觉有了两个系统，毕竟个人电脑用户出错就出错在home文件夹里面的设置上，这样算是有了双保险了把。&lt;br /&gt;
在ubuntu下删除ntfs分区的休眠文件&lt;br /&gt;
这个问题是windows休眠了，然后不知怎么出错了然后就进入不了windows系统了。这个时候windows系统还是有救的。如果你装了双系统的话，进入ubuntu系统，删除掉ntfs分区的休眠文件即可。参考了 这个网页 。&lt;/p&gt;

&lt;p&gt;sudo mount -t ntfs-3g -o remove_hiberfile /dev/sda5  具体挂载的位置&lt;br /&gt;
这个命令其实就是mount命令，然后加上了 -o remove_hiberfile 。后面的第一个参数是待加载项，这里应该是你的win7安装的目标ntfs分区，可用 sudo fdisk -l 查看一下。然后具体挂载的位置随意:&lt;/p&gt;

&lt;p&gt;sudo mkdir /media/wanze/D&lt;br /&gt;
sudo mount  /dev/sda5 /media/wanze/D&lt;/p&gt;

&lt;h2 id=&#34;在ubuntu下通过iso文件硬盘安装win7系统&#34;&gt;在ubuntu下通过ISO文件硬盘安装win7系统&lt;/h2&gt;

&lt;p&gt;用gparter分区&lt;br /&gt;
先mount&lt;br /&gt;
把文件复制到d盘&lt;br /&gt;
执行 sudo update-grub&lt;br /&gt;
重启到新加入的那个恢复模式下即可﻿&lt;/p&gt;

&lt;h2 id=&#34;linux修改键盘映射capslock为ctrl&#34;&gt;linux修改键盘映射capslock为ctrl&lt;/h2&gt;

&lt;p&gt;sudo apt-get install xmodmap&lt;br /&gt;
sudo apt-get install x11-xserver-utils&lt;/p&gt;

&lt;p&gt;在自己的工作目录home里新建一个.xmodmaprc的文件&lt;br /&gt;
vim .xmodmaprc&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;remove Lock = Caps_Lock  
remove Control = Control_R  
keysym Control_R = Caps_Lock  
keysym Caps_Lock = Control_R  
add Lock = Caps_Lock  
add Control = Control_R  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行&lt;br /&gt;
xmodmap .xmodmaprc&lt;br /&gt;
/bin/bash -c &amp;ldquo;sleep 20; /usr/bin/xmodmap /home/$USER/.Xmodmap&amp;rdquo;&lt;br /&gt;
fcitx-xkb覆盖掉了xmodmap，把xkb禁用就好了&lt;br /&gt;
2.&lt;br /&gt;
setxkbmap -option ctrl:swapcaps&lt;br /&gt;
3.&lt;br /&gt;
&lt;code&gt;man xkeyboard-config&lt;/code&gt;&lt;br /&gt;
sudo vi /etc/default/keyboard&lt;br /&gt;
找到“XKBOPTIONS”，加入“ctrl:swapcaps”来交换Caps Lock和Control键。如果还要加入其他的选项，中间可以用英文逗号隔开。&lt;/p&gt;

&lt;p&gt;XKBOPTIONS=&amp;ldquo;ctrl:nocaps&amp;rdquo;&lt;/p&gt;

&lt;p&gt;最后需要执行&lt;/p&gt;

&lt;p&gt;sudo dpkg-reconfigure keyboard-configuration&lt;/p&gt;

&lt;p&gt;这样修改以后，图形界面和虚拟终端下（例如Ctrl+Alt+F1）都可以起作用。而通过gnome-tweak-tool修改的只能在图形界面下起作用。&lt;/p&gt;

&lt;h2 id=&#34;docker&#34;&gt;docker&lt;/h2&gt;

&lt;p&gt;curl -sSL &lt;a href=&#34;https://get.docker.com/&#34; target=&#34;_blank&#34;&gt;https://get.docker.com/&lt;/a&gt; | sh&lt;br /&gt;
&lt;a href=&#34;http://openvz.org/Download/templates/precreated&#34; target=&#34;_blank&#34;&gt;http://openvz.org/Download/templates/precreated&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;sudo docker pull ubuntu:15.10&lt;br /&gt;
sudo docker pull learn/tutorial&lt;br /&gt;
docker images&lt;br /&gt;
docker ps&lt;/p&gt;

&lt;p&gt;文件监控 DaemonFS&lt;br /&gt;
磁盘 gnome-disks&lt;br /&gt;
磁盘使用情况分析器 baobab&lt;/p&gt;

&lt;h2 id=&#34;安装主题&#34;&gt;安装主题&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.linuxdiyf.com/linux/15583.html&#34; target=&#34;_blank&#34;&gt;ubuntu15.10install-mac-theme&lt;/a&gt;&lt;br /&gt;
sudo add-apt-repository ppa:noobslab/icons&lt;br /&gt;
sudo apt-get update&lt;br /&gt;
sudo apt-get upgrade&lt;br /&gt;
导入公钥:&lt;br /&gt;
sudo apt-key adv &amp;ndash;keyserver keyserver.ubuntu.com &amp;ndash;recv-keys 6AF0E1940624A220&lt;/p&gt;

&lt;p&gt;sudo apt-get install ultra-flat-icons&lt;br /&gt;
    mac 主题&lt;br /&gt;
sudo add-apt-repository ppa:noobslab/themes&lt;br /&gt;
sudo apt-get update&lt;br /&gt;
sudo apt-get install macbuntu-bscreen-v6&lt;br /&gt;
sudo apt-get install macbuntu-icons-v6&lt;br /&gt;
sudo apt-get install macbuntu-ithemes-v6&lt;br /&gt;
sudo apt-get install macbuntu-lightdm-v6&lt;br /&gt;
sudo apt-get install macbuntu-plank-theme-v6&lt;/p&gt;

&lt;p&gt;sudo apt-get install docky&lt;/p&gt;

&lt;h2 id=&#34;安装chromium并添加pepper-flash-player&#34;&gt;安装Chromium并添加Pepper Flash Player&lt;/h2&gt;

&lt;p&gt;sudo apt-get update sudo apt-get install chromium-browser&lt;br /&gt;
sudo apt-get install pepperflashplugin-nonfree&lt;br /&gt;
sudo update-pepperflashplugin-nonfree &amp;ndash;install&lt;/p&gt;

&lt;h2 id=&#34;安装搜狗输入法&#34;&gt;安装搜狗输入法&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://jingyan.baidu.com/article/ad310e80ae6d971849f49ed3.html&#34; target=&#34;_blank&#34;&gt;http://jingyan.baidu.com/article/ad310e80ae6d971849f49ed3.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;安装corkscrew&#34;&gt;安装corkscrew&lt;/h2&gt;

&lt;p&gt;#sudo apt-get install corkscrew&lt;br /&gt;
#vi ~/.corkscrew-auth&lt;br /&gt;
加入useraname:password   代理服务器使用的用户名密码&lt;br /&gt;
比如：Aubby：123456&lt;br /&gt;
#vi ~/.ssh/config&lt;br /&gt;
Host 192.168.0.*                                \远程目标主机网段&lt;br /&gt;
ControlPersist 4h \长连接，防止自动断开连接&lt;br /&gt;
         User Aubby  \登陆远程主机不需要再加用户名&lt;br /&gt;
ProxyCommand corkscrew HTTP代理IP HTTP代理端口 %h %p ~/.corkscrew-auth&lt;br /&gt;
Host  172.168.10.1 172.168.10.2                 \针对多个代理多个主机&lt;br /&gt;
ControlPersist 4h&lt;br /&gt;
 User Aubby&lt;br /&gt;
       ProxyCommand corkscrew HTTP代理IP HTTP代理端口 %h %p ~/.corkscrew-auth&lt;br /&gt;
#ssh 192.168.0.1&lt;br /&gt;
#ssh 172.168.10.1 测试 则都可成功&lt;br /&gt;
16条技巧让你更高效使用ssh&lt;/p&gt;

&lt;h2 id=&#34;在任务栏显示网速&#34;&gt;在任务栏显示网速&lt;/h2&gt;

&lt;p&gt;sudo add-apt-repository ppa:nilarimogard/webupd8&lt;br /&gt;
sudo apt-get update&lt;br /&gt;
sudo apt-get install indicator-netspeed&lt;/p&gt;

&lt;h2 id=&#34;ssh忽略known-hosts&#34;&gt;ssh忽略known_hosts&lt;/h2&gt;

&lt;p&gt;mkdir -p ~/.ssh&lt;br /&gt;
echo -e &amp;ldquo;StrictHostKeyChecking no\nUserKnownHostsFile /dev/null&amp;rdquo; &amp;gt; ~/.ssh/config&lt;/p&gt;

&lt;h2 id=&#34;keepass&#34;&gt;keepass&lt;/h2&gt;

&lt;p&gt;12.04用ppa安装：&lt;br /&gt;
    sudo apt-add-repository ppa:jtaylor/keepass&lt;br /&gt;
    sudo apt-get update&lt;br /&gt;
    sudo apt-get install keepass2&lt;br /&gt;
14.04在软件商店里搜keepass安装。&lt;/p&gt;

&lt;h2 id=&#34;git&#34;&gt;GIT&lt;/h2&gt;

&lt;p&gt;ssh-keygen -t rsa -b 4096 -C &amp;ldquo;rinetd@163.com&amp;rdquo;&lt;br /&gt;
Git设置当前分支为默认push分支&lt;br /&gt;
git config &amp;ndash;global push.default &amp;ldquo;current&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;vim&#34;&gt;VIM&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;git clone &amp;ndash;recursive &lt;a href=&#34;https://github.com/sdlylshl/vimfiles&#34; target=&#34;_blank&#34;&gt;https://github.com/sdlylshl/vimfiles&lt;/a&gt; .vim&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;ln -s .vim/gitconfig .gitconfig&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;ln -s .vim/vimrc .vimrc&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;./powerline-fonts/install.sh&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;sudo update-alternatives &amp;ndash;install /usr/bin/editor editor /usr/bin/vim 1&lt;br /&gt;
sudo update-alternatives &amp;ndash;set editor /usr/bin/vim&lt;/p&gt;

&lt;p&gt;sudo update-alternatives &amp;ndash;install /usr/bin/vi vi /usr/bin/vim 1&lt;br /&gt;
sudo update-alternatives &amp;ndash;set vi /usr/bin/vim&lt;/p&gt;

&lt;h2 id=&#34;lnav工具是在终端界面看日志的神器&#34;&gt;lnav工具是在终端界面看日志的神器&lt;/h2&gt;

&lt;p&gt;sudo apt-get install lnav&lt;/p&gt;

&lt;h2 id=&#34;sublime安装sublime-text-3&#34;&gt;sublime安装Sublime Text 3&lt;/h2&gt;

&lt;p&gt;sudo add-apt-repository ppa:webupd8team/sublime-text-3&lt;br /&gt;
sudo apt-get update&lt;br /&gt;
sudo apt-get install sublime-installer&lt;br /&gt;
【解决不能跟随】&lt;br /&gt;
sudo apt-get remove fcitx-ui-qimpanel&lt;br /&gt;
【在Ubuntu上SublimeText无法输入中文的解决方法】&lt;br /&gt;
1.sudo apt-get install build-essential libgtk2.0-dev&lt;br /&gt;
2. &lt;a href=&#34;https://raw.githubusercontent.com/sdlylshl/sublime-imfix/master/sublime-imfix.c&#34; target=&#34;_blank&#34;&gt;https://raw.githubusercontent.com/sdlylshl/sublime-imfix/master/sublime-imfix.c&lt;/a&gt;&lt;br /&gt;
3. gcc -shared -o libsublime-imfix.so sublime-imfix.c &lt;code&gt;pkg-config --libs --cflags gtk+-2.0&lt;/code&gt; -fPIC&lt;br /&gt;
  //4. mv libsublime-imfix.so $SUBLIME_HOME/&lt;br /&gt;
  //5. LD_PRELOAD=./libsublime-imfix.so ./sublime_text&lt;br /&gt;
4. sudo cp libsublime-imfix.so /usr/lib/&lt;br /&gt;
5. 修改/usr/share/applications/sublime_text.desktop文件&lt;br /&gt;
   sudo vim /usr/share/applications/sublime_text.desktop&lt;br /&gt;
   8.打开后将Exec=/opt/sublime_text/sublime_text %F修改为&lt;br /&gt;
    Exec=bash -c &amp;lsquo;LD_PRELOAD=/usr/lib/libsublime-imfix.so /opt/sublime_text/sublime_text&amp;rsquo; %F&lt;br /&gt;
   9.将Exec=/opt/sublime_text/sublime_text -n修改为&lt;br /&gt;
    Exec=bash -c &amp;lsquo;LD_PRELOAD=/usr/lib/libsublime-imfix.so /opt/sublime_text/sublime_text&amp;rsquo; -n&lt;/p&gt;

&lt;p&gt;我之前用的也是百度经验的方法，这个方法有三个缺点：&lt;br /&gt;
    1. 修改了系统文件，更新sublime后会被覆盖&lt;br /&gt;
    2. 如题主所说，打开文件夹、查看安装包之类的功能都失效了&lt;br /&gt;
    3. 在sublime中新建文件并保存，新建的文件不能输入中文&lt;/p&gt;

&lt;p&gt;之后我参考的是这篇博客的方法，其实原理是一样的，只是不再修改系统文件，而是直接从终端启动。建议到第4步就行了。&lt;br /&gt;
 &lt;a href=&#34;http://blog.csdn.net/cywosp/article/details/32350899&#34; target=&#34;_blank&#34;&gt;http://blog.csdn.net/cywosp/article/details/32350899&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在博客的基础之上，我配置了命令别名：&lt;/p&gt;

&lt;p&gt;# .bashrc&lt;br /&gt;
 alias st=&amp;lsquo;LD_PRELOAD=./libsublime-imfix.so subl&amp;rsquo;&lt;br /&gt;
 使用这种方法，不会出现上面说的三个问题，唯一的缺点是需要从命令行启动：&lt;/p&gt;

&lt;p&gt;xx@pc $ st&lt;br /&gt;
 xx@pc $ st test.txt&lt;/p&gt;

&lt;h2 id=&#34;利用proxychains在终端使用socks5代理&#34;&gt;利用proxychains在终端使用socks5代理&lt;/h2&gt;

&lt;p&gt;git clone &lt;a href=&#34;https://github.com/rofl0r/proxychains-ng.git&#34; target=&#34;_blank&#34;&gt;https://github.com/rofl0r/proxychains-ng.git&lt;/a&gt;&lt;br /&gt;
cd proxychains-ng&lt;br /&gt;
./configure&lt;br /&gt;
make &amp;amp;&amp;amp; make install&lt;br /&gt;
sudo cp ./src/proxychains.conf /etc/proxychians.conf&lt;br /&gt;
sudo vim /etc/proxychains.conf&lt;br /&gt;
proxychains4 wget &lt;a href=&#34;http://xxx.com/xxx.zip&#34; target=&#34;_blank&#34;&gt;http://xxx.com/xxx.zip&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;shadowsocks&#34;&gt;shadowsocks&lt;/h2&gt;

&lt;p&gt;apt-get install python-pip &amp;amp; pip install shadowsocks&lt;br /&gt;
apt-get install  shadowsocks&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;启动 ss客户端&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;启动方法a，直接在终端用命令：&lt;br /&gt;
sslocal -s 123.123.213.213 -p 6666 -b 127.0.0.1 -l 1080 -k 23333 -t 600 -m aes-256-cfb把ss启动命令写成shell脚本方便使用。&lt;/p&gt;

&lt;p&gt;启动方法b，用配置文件启动：&lt;br /&gt;
配置文件存为ss.conf，格式&lt;br /&gt;
 {&lt;br /&gt;
&amp;ldquo;server&amp;rdquo; : &amp;ldquo;123.123.213.213&amp;rdquo;,&lt;br /&gt;
&amp;ldquo;server_port&amp;rdquo; : 6666,&lt;br /&gt;
&amp;ldquo;local_port&amp;rdquo; : 1080,&lt;br /&gt;
&amp;ldquo;password&amp;rdquo; : &amp;ldquo;23333&amp;rdquo;,&lt;br /&gt;
&amp;ldquo;timeout&amp;rdquo; : 600,&lt;br /&gt;
&amp;ldquo;method&amp;rdquo; : &amp;ldquo;aes-256-cfb&amp;rdquo;&lt;br /&gt;
}启动时使用命令：&lt;br /&gt;
sslocal -c /filepath/to/ss.conf&lt;/p&gt;

&lt;p&gt;完成。&lt;/p&gt;

&lt;p&gt;PS：&lt;br /&gt;
a.记得在Network设置代理: 设置Socks Host指向 ss客户端的本地IP和端口, 即127.0.0.1 1080;&lt;br /&gt;
b.有同学反应还是不能科学上网。说明一下，SS不同于VPN，它是走socks5协议的，一般搭配浏览器食用，对于terminal的get,wget等走http是没有帮助的。虽然有socks转http的方法，但这里就不折腾了。&lt;/p&gt;

&lt;p&gt;=====UPDATE=====&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;开机启动ss(可选)&lt;br /&gt;
在/etc/rc.local中添加启动命令。&lt;br /&gt;
例如:&lt;br /&gt;
sudo  vi /etc/rc.local在exit 0前添加(这里假设你已经在第2步写好shell脚本，并命名为ss_start.sh)&lt;br /&gt;
sudo sh /path/to/sslocal/ss_start.sh如果路径和权限都没问题，在下次开机时就会启动ss了。&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;查看ss是否已经开启，用下面这个:&lt;br /&gt;
ps -ef | grep sslocal&lt;/p&gt;

&lt;h2 id=&#34;bcompare&#34;&gt;bcompare&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.scootersoftware.com/download.php?zz=kb_linux_install&#34; target=&#34;_blank&#34;&gt;Beyond Compare 4&lt;/a&gt;&lt;br /&gt;
sudo apt-get update&lt;br /&gt;
sudo apt-get install gdebi&lt;br /&gt;
sudo gdebi bcompare-4.1.3.20814_amd64.deb&lt;/p&gt;

&lt;p&gt;&amp;mdash; BEGIN LICENSE KEY &amp;mdash;&lt;br /&gt;
Fo7lH0ughgFtGPKAHfwe++uxz+tXUDoTEfAdG4AzBIAKfDdIkBGdtGeEreevnWFQgD5GsGCV5kuGI5afF3b2LdJzJXE6YVapYW7f+tRRXRFI4yn4NjjZ0RiiqGRCTVzwComUcXB-eiFWRBY6JpSsCNkmIxL5KsRCo442djHhTZE+&lt;br /&gt;
&amp;mdash; END LICENSE KEY &amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;p&gt;sudo apt-get autoremove firefox&lt;br /&gt;
sudo apt-get purge firefox&lt;/p&gt;

&lt;p&gt;1.删除libreoffice&lt;/p&gt;

&lt;p&gt;libreoffice虽然是开源的，但是Java写出来的office执行效率实在不敢恭维，装完系统后果断删掉&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get remove libreoffice-common  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.删除Amazon的链接&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get remove unity-webapps-common  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.删掉基本不用的自带软件（用的时候再装也来得及）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get remove thunderbird totem rhythmbox empathy brasero simple-scan gnome-mahjongg aisleriot gnome-mines cheese transmission-common gnome-orca webbrowser-app gnome-sudoku  landscape-client-ui-install  

sudo apt-get remove onboard deja-dup  
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;配置windows分区自动挂载&#34;&gt;配置Windows分区自动挂载&lt;/h2&gt;

&lt;p&gt;sudo apt-get install ntfs-config&lt;br /&gt;
/usr/share/hal/fdi/policy/10osvendor/25-ntfs-3g-policy.fdi&lt;br /&gt;
利用终端命令实现进入ntfs分区有两种方法。&lt;br /&gt;
一、手动设置ubuntu自动挂载Windows分区方法：&lt;br /&gt;
1、先用FDISK命令查看一下磁盘的UUID&lt;br /&gt;
$sudo fdisk -l&lt;br /&gt;
/dev/sda1 * 1 851 6835626 83 Linux&lt;br /&gt;
/dev/sda2 852 4039 25607610 f W95 Ext&amp;rsquo;d (LBA)&lt;br /&gt;
/dev/sda5 945 2135 9566676 7 HPFS/NTFS&lt;br /&gt;
/dev/sda6 2136 4039 15293848+ 7 HPFS/NTFS&lt;br /&gt;
2、编辑/etc/fstab文件&lt;br /&gt;
$sudo gedit /etc/fstab&lt;br /&gt;
弹出geidt的文本编辑框，在文件尾部添加如下内容：&lt;br /&gt;
/dev/sda6 /media/my ntfs-3g defaults,locale=zh_CN.UTF-8 0 0&lt;br /&gt;
/dev/sda5 /media/tools ntfs-3g defaults,locale=zh_CN.UTF-8 0 0&lt;br /&gt;
重启即可自动挂载NTFS分区了。&lt;br /&gt;
二、安装ntfs-config加载ntfs分区。&lt;br /&gt;
1、先安装两个软件，ntfs-3g 和&lt;br /&gt;
ntfs-config，ntfs-3g最新版本的Ubuntu已经自带了，所以只需要安装ntfs-config。&lt;br /&gt;
2、输入：&lt;br /&gt;
sudo apt-get install ntfs-config&lt;br /&gt;
3、然后运行：&lt;br /&gt;
sudo ntfs-config&lt;br /&gt;
就会弹出来配置对话框，选择你需要挂载的分区，点应用，再选择“启用内部设备写支持”就可以了。&lt;br /&gt;
重启即可自动挂载NTFS分区了。&lt;br /&gt;
注：对于可能出现错误：&lt;br /&gt;
&amp;ldquo;No such file or directory: &amp;lsquo;/etc/hal/fdi/policy&amp;rdquo;&lt;br /&gt;
解决办法：&lt;br /&gt;
手动建这些目录 sudo mkdir -p /etc/hal/fdi/policy&lt;br /&gt;
配置好ntfs-config后，默认是挂载所有的盘，而且是挂在/media下。&lt;br /&gt;
如果需要自定义，编辑 /etc/fstab 文件 vi /etc/fstab，可以看到类似以下内容：&lt;br /&gt;
#Entry for /dev/sda5 :&lt;br /&gt;
UUID=5C2C60462C601CF0 /media/DWinows ntfs-3g defaults,locale=en_US.UTF-8 0 0&lt;br /&gt;
意思是开机自动加载/dev/sda5，我改为&lt;br /&gt;
UUID=5C2C60462C601CF0 /home/sa/wdisk ntfs-3g defaults,locale=en_US.UTF-8 0 0&lt;br /&gt;
如果不想重启，输入如下命令：&lt;br /&gt;
sudo umount -a&lt;br /&gt;
sudo mount -a&lt;/p&gt;

&lt;h2 id=&#34;产生乱码原因-系统没有中文字体&#34;&gt;产生乱码原因：系统没有中文字体&lt;/h2&gt;

&lt;p&gt;解决方案：&lt;br /&gt;
1、从C:\WINDOWS\Fonts下拷贝后缀为ttf的字体库到/usr/share/fonts/truetype/&lt;br /&gt;
提示：在C:\WINDOWS\Fonts文件夹下，拉到最后，你可以看到有“仿宋体（TrueType）”和“宋体 &amp;amp; 新宋体（TrueType）”，随便拖一个进你的U盘，就会变成“simkai.ttf”或者“simhei.ttf”，然后再复制到/usr/share/fonts/truetype/&lt;/p&gt;

&lt;h2 id=&#34;如果你插入u盘-出现错误提示-不能挂载u盘-那么就打开终端-相信你应该能找到的-在命令行下面自己手动挂载u盘&#34;&gt;如果你插入U盘，出现错误提示，不能挂载U盘，那么就打开终端（相信你应该能找到的！！），在命令行下面自己手动挂载U盘：&lt;/h2&gt;

&lt;p&gt;mkdir /mnt/usb&lt;br /&gt;
mount /dev/sdb1 /mnt/usb&lt;br /&gt;
cd /mnt/usb&lt;br /&gt;
sudo cp simkai.ttf /usr/share/fonts/truetype&lt;/p&gt;

&lt;h2 id=&#34;鼠标手势easystroke&#34;&gt;鼠标手势easystroke&lt;/h2&gt;
</description>
        </item>
        
        <item>
            <title>Debian 7 wheezy 安装日志</title>
            <link>http://blog.pytool.com/linux/2010-01-01-debain%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
            <pubDate>Thu, 07 Jan 2016 16:46:14 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/linux/2010-01-01-debain%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
            <description>

&lt;p&gt;&lt;a href=&#34;http://forum.ubuntu.org.cn/viewtopic.php?f=165&amp;amp;t=460184&#34; target=&#34;_blank&#34;&gt;原文链接&lt;/a&gt;
Debian 的发行版&lt;/p&gt;

&lt;p&gt;Debian 一直维护着至少三个发行版: &amp;ldquo;稳定版(stable)&amp;ldquo;，&amp;rdquo;测试版(testing)&amp;rdquo; 和 &amp;ldquo;不稳定版(unstable)&amp;ldquo;。&lt;/p&gt;

&lt;p&gt;稳定版(stable)&lt;br /&gt;
    &amp;ldquo;稳定版&amp;rdquo;包含了 Debian 官方最近一次发行的软件包。&lt;br /&gt;
    作为 Debian 的正式发行版本，它是我们优先推荐给用户您选用的版本。&lt;br /&gt;
    当前 Debian 的&amp;rdquo;稳定版&amp;rdquo;版本号是 8.6，开发代号为 jessie。已经于2016年09月17日发布。&lt;br /&gt;
测试版(testing)&lt;br /&gt;
    &amp;ldquo;测试版&amp;rdquo;包含了那些暂时未被收录进入&amp;rdquo;稳定版&amp;rdquo;的软件包，但它们已经进入了候选队列。使用这个版本的最大益处在于它拥有更多版本较新的软件。&lt;br /&gt;
    想要了解 什么是&amp;rdquo;测试版&amp;rdquo; 以及 如何成为&amp;rdquo;稳定版&amp;rdquo; 的更多信息，请看 Debian FAQ。&lt;br /&gt;
    当前的&amp;rdquo;测试版&amp;rdquo;版本代号是 stretch。&lt;br /&gt;
不稳定版(unstable)&lt;br /&gt;
    &amp;ldquo;不稳定版&amp;rdquo;存放了 Debian 现行的开发工作。通常，只有开发者和那些喜欢过惊险刺激生活的人选用该版本。&lt;br /&gt;
    &amp;ldquo;不稳定版&amp;rdquo;的版本代号永远都被称为 sid。&lt;br /&gt;
发行版目录&lt;br /&gt;
    下一代 Debian 正式发行版的代号为 &amp;ldquo;stretch&amp;rdquo; — 发布时间尚未确定&lt;br /&gt;
    Debian 8 (&amp;ldquo;jessie&amp;rdquo;) — 当前的稳定版&lt;br /&gt;
    Debian 7 (&amp;ldquo;wheezy&amp;rdquo;) — 被淘汰的稳定版&lt;br /&gt;
    Debian 6.0 (&amp;ldquo;squeeze&amp;rdquo;) — 被淘汰的稳定版&lt;br /&gt;
    Debian GNU/Linux 5.0 (&amp;ldquo;lenny&amp;rdquo;) — 被淘汰的稳定版&lt;br /&gt;
    Debian GNU/Linux 4.0 (&amp;ldquo;etch&amp;rdquo;) — 被淘汰的稳定版&lt;br /&gt;
    Debian GNU/Linux 3.1 (&amp;ldquo;sarge&amp;rdquo;) — 被淘汰的稳定版&lt;br /&gt;
    Debian GNU/Linux 3.0 (&amp;ldquo;woody&amp;rdquo;) — 被淘汰的稳定版&lt;br /&gt;
    Debian GNU/Linux 2.2 (&amp;ldquo;potato&amp;rdquo;) — 被淘汰的稳定版&lt;br /&gt;
    Debian GNU/Linux 2.1 (&amp;ldquo;slink&amp;rdquo;) — 被淘汰的稳定版&lt;br /&gt;
    Debian GNU/Linux 2.0 (&amp;ldquo;hamm&amp;rdquo;) — 被淘汰的稳定版&lt;/p&gt;

&lt;p&gt;&lt;code&gt;groupmod -g 99 docker&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;groupadd -r -g 999 mysql &amp;amp;&amp;amp; useradd -r -u 999 -g mysql -c mysql -d /var/lib/mysql -s /sbin/nologin mysql&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;sed -i &amp;ldquo;s|deb.debian.org|mirrors.aliyun.com|g&amp;rdquo; /etc/apt/sources.list&lt;/p&gt;

&lt;p&gt;vi /etc/apt/sources.list&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://mirrors.aliyun.com/debian jessie main contrib non-free  
deb http://mirrors.aliyun.com/debian jessie-proposed-updates main contrib non-free  
deb http://mirrors.aliyun.com/debian jessie-updates main contrib non-free  
deb http://mirrors.aliyun.com/debian jessie-backports main contrib non-free  

deb-src http://mirrors.aliyun.com/debian jessie main contrib non-free  
deb-src http://mirrors.aliyun.com/debian jessie-proposed-updates main contrib non-free  
deb-src http://mirrors.aliyun.com/debian jessie-updates main contrib non-free  
deb-src http://mirrors.aliyun.com/debian jessie-backports main contrib non-free  

deb http://mirrors.aliyun.com/debian-security/ jessie/updates main non-free contrib  
deb-src http://mirrors.aliyun.com/debian-security/ jessie/updates main non-free contrib  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新整理，虛擬機一節&lt;/p&gt;

&lt;h1 id=&#34;虚拟机&#34;&gt;虚拟机&lt;/h1&gt;

&lt;h1 id=&#34;virtualbox&#34;&gt;VirtualBox&lt;/h1&gt;

&lt;p&gt;aptitude install -t wheezy-backports -R virtualbox virtualbox-dkms \&lt;br /&gt;
virtualbox-qt virtualbox-guest-additions-iso&lt;/p&gt;

&lt;h1 id=&#34;开启-usb-2-0-支持&#34;&gt;开启 USB 2.0 支持&lt;/h1&gt;

&lt;h1 id=&#34;https-www-virtualbox-org-wiki-downloads&#34;&gt;&lt;a href=&#34;https://www.virtualbox.org/wiki/Downloads&#34; target=&#34;_blank&#34;&gt;https://www.virtualbox.org/wiki/Downloads&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;双击安装-oracle-vm-virtualbox-extension-pack-4-3-12-93733-vbox-extpack&#34;&gt;双击安装 Oracle_VM_VirtualBox_Extension_Pack-4.3.12-93733.vbox-extpack&lt;/h1&gt;

&lt;h1 id=&#34;入组&#34;&gt;入组&lt;/h1&gt;

&lt;p&gt;gpasswd -a fb vboxusers&lt;/p&gt;

&lt;h1 id=&#34;qemu-kvm&#34;&gt;qemu / kvm&lt;/h1&gt;

&lt;p&gt;aptitude install -t wheezy-backports -R qemu-system qemu-utils&lt;/p&gt;

&lt;h1 id=&#34;修正模块载入操作的若干问题&#34;&gt;修正模块载入操作的若干问题&lt;/h1&gt;

&lt;h1 id=&#34;etc-init-d-qemu-system-x86-问题多多-用稳定版代替&#34;&gt;/etc/init.d/qemu-system-x86 问题多多，用稳定版代替&lt;/h1&gt;

&lt;h1 id=&#34;提取-https-packages-debian-org-wheezy-qemu-kvm-中的-etc-init-d-qemu-kvm&#34;&gt;提取 &lt;a href=&#34;https://packages.debian.org/wheezy/qemu-kvm&#34; target=&#34;_blank&#34;&gt;https://packages.debian.org/wheezy/qemu-kvm&lt;/a&gt; 中的 /etc/init.d/qemu-kvm&lt;/h1&gt;

&lt;h1 id=&#34;并做适当修改-增加-vhost-net-功能&#34;&gt;并做适当修改，增加 vhost-net 功能&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;vi /etc/init.d/qemu-kvm #{ diff unified 格式 --------------------------  

@@ -41,9 +41,14 @@  
log_success_msg &amp;quot;/dev/kvm already exists. Not doing anything.&amp;quot;  
exit 0  
fi  
- if modprobe &amp;quot;$module&amp;quot;  
+ if modprobe -b &amp;quot;$module&amp;quot;  
then  
log_success_msg &amp;quot;Loading kvm module $module&amp;quot;  
+ if modprobe -b vhost-net ; then  
+ log_success_msg &amp;quot;Loading module vhost-net&amp;quot;  
+ else  
+ log_warning_msg &amp;quot;Module vhost-net failed to load&amp;quot;  
+ fi  
else  
log_failure_msg &amp;quot;Module $module failed to load&amp;quot;  
exit 1  
@@ -60,6 +65,7 @@  
then  
log_success_msg &amp;quot;Succesfully unloaded kvm module $module&amp;quot;  
rmmod kvm  
+ rmmod vhost-net || true  
else  
log_failure_msg &amp;quot;Failed to remove $module&amp;quot;  
exit 1  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;insserv -r qemu-system-x86&lt;br /&gt;
insserv qemu-kvm&lt;/p&gt;

&lt;h1 id=&#34;给-plugdev-组-不推荐-kvm-组-赋予-usb-设备操作权&#34;&gt;给 plugdev 组（不推荐 kvm 组）赋予 USB 设备操作权&lt;/h1&gt;

&lt;p&gt;vi /etc/udev/rules.d/10-usb-plugdev.rules #{ 覆&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SUBSYSTEM==&amp;quot;usb_device&amp;quot;, GROUP=&amp;quot;plugdev&amp;quot;, MODE=&amp;quot;0664&amp;quot;  
SUBSYSTEM==&amp;quot;usb&amp;quot;, ENV{DEVTYPE}==&amp;quot;usb_device&amp;quot;, GROUP=&amp;quot;plugdev&amp;quot;, MODE=&amp;quot;0664&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;入组-1&#34;&gt;入组&lt;/h1&gt;

&lt;p&gt;gpasswd -a fb kvm&lt;/p&gt;

&lt;h1 id=&#34;toc_13&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;vbox-kvm-切换&#34;&gt;VBox / KVM 切换&lt;/h1&gt;

&lt;p&gt;vi /usr/local/bin/swapvm #{ 覆 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh  
set -e  

case &amp;quot;$1&amp;quot; in  
kvm)  
if [ &amp;quot;`lsmod | awk &#39;$1==&amp;quot;vboxdrv&amp;quot; {print $3-split($4,a,&amp;quot;,&amp;quot;)}&#39;`&amp;quot; -ne 0 ]; then  
echo &amp;quot;ERROR: Module vboxdrv is in use&amp;quot; &amp;gt;&amp;amp;2  
exit 1  
fi  
service virtualbox stop  
service qemu-kvm start  
;;  
vbox)  
service qemu-kvm stop  
service virtualbox start  
;;  
*)  
echo &amp;quot;Usage: $0 {kvm|vbox}&amp;quot; &amp;gt;&amp;amp;2  
exit 2  
;;  
esac  

exit 0  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;chmod +x /usr/local/bin/swapvm&lt;/p&gt;

&lt;h1 id=&#34;若以-vbox-为主-kvm-为辅-则&#34;&gt;若以 VBox 为主 KVM 为辅，则&lt;/h1&gt;

&lt;p&gt;insserv -r qemu-kvm&lt;/p&gt;

&lt;h1 id=&#34;反之-则&#34;&gt;反之，则&lt;/h1&gt;

&lt;p&gt;insserv -r virtualbox&lt;/p&gt;

&lt;h1 id=&#34;设置特权-方便切换&#34;&gt;设置特权，方便切换&lt;/h1&gt;

&lt;p&gt;visudo #{&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%kvm localhost= /usr/local/bin/swapvm  
%vboxusers localhost= /usr/local/bin/swapvm  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##############################################################################&lt;/p&gt;

&lt;h1 id=&#34;debian-7-wheezy-安装日志-2014-05-28&#34;&gt;Debian 7 wheezy 安装日志 2014-05-28&lt;/h1&gt;

&lt;p&gt;##############################################################################&lt;/p&gt;

&lt;h1 id=&#34;种鸡系统&#34;&gt;种鸡系统&lt;/h1&gt;

&lt;h1 id=&#34;http-ftp-twaren-net-ubuntu-cd&#34;&gt;&lt;a href=&#34;http://ftp.twaren.net/ubuntu-cd/&#34; target=&#34;_blank&#34;&gt;http://ftp.twaren.net/ubuntu-cd/&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;备-ubuntu-12-04-4-desktop-amd64-iso-提-casper-vmlinuz-efi-casper-initrd-lz&#34;&gt;备 ubuntu-12.04.4-desktop-amd64.iso，提 /casper/vmlinuz.efi、/casper/initrd.lz&lt;/h1&gt;

&lt;h1 id=&#34;grub-引导参数&#34;&gt;grub 引导参数&lt;/h1&gt;

&lt;p&gt;title ubuntu-12.04.4-desktop-amd64&lt;br /&gt;
kernel /vmlinuz.efi boot=casper iso-scan/filename=/soft/os/ubuntu-12.04.4-desktop-amd64.iso ro quiet splash vga=normal nomodeset&lt;br /&gt;
initrd /initrd.lz&lt;/p&gt;

&lt;p&gt;##############################################################################&lt;/p&gt;

&lt;h1 id=&#34;启动种鸡系统&#34;&gt;启动种鸡系统&lt;/h1&gt;

&lt;h1 id=&#34;更改-root-口令后打开其登录-shell&#34;&gt;更改 root 口令后打开其登录 shell&lt;/h1&gt;

&lt;p&gt;sudo passwd root&lt;br /&gt;
su -&lt;/p&gt;

&lt;p&gt;##############################################################################&lt;/p&gt;

&lt;h1 id=&#34;分区&#34;&gt;分区&lt;/h1&gt;

&lt;h1 id=&#34;grub-legacy-不支持-ext4-故必须留有-boot-分区&#34;&gt;grub-legacy 不支持 ext4，故必须留有 /boot 分区&lt;/h1&gt;

&lt;p&gt;fdisk /dev/sda&lt;/p&gt;

&lt;h1 id=&#34;交换区-若需&#34;&gt;交换区（若需）&lt;/h1&gt;

&lt;p&gt;mkswap -L FB_CP2_SWAP /dev/sdaX&lt;br /&gt;
swapon -L FB_CP2_SWAP&lt;/p&gt;

&lt;h1 id=&#34;创建文件系统&#34;&gt;创建文件系统&lt;/h1&gt;

&lt;p&gt;mkfs.ext2 -L FB_CP2_BOOT /dev/sda1&lt;br /&gt;
mkfs.ext4 -L FB_CP2_ROOT /dev/sda2&lt;br /&gt;
tune2fs -c 127 -e remount-ro -o user_xattr,acl /dev/sda1&lt;br /&gt;
tune2fs -c 127 -e remount-ro -o user_xattr,acl /dev/sda2&lt;/p&gt;

&lt;h1 id=&#34;挂载&#34;&gt;挂载&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;DEBIAN_INS_DIR=&amp;quot;/mnt/debian&amp;quot;  
mkdir &amp;quot;$DEBIAN_INS_DIR&amp;quot;  
mount LABEL=FB_CP2_ROOT &amp;quot;$DEBIAN_INS_DIR&amp;quot;  
mkdir &amp;quot;${DEBIAN_INS_DIR}/boot&amp;quot; &amp;quot;${DEBIAN_INS_DIR}/home&amp;quot;  
mount LABEL=FB_CP2_BOOT &amp;quot;${DEBIAN_INS_DIR}/boot&amp;quot;  
mount LABEL=FB_CP2_HOME &amp;quot;${DEBIAN_INS_DIR}/home&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;令包缓存脱离根分区-必须用相对路径&#34;&gt;令包缓存脱离根分区（必须用相对路径）&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p &amp;quot;${DEBIAN_INS_DIR}/home/root/archives&amp;quot; &amp;quot;${DEBIAN_INS_DIR}/var/cache/apt&amp;quot;  
ln -s ../../../home/root/archives &amp;quot;${DEBIAN_INS_DIR}/var/cache/apt/&amp;quot;  
ln -s . &amp;quot;${DEBIAN_INS_DIR}/boot/boot&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;toc_31&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;安装-debootstrap&#34;&gt;安装 debootstrap&lt;/h1&gt;

&lt;p&gt;wget &lt;a href=&#34;http://ftp.tw.debian.org/debian/pool/ma&#34; target=&#34;_blank&#34;&gt;http://ftp.tw.debian.org/debian/pool/ma&lt;/a&gt; &amp;hellip; u1_all.deb&lt;/p&gt;

&lt;h1 id=&#34;备选1-http-ftp-cn-debian-org-debian-pool-ma-u1-all-deb&#34;&gt;备选1 &lt;a href=&#34;http://ftp.cn.debian.org/debian/pool/ma&#34; target=&#34;_blank&#34;&gt;http://ftp.cn.debian.org/debian/pool/ma&lt;/a&gt; &amp;hellip; u1_all.deb&lt;/h1&gt;

&lt;h1 id=&#34;备选2-http-ftp-sjtu-edu-cn-debian-pool-main-u1-all-deb&#34;&gt;备选2 &lt;a href=&#34;http://ftp.sjtu.edu.cn/debian/pool/main&#34; target=&#34;_blank&#34;&gt;http://ftp.sjtu.edu.cn/debian/pool/main&lt;/a&gt; &amp;hellip; u1_all.deb&lt;/h1&gt;

&lt;h1 id=&#34;备选3-http-ftp-debian-org-debian-pool-main-u1-all-deb&#34;&gt;备选3 &lt;a href=&#34;http://ftp.debian.org/debian/pool/main/&#34; target=&#34;_blank&#34;&gt;http://ftp.debian.org/debian/pool/main/&lt;/a&gt; &amp;hellip; u1_all.deb&lt;/h1&gt;

&lt;p&gt;dpkg -i debootstrap_1.0.48+deb7u1_all.deb&lt;/p&gt;

&lt;h1 id=&#34;安装基本系统-架构-amd64-版本代号-wheezy&#34;&gt;安装基本系统，架构 AMD64，版本代号 wheezy&lt;/h1&gt;

&lt;p&gt;debootstrap &amp;ndash;arch amd64 wheezy &amp;ldquo;$DEBIAN_INS_DIR&amp;rdquo; &lt;a href=&#34;http://ftp.tw.debian.org/debian/&#34; target=&#34;_blank&#34;&gt;http://ftp.tw.debian.org/debian/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;备选1-http-ftp-cn-debian-org-debian&#34;&gt;备选1 &lt;a href=&#34;http://ftp.cn.debian.org/debian/&#34; target=&#34;_blank&#34;&gt;http://ftp.cn.debian.org/debian/&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;备选2-http-ftp-sjtu-edu-cn-debian&#34;&gt;备选2 &lt;a href=&#34;http://ftp.sjtu.edu.cn/debian/&#34; target=&#34;_blank&#34;&gt;http://ftp.sjtu.edu.cn/debian/&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;备选3-http-ftp-debian-org-debian&#34;&gt;备选3 &lt;a href=&#34;http://ftp.debian.org/debian/&#34; target=&#34;_blank&#34;&gt;http://ftp.debian.org/debian/&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;toc_40&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;文件系统表&#34;&gt;文件系统表&lt;/h1&gt;

&lt;p&gt;vi &amp;ldquo;${DEBIAN_INS_DIR}/etc/fstab&amp;rdquo; #{ 覆 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tmpfs /tmp tmpfs size=512M 0 0  
tmpfs /urd tmpfs size=1024M,mode=755 0 0  

#LABEL=FB_CP2_SWAP none swap sw 0 0  
LABEL=FB_CP2_ROOT / ext4 commit=60 0 1  
LABEL=FB_CP2_BOOT /boot ext2 noauto 0 2  
LABEL=FB_CP2_HOME /home ext4 commit=60 0 2  
LABEL=FB_CP2_VM /vm ext4 commit=60 0 2  
LABEL=FB_CP2_DATA /data ext4 commit=60 0 2  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mkdir &amp;ldquo;${DEBIAN_INS_DIR}/&amp;ldquo;{urd,vm,data}&lt;/p&gt;

&lt;h1 id=&#34;toc_42&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;网卡&#34;&gt;网卡&lt;/h1&gt;

&lt;p&gt;vi &amp;ldquo;${DEBIAN_INS_DIR}/etc/network/interfaces&amp;rdquo; #{ 覆 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;auto lo  
allow-hotplug eth0  

iface lo inet loopback  

iface eth0 inet dhcp  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;计算机名-cp2&#34;&gt;计算机名：cp2&lt;/h1&gt;

&lt;p&gt;echo cp2 &amp;gt;&amp;ldquo;${DEBIAN_INS_DIR}/etc/hostname&amp;rdquo;&lt;br /&gt;
vi &amp;ldquo;${DEBIAN_INS_DIR}/etc/hosts&amp;rdquo; #{ 改&lt;br /&gt;
127.0.0.1 localhost cp2&lt;/p&gt;

&lt;h1 id=&#34;复制并检查-etc-resolv-conf&#34;&gt;复制并检查 /etc/resolv.conf&lt;/h1&gt;

&lt;p&gt;cp /etc/resolv.conf &amp;ldquo;${DEBIAN_INS_DIR}/etc/&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;toc_46&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;shell-相关配置&#34;&gt;shell 相关配置&lt;/h1&gt;

&lt;p&gt;vi &amp;ldquo;${DEBIAN_INS_DIR}/etc/profile&amp;rdquo; #{ 改 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if [ &amp;quot;`id -u`&amp;quot; -eq 0 ]; then  
PATH=&amp;quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&amp;quot;  
else  
PATH=&amp;quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games&amp;quot;  
fi  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;rm -f &amp;ldquo;${DEBIAN_INS_DIR}/etc/skel/.profile&amp;rdquo;&lt;br /&gt;
vi &amp;ldquo;${DEBIAN_INS_DIR}/etc/skel/.bash_profile&amp;rdquo; #{ 覆 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export MAIL=&amp;quot;${HOME}/mail/inbox&amp;quot;  
#/etc/init.d/urd-server restore  
. ~/.bashrc  
date -u &#39;+%n%F [%w] %T %Z&#39;  
df -Th | sed -n &#39;1p;/^\/dev\/\(sd\|disk\)/p&#39;  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;vi &amp;ldquo;${DEBIAN_INS_DIR}/etc/skel/.bash_logout&amp;rdquo; #{ 覆 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#/etc/init.d/urd-server backup  
[ -z &amp;quot;$DISPLAY&amp;quot; ] &amp;amp;&amp;amp; clear_console || true  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;vi &amp;ldquo;${DEBIAN_INS_DIR}/etc/skel/.bashrc&amp;rdquo; #{ 覆 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if [ -z &amp;quot;$DISPLAY&amp;quot; ]; then  
[ &amp;quot;${LANG%%.*}&amp;quot; != &amp;quot;en_US&amp;quot; ] &amp;amp;&amp;amp; export LANG=en_US.UTF-8  
unset LANGUAGE  
PS1=&#39;\n\[\e[1m\]&amp;gt;$?&amp;lt;\[\e[0m\] \W\$ &#39;  
else  
PS1=&#39;\n\[\e]2;\u@\h\a\]\[\e[1m\e[4m\]&amp;gt;$?&amp;lt;\[\e[0m\] \W\$ &#39;  
[ &amp;quot;$GTK2_RC_FILES&amp;quot; != &amp;quot;${HOME}/.gtkrc-2.0&amp;quot; ] &amp;amp;&amp;amp; export GTK2_RC_FILES=&amp;quot;${HOME}/.gtkrc-2.0&amp;quot;  
fi  
HISTSIZE=10000  
unset MAILCHECK  
set -o ignoreeof  
set -o vi  
[ -z &amp;quot;$BASH_COMPLETION&amp;quot; -a -r /etc/bash_completion ] &amp;amp;&amp;amp; . /etc/bash_completion  
alias ls=&amp;quot;ls -F&amp;quot;  
alias woman=&amp;quot;man -LC&amp;quot;  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;vi &amp;ldquo;${DEBIAN_INS_DIR}/etc/skel/.inputrc&amp;rdquo; #{ 覆 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$if bash  
set keymap emacs  
&amp;quot;\C-p&amp;quot;: history-search-backward  
&amp;quot;\C-n&amp;quot;: history-search-forward  
set keymap vi  
&amp;quot;\C-p&amp;quot;: history-search-backward  
&amp;quot;\C-n&amp;quot;: history-search-forward  
&amp;quot;\C-k&amp;quot;: kill-line  
&amp;quot;k&amp;quot;: history-search-backward  
&amp;quot;j&amp;quot;: history-search-forward  
&amp;quot;K&amp;quot;: previous-history  
&amp;quot;J&amp;quot;: next-history  
&amp;quot;\e[A&amp;quot;: previous-history  
&amp;quot;\e[B&amp;quot;: next-history  
set keymap vi-insert  
&amp;quot;\C-p&amp;quot;: history-search-backward  
&amp;quot;\C-n&amp;quot;: history-search-forward  
&amp;quot;\e[A&amp;quot;: history-search-backward  
&amp;quot;\e[B&amp;quot;: history-search-forward  
&amp;quot;\C-k&amp;quot;: kill-line  
&amp;quot;\C-l&amp;quot;: forward-char  
&amp;quot;\C-ol&amp;quot;: forward-char  
&amp;quot;\C-oh&amp;quot;: backward-char  
&amp;quot;\C-o\C-l&amp;quot;: clear-screen  
$endif  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;为-root-帐户应用配置-并稍作特殊处理&#34;&gt;为 root 帐户应用配置，并稍作特殊处理&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;find &amp;quot;${DEBIAN_INS_DIR}/root&amp;quot; -maxdepth 1 -mindepth 1 -exec rm -rf {} \;  
cp &amp;quot;${DEBIAN_INS_DIR}/etc/skel/&amp;quot;{.bash*,.inputrc} &amp;quot;${DEBIAN_INS_DIR}/root&amp;quot;  
sed -i &#39;/^#\?\/etc\/init\.d\/urd-server /d&#39; &amp;quot;${DEBIAN_INS_DIR}/root/.bash_&amp;quot;{profile,logout}  
sed -i &#39;s/^alias ls=.*/alias ls=&amp;quot;ls -AF&amp;quot;/&#39; &amp;quot;${DEBIAN_INS_DIR}/root/.bashrc&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;toc_49&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;挂载-proc-sys-dev&#34;&gt;挂载 /proc、/sys、/dev&lt;/h1&gt;

&lt;p&gt;mount -t proc proc &amp;ldquo;${DEBIAN_INS_DIR}/proc&amp;rdquo;&lt;br /&gt;
mount -t sysfs sysfs &amp;ldquo;${DEBIAN_INS_DIR}/sys&amp;rdquo;&lt;br /&gt;
mount -o bind /dev &amp;ldquo;${DEBIAN_INS_DIR}/dev&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;换根&#34;&gt;换根&lt;/h1&gt;

&lt;p&gt;unset LANGUAGE LS_COLORS&lt;br /&gt;
LANG=C.UTF-8 chroot &amp;ldquo;$DEBIAN_INS_DIR&amp;rdquo; /bin/bash&lt;/p&gt;

&lt;p&gt;##############################################################################&lt;/p&gt;

&lt;h1 id=&#34;包管理器设置&#34;&gt;包管理器设置&lt;/h1&gt;

&lt;h1 id=&#34;此处虽如此设置-但本文件所记各安装命令仍带有-r-以求突出&#34;&gt;此处虽如此设置，但本文件所记各安装命令仍带有 -R 以求突出&lt;/h1&gt;

&lt;h1 id=&#34;视具体情况-部分软件可能用-r-此并非笔误&#34;&gt;视具体情况，部分软件可能用 -r，此并非笔误&lt;/h1&gt;

&lt;p&gt;vi /etc/apt/apt.conf #{ 改&lt;br /&gt;
APT::Install-Recommends &amp;ldquo;false&amp;rdquo;;&lt;/p&gt;

&lt;h1 id=&#34;设源&#34;&gt;设源&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt;/etc/apt/sources.list &amp;lt;&amp;lt;EOF  
deb http://ftp.tw.debian.org/debian wheezy main contrib non-free  
deb http://security.debian.org/debian-security wheezy/updates main contrib non-free  
deb http://ftp.tw.debian.org/debian wheezy-updates main contrib non-free  
# deb http://ftp.tw.debian.org/debian wheezy-proposed-updates main contrib non-free  
deb http://ftp.tw.debian.org/debian-multimedia wheezy main non-free  
deb http://ftp.tw.debian.org/debian wheezy-backports main contrib non-free  

#deb http://ftp.cn.debian.org/debian wheezy main contrib non-free  
#deb http://ftp.cn.debian.org/debian-security wheezy/updates main contrib non-free  
#deb http://ftp.cn.debian.org/debian wheezy-updates main contrib non-free  
## deb http://ftp.cn.debian.org/debian wheezy-proposed-updates main contrib non-free  
#deb http://ftp.cn.debian.org/debian-multimedia wheezy main non-free  
#deb http://ftp.cn.debian.org/debian wheezy-backports main contrib non-free  

#deb http://ftp.sjtu.edu.cn/debian wheezy main contrib non-free  
#deb http://security.debian.org/debian-security wheezy/updates main contrib non-free  
#deb http://ftp.sjtu.edu.cn/debian wheezy-updates main contrib non-free  
## deb http://ftp.sjtu.edu.cn/debian wheezy-proposed-updates main contrib non-free  
#deb http://ftp.cn.debian.org/debian-multimedia wheezy main non-free  
#deb http://ftp.sjtu.edu.cn/debian wheezy-backports main contrib non-free  

#deb http://ftp.debian.org/debian wheezy main contrib non-free  
#deb http://security.debian.org/debian-security wheezy/updates main contrib non-free  
#deb http://ftp.debian.org/debian wheezy-updates main contrib non-free  
## deb http://ftp.debian.org/debian wheezy-proposed-updates main contrib non-free  
#deb http://www.deb-multimedia.org wheezy main non-free  
#deb http://ftp.debian.org/debian wheezy-backports main contrib non-free  
EOF  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;刷表-提示-w-gpg-error-无视之&#34;&gt;刷表（提示「W: GPG error:」，无视之）&lt;/h1&gt;

&lt;p&gt;aptitude update&lt;/p&gt;

&lt;h1 id=&#34;安装多媒体源公钥-提示-无法验证数字签名-是否安装-输入-yes-同意安装&#34;&gt;安装多媒体源公钥（提示「无法验证数字签名，是否安装」，输入「Yes」同意安装）&lt;/h1&gt;

&lt;p&gt;aptitude install -R deb-multimedia-keyring&lt;/p&gt;

&lt;h1 id=&#34;再次刷过&#34;&gt;再次刷过&lt;/h1&gt;

&lt;p&gt;aptitude update&lt;/p&gt;

&lt;h1 id=&#34;更新-stable-版本必须&#34;&gt;更新（stable 版本必须）&lt;/h1&gt;

&lt;p&gt;aptitude full-upgrade&lt;/p&gt;

&lt;h1 id=&#34;toc_60&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;若上一步有更新-就先退出后再次进入-chroot-环境&#34;&gt;若上一步有更新，就先退出后再次进入 chroot 环境&lt;/h1&gt;

&lt;p&gt;exit&lt;br /&gt;
LANG=C.UTF-8 chroot &amp;ldquo;$DEBIAN_INS_DIR&amp;rdquo; /bin/bash&lt;/p&gt;

&lt;p&gt;##############################################################################&lt;/p&gt;

&lt;h1 id=&#34;先装-acl-工具&#34;&gt;先装 ACL 工具&lt;/h1&gt;

&lt;p&gt;aptitude install -R acl&lt;/p&gt;

&lt;h1 id=&#34;toc_63&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;硬时钟若非-utc&#34;&gt;硬时钟若非 UTC&lt;/h1&gt;

&lt;p&gt;vi /etc/adjtime #{ 改，若无则新建&lt;br /&gt;
LOCAL # UTC 行&lt;/p&gt;

&lt;h1 id=&#34;时区&#34;&gt;时区&lt;/h1&gt;

&lt;p&gt;dpkg-reconfigure tzdata #{ 交互&lt;br /&gt;
Asia/Shanghai&lt;/p&gt;

&lt;h1 id=&#34;toc_66&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;本地化&#34;&gt;本地化&lt;/h1&gt;

&lt;p&gt;aptitude install -R locales&lt;br /&gt;
dpkg-reconfigure locales #{ 交互&lt;br /&gt;
en_US.UTF-8&lt;br /&gt;
ja_JP.UTF-8&lt;br /&gt;
ko_KR.UTF-8&lt;br /&gt;
zh_CN.UTF-8 # 默认&lt;br /&gt;
zh_HK.UTF-8&lt;br /&gt;
zh_SG.UTF-8&lt;br /&gt;
zh_TW.UTF-8&lt;/p&gt;

&lt;p&gt;vi /etc/default/locale #{ 改，针对 LANGUAGE&lt;br /&gt;
LANG=zh_CN.UTF-8&lt;br /&gt;
LANGUAGE=zh_CN:zh_SG:zh_TW:zh_HK&lt;/p&gt;

&lt;h1 id=&#34;toc_68&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;键盘&#34;&gt;键盘&lt;/h1&gt;

&lt;p&gt;aptitude install -R console-setup # 有交互，暂直接用默认配置&lt;/p&gt;

&lt;h1 id=&#34;重新配置&#34;&gt;重新配置&lt;/h1&gt;

&lt;p&gt;dpkg-reconfigure console-setup #{ 交互 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Encoding to use on the console: UTF-8  
Character set to support: # Latin1 and Latin5 - western Europe and Turkic languages  
Font for the console: Do not change the boot/kernel font  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;dpkg-reconfigure keyboard-configuration #{ 交互 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Keyboard model: Generic 104-key PC  
Keyboard layout: English (US)  
Key to function as AltGr: The default for the keyboard layout  
Compose key: No compose key  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;交换-ctrl-l-与-capslock-控制台-x-统一&#34;&gt;交换 Ctrl_L 与 CapsLock（控制台、X 统一）&lt;/h1&gt;

&lt;p&gt;vi /etc/default/keyboard #{ 改&lt;br /&gt;
XKBOPTIONS=&amp;ldquo;ctrl:swapcaps&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;toc_72&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;引导器&#34;&gt;引导器&lt;/h1&gt;

&lt;h1 id=&#34;若有其它系统则可再装上-os-prober-以便-update-grub-能自动发现&#34;&gt;若有其它系统则可再装上 os-prober，以便 update-grub 能自动发现&lt;/h1&gt;

&lt;p&gt;aptitude install -R grub-legacy&lt;br /&gt;
grub-install /dev/sda&lt;br /&gt;
update-grub&lt;br /&gt;
sed -i &amp;rsquo;s/^(\s*#\s&lt;em&gt;kopt=).&lt;/em&gt;/\1root=LABEL=FB_CP2_ROOT ro nomodeset/;&lt;br /&gt;
s/^(\s*#\s&lt;em&gt;defoptions=).&lt;/em&gt;/\1iommu=noaperture vga=0x305/&amp;rsquo; /boot/grub/menu.lst&lt;/p&gt;

&lt;h1 id=&#34;内核&#34;&gt;内核&lt;/h1&gt;

&lt;p&gt;aptitude install -R linux-image-amd64&lt;/p&gt;

&lt;h1 id=&#34;amd-k8-处理器降频&#34;&gt;AMD K8 处理器降频&lt;/h1&gt;

&lt;p&gt;echo &amp;ldquo;powernow_k8&amp;rdquo; &amp;gt;&amp;gt;/etc/modules&lt;/p&gt;

&lt;h1 id=&#34;toc_77&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;加密-grub&#34;&gt;加密 grub&lt;/h1&gt;

&lt;p&gt;grub-md5-crypt # 生成加密口令，复制生成结果&lt;/p&gt;

&lt;p&gt;vi /boot/grub/menu.lst #{ 改 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;timeout 3  
# 全局口令，限制临时编辑引导项。位于所有 title 行之前  
# --md5 后面一串为刚才 grub-md5-crypt 命令生成结果  
password --md5 $1$nQu9j0$sPBsHQJw8VBY.3/baiS4j.  

# 局部口令，限制进入单用户模式  
title Debian GNU/Linux, kernel 3.2.0-4-amd64 (single-user mode)  
password --md5 $1$nQu9j0$sPBsHQJw8VBY.3/baiS4j.  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;toc_79&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;系统调整&#34;&gt;系统调整&lt;/h1&gt;

&lt;p&gt;cp -p &amp;ldquo;${CFG_DIR}/iptables.sh&amp;rdquo; /etc/init.d/&lt;br /&gt;
insserv iptables.sh&lt;/p&gt;

&lt;h1 id=&#34;唯-adm-组成员可用-su&#34;&gt;唯 adm 组成员可用 su&lt;/h1&gt;

&lt;p&gt;vi /etc/pam.d/su #{ 改&lt;br /&gt;
auth required pam_wheel.so group=adm&lt;/p&gt;

&lt;p&gt;vi /etc/inittab #{ 改&lt;br /&gt;
1:2345:respawn:/sbin/getty &amp;ndash;noclear 38400 tty1&lt;/p&gt;

&lt;p&gt;vi /etc/sysctl.conf #{ 改 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kernel.printk = 4 4 1 7  

vm.laptop_mode = 5  
vm.dirty_expire_centisecs = 6000  
vm.dirty_writeback_centisecs = 1000  

net.ipv4.ip_default_ttl = 128  
#} --------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;toc_82&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;保存包列表一份-供日后研究&#34;&gt;保存包列表一份，供日后研究&lt;/h1&gt;

&lt;p&gt;dpkg -l &amp;gt;pkg.000.lst&lt;/p&gt;

&lt;h1 id=&#34;设置口令&#34;&gt;设置口令&lt;/h1&gt;

&lt;p&gt;passwd&lt;/p&gt;

&lt;h1 id=&#34;退出-chroot-环境&#34;&gt;退出 chroot 环境&lt;/h1&gt;

&lt;p&gt;exit&lt;/p&gt;

&lt;p&gt;##############################################################################&lt;/p&gt;

&lt;h1 id=&#34;清目重建&#34;&gt;清目重建&lt;/h1&gt;

&lt;p&gt;rm -rf &amp;ldquo;${DEBIAN_INS_DIR}/&amp;ldquo;{tmp,run}&lt;br /&gt;
mkdir &amp;ldquo;${DEBIAN_INS_DIR}/&amp;ldquo;{tmp,run}&lt;br /&gt;
chmod 1777 &amp;ldquo;${DEBIAN_INS_DIR}/tmp&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;卸载&#34;&gt;卸载&lt;/h1&gt;

&lt;p&gt;umount &amp;ldquo;${DEBIAN_INS_DIR}/&amp;ldquo;{dev,sys,proc}&lt;br /&gt;
umount &amp;ldquo;${DEBIAN_INS_DIR}/&amp;ldquo;{boot,home,}&lt;/p&gt;

&lt;h1 id=&#34;退出并重启&#34;&gt;退出并重启&lt;/h1&gt;

&lt;p&gt;exit&lt;/p&gt;

&lt;p&gt;##############################################################################&lt;/p&gt;

&lt;h1 id=&#34;重启进入新系统后&#34;&gt;重启进入新系统后&lt;/h1&gt;

&lt;h1 id=&#34;挂载-boot-备用-若独立而未挂载&#34;&gt;挂载 /boot 备用（若独立而未挂载）&lt;/h1&gt;

&lt;p&gt;mount /boot&lt;/p&gt;

&lt;h1 id=&#34;toc_91&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;卸载-nano-及-tasksel&#34;&gt;卸载 nano 及 tasksel&lt;/h1&gt;

&lt;p&gt;aptitude purge nano tasksel tasksel-data&lt;/p&gt;

&lt;h1 id=&#34;基本工具及文档&#34;&gt;基本工具及文档&lt;/h1&gt;

&lt;p&gt;aptitude install -R dosfstools sudo anacron ntp ntp-doc \&lt;br /&gt;
less lsof file tree rsync \&lt;br /&gt;
bash-completion command-not-found tcsh dialog \&lt;br /&gt;
gpm vim hexedit exuberant-ctags convmv \&lt;br /&gt;
tcpdump dnsutils dnsmasq lftp w3m exim4 msmtp getmail4 procmail mutt \&lt;br /&gt;
manpages manpages-posix manpages-zh debconf-doc&lt;br /&gt;
rm /etc/profile.d/bash_completion.sh&lt;/p&gt;

&lt;h1 id=&#34;vim-配置&#34;&gt;vim 配置&lt;/h1&gt;

&lt;p&gt;cp &amp;ldquo;${CFG_DIR}/vimrc&amp;rdquo; /etc/vim/&lt;/p&gt;

&lt;h1 id=&#34;设置-cron-路径-时间&#34;&gt;设置 cron 路径、时间&lt;/h1&gt;

&lt;p&gt;vi /etc/crontab #{ 改 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# m h dom mon dow user command  
13 * * * * root cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.hourly  
25 7 * * * root test -x /usr/sbin/anacron || ( cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.daily )  
47 7 * * 3 root test -x /usr/sbin/anacron || ( cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.weekly )  
52 7 9 * * root test -x /usr/sbin/anacron || ( cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.monthly )  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;先手动更新一遍-command-not-found-再添加自动任务&#34;&gt;先手动更新一遍 command-not-found 再添加自动任务&lt;/h1&gt;

&lt;p&gt;update-command-not-found&lt;br /&gt;
source ~/.bashrc&lt;br /&gt;
ln -s /usr/sbin/update-command-not-found /etc/cron.monthly/&lt;/p&gt;

&lt;h1 id=&#34;阻止一些服务自动启动&#34;&gt;阻止一些服务自动启动&lt;/h1&gt;

&lt;p&gt;insserv -r gpm&lt;br /&gt;
insserv -r rsync&lt;/p&gt;

&lt;h1 id=&#34;用户内存盘服务&#34;&gt;用户内存盘服务&lt;/h1&gt;

&lt;p&gt;tar xf &amp;ldquo;${LOCALPKG}/urd-server.tar.gz&amp;rdquo; -C /&lt;br /&gt;
insserv urd-server&lt;/p&gt;

&lt;h1 id=&#34;toc_99&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;dns-缓存配置&#34;&gt;DNS 缓存配置&lt;/h1&gt;

&lt;p&gt;vi /etc/dnsmasq.conf #{ 改 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;no-resolv  
no-poll  

# 202.103.225.68、202.103.224.68，我区电信  
server=/baidu.com/202.103.225.68  
server=/baidu.com/202.103.224.68  
server=/qq.com/202.103.225.68  
server=/qq.com/202.103.224.68  
server=/youku.com/202.103.225.68  
server=/youku.com/202.103.224.68  
server=/vnet.cn/202.103.225.68  
server=/vnet.cn/202.103.224.68  
# OpenDNS  
server=208.67.222.222  
server=208.67.220.220  
# GoogleDNS  
#server=8.8.8.8  
#server=8.8.4.4  

listen-address=127.0.0.1  
no-dhcp-interface=eth0  
no-hosts  
addn-hosts=/etc/hosts.dnsmasq  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;vi /etc/dhcp/dhclient.conf #{ 改&lt;br /&gt;
prepend domain-name-servers 127.0.0.1;&lt;/p&gt;

&lt;p&gt;cp &amp;ldquo;${CFG_DIR}/hosts.dnsmasq&amp;rdquo; /etc/&lt;/p&gt;

&lt;p&gt;service dnsmasq restart&lt;br /&gt;
ifdown eth0&lt;br /&gt;
ifup eth0&lt;/p&gt;

&lt;h1 id=&#34;toc_101&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;时钟同步&#34;&gt;时钟同步&lt;/h1&gt;

&lt;p&gt;vi /etc/ntp.conf #{ 改&lt;br /&gt;
server cn.pool.ntp.org iburst&lt;/p&gt;

&lt;p&gt;service ntp restart&lt;/p&gt;

&lt;h1 id=&#34;toc_103&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;特权配置&#34;&gt;特权配置&lt;/h1&gt;

&lt;p&gt;visudo #{ 改 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Defaults env_reset, timestamp_timeout=1  

%users localhost=NOPASSWD: /sbin/shutdown -r now, /sbin/shutdown -h now  
%users localhost=NOPASSWD: /sbin/hdparm -B /dev/sd?  
%users localhost=NOPASSWD: /usr/sbin/hddtemp /dev/sd?  
%users localhost=NOPASSWD: /usr/sbin/service gpm *  

%adm localhost= /usr/sbin/service dnsmasq restart  
%adm localhost= /usr/sbin/service iptables.sh status  

%mldonkey localhost= /usr/sbin/service mldonkey-server *  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;toc_105&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;基本构建工具及内核头文件&#34;&gt;基本构建工具及内核头文件&lt;/h1&gt;

&lt;p&gt;aptitude install -R build-essential autoconf automake cmake libtool libltdl-dev \&lt;br /&gt;
fakeroot linux-headers-amd64&lt;/p&gt;

&lt;h1 id=&#34;samba-服务&#34;&gt;samba 服务&lt;/h1&gt;

&lt;p&gt;aptitude install -R samba smbclient cifs-utils samba-common-bin libpam-smbpass&lt;br /&gt;
cp &amp;ldquo;${CFG_DIR}/smb.conf&amp;rdquo; /etc/samba/&lt;/p&gt;

&lt;h1 id=&#34;toc_108&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;xorg&#34;&gt;Xorg&lt;/h1&gt;

&lt;p&gt;aptitude install -R xorg&lt;/p&gt;

&lt;h1 id=&#34;图形驱动&#34;&gt;图形驱动&lt;/h1&gt;

&lt;p&gt;aptitude install -R nvidia-glx nvidia-kernel-dkms nvidia-xconfig&lt;/p&gt;

&lt;h1 id=&#34;生成和修改图形配置-不知为何有时生成的是-xf86config-有时是-xorg-conf&#34;&gt;生成和修改图形配置（不知为何有时生成的是 XF86Config 有时是 xorg.conf）&lt;/h1&gt;

&lt;p&gt;nvidia-xconfig&lt;br /&gt;
vi /etc/X11/xorg.conf #{ 改 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Touchpad Synaptics  
Section &amp;quot;InputClass&amp;quot;  
Identifier &amp;quot;touchpad catchall&amp;quot;  
Driver &amp;quot;synaptics&amp;quot;  
MatchIsTouchpad &amp;quot;on&amp;quot;  
Option &amp;quot;VertEdgeScroll&amp;quot; &amp;quot;TRUE&amp;quot;  
Option &amp;quot;HorizEdgeScroll&amp;quot; &amp;quot;TRUE&amp;quot;  
Option &amp;quot;TapButton1&amp;quot; &amp;quot;1&amp;quot;  
EndSection  
# Graphic card  
Section &amp;quot;Device&amp;quot;  
Identifier &amp;quot;Device0&amp;quot;  
Driver &amp;quot;nvidia&amp;quot;  
VendorName &amp;quot;NVIDIA Corporation&amp;quot;  
Option &amp;quot;DPI&amp;quot; &amp;quot;96x96&amp;quot;  
Option &amp;quot;NoLogo&amp;quot; &amp;quot;TRUE&amp;quot;  
Option &amp;quot;RegistryDwords&amp;quot; &amp;quot;PerfLevelSrc=0x3333&amp;quot;  
Option &amp;quot;RandRRotation&amp;quot; &amp;quot;TRUE&amp;quot;  
EndSection  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;toc_112&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;解决-home-xsession-errors-体积过涨&#34;&gt;解决「$HOME/.xsession-errors 体积过涨」&lt;/h1&gt;

&lt;p&gt;vi /etc/X11/Xsession #{ diff unified 格式 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@@ -74,7 +74,11 @@  
errormsg &amp;quot;unable to create X session log/error file; aborting.&amp;quot;  
fi  

-exec &amp;gt;&amp;gt;&amp;quot;$ERRFILE&amp;quot; 2&amp;gt;&amp;amp;1  
+[ `stat -c %s &amp;quot;$ERRFILE&amp;quot;` -ge 8388608 ] \  
+ &amp;amp;&amp;amp; rm -f &amp;quot;$ERRFILE&amp;quot;  
+  
+exec &amp;gt;/dev/null  
+exec 2&amp;gt;&amp;gt;&amp;quot;$ERRFILE&amp;quot;  

echo &amp;quot;$PROGNAME: X session started for $LOGNAME at $(date)&amp;quot;  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;toc_114&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;音频设备&#34;&gt;音频设备&lt;/h1&gt;

&lt;p&gt;aptitude install -R alsa-utils alsa-base&lt;/p&gt;

&lt;h1 id=&#34;音量及试听&#34;&gt;音量及试听&lt;/h1&gt;

&lt;p&gt;alsamixer&lt;br /&gt;
aplay /usr/share/sounds/alsa/*&lt;/p&gt;

&lt;h1 id=&#34;toc_117&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;电源管理及硬件相关&#34;&gt;电源管理及硬件相关&lt;/h1&gt;

&lt;p&gt;aptitude install -R acpi-support hdparm pm-utils vbetool ethtool \&lt;br /&gt;
powertop lm-sensors fancontrol hddtemp&lt;br /&gt;
insserv -r hddtemp&lt;br /&gt;
insserv -r fancontrol&lt;/p&gt;

&lt;h1 id=&#34;笔记本硬盘-apm-设置&#34;&gt;笔记本硬盘 APM 设置&lt;/h1&gt;

&lt;p&gt;vi /etc/hdparm.conf #{ 改&lt;br /&gt;
/dev/sda {&lt;br /&gt;
apm = 192&lt;br /&gt;
}&lt;/p&gt;

&lt;h1 id=&#34;开机自动调整笔记本屏幕亮度&#34;&gt;开机自动调整笔记本屏幕亮度&lt;/h1&gt;

&lt;p&gt;tar xf &amp;ldquo;${LOCALPKG}/brightness.tar.gz&amp;rdquo; -C /&lt;br /&gt;
insserv brightness&lt;/p&gt;

&lt;h1 id=&#34;toc_121&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;字体及输入法&#34;&gt;字体及输入法&lt;/h1&gt;

&lt;p&gt;aptitude install -R ttf-unifont \&lt;br /&gt;
ttf-dejavu fonts-liberation ttf-adf-libris \&lt;br /&gt;
ttf-wqy-zenhei ttf-arphic-ukai \&lt;br /&gt;
otf-ipaexfont-gothic otf-ipaexfont-mincho \&lt;br /&gt;
fonts-unfonts-core \&lt;br /&gt;
im-switch \&lt;br /&gt;
fcitx fcitx-frontend-gtk2 fcitx-frontend-gtk3 fcitx-frontend-qt4 \&lt;br /&gt;
fcitx-ui-classic fcitx-config-gtk fcitx-tools \&lt;br /&gt;
fcitx-pinyin fcitx-chewing fcitx-table-array30-big&lt;br /&gt;
cp -r &amp;ldquo;${FONT}/*&amp;rdquo; /usr/local/share/fonts&lt;br /&gt;
tar xf &amp;ldquo;${LOCALPKG}/fbfontconf.tar.gz&amp;rdquo; -C /&lt;br /&gt;
tar xf &amp;ldquo;${LOCALPKG}/fcitx-dict.tar.gz&amp;rdquo; -C /&lt;/p&gt;

&lt;p&gt;vi /etc/environment #{ 改&lt;br /&gt;
FONTCONFIG_PATH=&amp;ldquo;/etc/fbfontconf&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;解决-fcitx-僵尸进程问题&#34;&gt;解决 fcitx 僵尸进程问题&lt;/h1&gt;

&lt;p&gt;vi /etc/X11/xinit/xinput.d/fcitx #{ 改&lt;br /&gt;
XIM_PROGRAM_SETS_ITSELF_AS_DAEMON=1&lt;/p&gt;

&lt;h1 id=&#34;toc_124&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;桌面&#34;&gt;桌面&lt;/h1&gt;

&lt;p&gt;aptitude install -R gksu policykit-1 xscreensaver xscreensaver-gl \&lt;br /&gt;
openbox obconf feh lxpanel parcellite xpad \&lt;br /&gt;
libnotify-bin \&lt;br /&gt;
xdg-user-dirs-gtk xdg-utils gamin gvfs \&lt;br /&gt;
p7zip-full unzip unrar cabextract arj genisoimage \&lt;br /&gt;
thunar tumbler thunar-volman thunar-archive-plugin file-roller \&lt;br /&gt;
xfce4-terminal leafpad vim-gtk \&lt;br /&gt;
stardict-gtk stardict-plugin gpicview scrot galculator \&lt;br /&gt;
qpdfview mupdf poppler-data poppler-utils \&lt;br /&gt;
djview4 djvulibre-desktop djvulibre-plugin djvulibre-bin archmage \&lt;br /&gt;
ifplugd cups cups-pdf qv4l2 \&lt;br /&gt;
iceweasel iceweasel-l10n-zh-cn iceweasel-l10n-zh-tw \&lt;br /&gt;
xchat openfetion \&lt;br /&gt;
qt4-qtconfig lxappearance gtk2-engines gnome-icon-theme \&lt;br /&gt;
dconf-tools nvidia-settings&lt;/p&gt;

&lt;h1 id=&#34;新版-notification-daemon-及-notify-osd-流-皆不好用&#34;&gt;新版 notification-daemon 及 notify-osd 流，皆不好用&lt;/h1&gt;

&lt;h1 id=&#34;http-packages-debian-org-squeeze-notification-daemon&#34;&gt;&lt;a href=&#34;http://packages.debian.org/squeeze/notification-daemon&#34; target=&#34;_blank&#34;&gt;http://packages.debian.org/squeeze/notification-daemon&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;http-packages-debian-org-squeeze-libnotify1&#34;&gt;&lt;a href=&#34;http://packages.debian.org/squeeze/libnotify1&#34; target=&#34;_blank&#34;&gt;http://packages.debian.org/squeeze/libnotify1&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;dpkg -i notification-daemon_0.5.0-2_amd64.deb libnotify1_0.5.0-2_amd64.deb&lt;br /&gt;
aptitude install -R libcanberra-gtk0&lt;br /&gt;
aptitude markauto libcanberra-gtk0 libnotify1&lt;br /&gt;
aptitude hold notification-daemon libnotify1&lt;br /&gt;
sed -i &amp;lsquo;/^NoDisplay=/d&amp;rsquo; /usr/share/applications/notification-properties.desktop&lt;/p&gt;

&lt;h1 id=&#34;一些调整&#34;&gt;一些调整&lt;/h1&gt;

&lt;p&gt;rm /usr/share/xsessions/openbox*.desktop&lt;br /&gt;
rm /usr/share/applications/{feh,debian-uxterm,gksu}.desktop&lt;br /&gt;
rm /usr/share/applications/exo-{web-browser,mail-reader}.desktop&lt;br /&gt;
rm /usr/share/applications/lxde-x-{www-browser,terminal-emulator}.desktop&lt;/p&gt;

&lt;h1 id=&#34;搞定-xdg-open-行为错乱&#34;&gt;搞定「xdg-open 行为错乱」&lt;/h1&gt;

&lt;p&gt;rm /usr/bin/xdg-open&lt;br /&gt;
ln -s exo-open /usr/bin/xdg-open&lt;/p&gt;

&lt;h1 id=&#34;x-注销-关机对话框&#34;&gt;X 注销、关机对话框&lt;/h1&gt;

&lt;p&gt;tar xf &amp;ldquo;${LOCALPKG}/xlogout-dialog.tar.gz&amp;rdquo; -C /&lt;/p&gt;

&lt;h1 id=&#34;让守护进程给桌面发送弹出消息&#34;&gt;让守护进程给桌面发送弹出消息&lt;/h1&gt;

&lt;p&gt;tar xf &amp;ldquo;${LOCALPKG}/notify-send2.tar.gz&amp;rdquo; -C /&lt;/p&gt;

&lt;h1 id=&#34;主题&#34;&gt;主题&lt;/h1&gt;

&lt;p&gt;tar xf &amp;ldquo;${LOCALPKG}/theme-clearlooks-coffee.tar.xz&amp;rdquo; -C /&lt;br /&gt;
tar xf &amp;ldquo;${LOCALPKG}/icon-humanity.tar.xz&amp;rdquo; -C /&lt;/p&gt;

&lt;h1 id=&#34;将默认终端设为-xterm&#34;&gt;将默认终端设为 xterm&lt;/h1&gt;

&lt;p&gt;update-alternatives &amp;ndash;config x-terminal-emulator&lt;/p&gt;

&lt;h1 id=&#34;gvim-配置&#34;&gt;gvim 配置&lt;/h1&gt;

&lt;p&gt;cp &amp;ldquo;${CFG_DIR}/gvimrc&amp;rdquo; /etc/vim/&lt;/p&gt;

&lt;h1 id=&#34;vim-中文文档&#34;&gt;vim 中文文档&lt;/h1&gt;

&lt;h1 id=&#34;http-vimcdoc-sourceforge-net&#34;&gt;&lt;a href=&#34;http://vimcdoc.sourceforge.net/&#34; target=&#34;_blank&#34;&gt;http://vimcdoc.sourceforge.net/&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;tar xf vimcdoc-1.9.0.tar.gz&lt;br /&gt;
cp -r vimcdoc-1.9.0/doc /usr/share/vim/vim73/&lt;/p&gt;

&lt;h1 id=&#34;截屏脚本&#34;&gt;截屏脚本&lt;/h1&gt;

&lt;p&gt;tar xf &amp;ldquo;${LOCALPKG}/getscreenshot.tar.gz&amp;rdquo; -C /&lt;/p&gt;

&lt;h1 id=&#34;gpicview-有问题-借用-ubuntu-同版本包&#34;&gt;gpicview 有问题，借用 Ubuntu 同版本包&lt;/h1&gt;

&lt;h1 id=&#34;http-packages-ubuntu-com-raring-gpicview&#34;&gt;&lt;a href=&#34;http://packages.ubuntu.com/raring/gpicview&#34; target=&#34;_blank&#34;&gt;http://packages.ubuntu.com/raring/gpicview&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;dpkg -i gpicview_0.2.3+git20130101-0ubuntu1_amd64.deb&lt;/p&gt;

&lt;h1 id=&#34;打印机配置&#34;&gt;打印机配置&lt;/h1&gt;

&lt;p&gt;vi /etc/cups/cups-pdf.conf #{ 改&lt;br /&gt;
Out ${HOME}/urd/pdf&lt;/p&gt;

&lt;h1 id=&#34;toc_142&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;词典&#34;&gt;词典&lt;/h1&gt;

&lt;h1 id=&#34;http-www-stardict-cn-forum&#34;&gt;&lt;a href=&#34;http://www.stardict.cn/forum/&#34; target=&#34;_blank&#34;&gt;http://www.stardict.cn/forum/&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;find &amp;ldquo;$DICT_DIR&amp;rdquo; -name &amp;ldquo;*.tar.bz2&amp;rdquo; -exec tar xf {} -C /usr/share/stardict/dic/ \;&lt;/p&gt;

&lt;h1 id=&#34;纠正权限&#34;&gt;纠正权限&lt;/h1&gt;

&lt;p&gt;chown -R root:root /usr/share/stardict/dic&lt;br /&gt;
find /usr/share/stardict/dic -type d -exec chmod 755 {} \;&lt;br /&gt;
find /usr/share/stardict/dic -type f -exec chmod 644 {} \;&lt;/p&gt;

&lt;h1 id=&#34;toc_146&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;优盘挂载&#34;&gt;优盘挂载&lt;/h1&gt;

&lt;p&gt;vi /etc/polkit-1/localauthority/50-local.d/10-udisks.pkla #{&lt;br /&gt;
[udisks]&lt;br /&gt;
Identity=unix-group:plugdev&lt;br /&gt;
Action=org.freedesktop.udisks.drive-eject;org.freedesktop.udisks.filesystem-mount&lt;br /&gt;
ResultAny=yes&lt;/p&gt;

&lt;h1 id=&#34;toc_148&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;ifplugd-网卡监视器配置&#34;&gt;ifplugd 网卡监视器配置&lt;/h1&gt;

&lt;p&gt;tar xf &amp;ldquo;${LOCALPKG}/ifplugd-action.tar.gz&amp;rdquo; -C /&lt;br /&gt;
vi /etc/default/ifplugd #{ 改&lt;br /&gt;
INTERFACES=&amp;ldquo;eth0&amp;rdquo;&lt;br /&gt;
ARGS=&amp;ldquo;-q -f -u3 -d10 -I&amp;rdquo;&lt;/p&gt;

&lt;p&gt;vi /etc/network/interfaces #{ 改&lt;br /&gt;
#allow-hotplug eth0&lt;/p&gt;

&lt;h1 id=&#34;toc_150&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;flash-插件&#34;&gt;flash 插件&lt;/h1&gt;

&lt;h1 id=&#34;http-www-adobe-com-go-en-us-h-get-flash&#34;&gt;&lt;a href=&#34;http://www.adobe.com/go/EN_US-H-GET-FLASH&#34; target=&#34;_blank&#34;&gt;http://www.adobe.com/go/EN_US-H-GET-FLASH&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;tar xf install_flash_player_11_linux.x86_64.tar.gz&lt;br /&gt;
mkdir -p /usr/lib/mozilla/plugins&lt;br /&gt;
cp libflashplayer.so /usr/lib/mozilla/plugins/&lt;/p&gt;

&lt;h1 id=&#34;toc_153&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;下载工具&#34;&gt;下载工具&lt;/h1&gt;

&lt;h1 id=&#34;稍后问是否开机启动-mldonkey-一定要答-no&#34;&gt;稍后问是否开机启动 mldonkey，一定要答 &lt;NO&gt;&lt;/h1&gt;

&lt;p&gt;aptitude install -R filezilla mldonkey-server qbittorrent&lt;br /&gt;
tar xf &amp;ldquo;${LOCALPKG}/mldonkey-popmsg.tar.gz&amp;rdquo; -C /&lt;/p&gt;

&lt;h1 id=&#34;toc_156&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;mldonkey-配置&#34;&gt;mldonkey 配置&lt;/h1&gt;

&lt;p&gt;mkdir /home/mldonkey&lt;br /&gt;
touch /home/mldonkey/downloads.ini&lt;br /&gt;
chown -R mldonkey:mldonkey /home/mldonkey&lt;/p&gt;

&lt;p&gt;vi /etc/default/mldonkey-server #{ 改&lt;br /&gt;
MLDONKEY_DIR=/home/mldonkey&lt;br /&gt;
LAUNCH_AT_STARTUP=true&lt;/p&gt;

&lt;p&gt;visudo #{&lt;br /&gt;
mldonkey localhost=NOPASSWD: /usr/bin/notify-send2&lt;/p&gt;

&lt;h1 id=&#34;toc_158&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;x-相关配置&#34;&gt;X 相关配置&lt;/h1&gt;

&lt;p&gt;vi /etc/skel/.xinitrc #{ 覆&lt;br /&gt;
#!/bin/sh&lt;br /&gt;
export LANG=zh_CN.UTF-8&lt;br /&gt;
export LANGUAGE=zh_CN:zh_SG:zh_TW:zh_HK&lt;br /&gt;
. /etc/X11/Xsession&lt;/p&gt;

&lt;p&gt;vi /etc/skel/.xsession #{ 覆 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh  
/etc/init.d/urd-server restore  

# Firefox start speed  
FirefoxDir=&amp;quot;${HOME}/.mozilla/firefox&amp;quot;  
FirefoxDir=&amp;quot;${FirefoxDir}/`sed -n &#39;s/^Path=//p&#39; ${FirefoxDir}/profiles.ini`&amp;quot;  
cat &amp;quot;${FirefoxDir}/places.sqlite&amp;quot; &amp;quot;${FirefoxDir}/urlclassifier3.sqlite&amp;quot; &amp;gt;/dev/null  
unset FirefoxDir  

#export FONTCONFIG_PATH=&amp;quot;/etc/fbfontconf/user&amp;quot;  
export GTK2_RC_FILES=&amp;quot;${HOME}/.gtkrc-2.0&amp;quot;  
export _JAVA_OPTIONS=&amp;quot;-Dawt.useSystemAAFontSettings=lcd&amp;quot;  

feh --bg-scale &amp;quot;${HOME}/.config/wallpaper&amp;quot; &amp;amp;  
aplay &amp;quot;${HOME}/.config/login.wav&amp;quot; &amp;amp;  
thunar --daemon &amp;amp;  
lxpanel &amp;amp;  
parcellite &amp;amp;  
(sleep 6; exec xpad -N) &amp;amp;  
stardict -h &amp;amp;  
xscreensaver -no-splash &amp;amp;  

#xmodmap -e &amp;quot;pointer = 3 2 1&amp;quot;  
#synclient TapButton1=3  
#xset m 0.7  

openbox  

xpad -q  
thunar --quit  
/etc/init.d/urd-server backup  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;cat &amp;gt;/etc/skel/.Xresources &amp;lt;&amp;lt;EOF&lt;br /&gt;
*multiClickTime:400&lt;/p&gt;

&lt;p&gt;Xft.hintstyle:hintslight&lt;/p&gt;

&lt;p&gt;XTerm.termName:xterm-256color&lt;br /&gt;
!XTerm.vt100.altSendsEscape:true&lt;br /&gt;
!XTerm.vt100.metaSendsEscape:true&lt;br /&gt;
XTerm.vt100.locale:true&lt;br /&gt;
XTerm.vt100.utf8Title:true&lt;br /&gt;
XTerm.vt100.forcePackedFont:true&lt;br /&gt;
XTerm.vt100.faceName:DejaVu Sans Mono:size=9&lt;br /&gt;
!XTerm.vt100.faceNameDoublesize:WenQuanYi Zen Hei Mono:size=10&lt;br /&gt;
!XTerm.vt100.faceNameDoublesize:Droid Sans Fallback:size=10&lt;br /&gt;
XTerm.vt100.faceNameDoublesize:MS_YaHei:size=10&lt;br /&gt;
XTerm.vt100.scaleHeight:1.01&lt;br /&gt;
XTerm.vt100.geometry:100x30&lt;br /&gt;
XTerm.vt100.background:#FFFFFF&lt;br /&gt;
XTerm.vt100.foreground:#000000&lt;br /&gt;
EOF&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# ~/.gtkrc-2.0 日后会被 lxappearance 等工具覆盖，此处目的在于提供初始配置  
vi /etc/skel/.gtkrc-2.0 #{ 覆 ------------------------------------------------  
```bash  
gtk-theme-name=&amp;quot;Clearlooks-Coffee&amp;quot;  
gtk-icon-theme-name=&amp;quot;Humanity&amp;quot;  
gtk-font-name=&amp;quot;Sans 9&amp;quot;  
gtk-cursor-theme-size=0  
gtk-toolbar-style=GTK_TOOLBAR_BOTH_HORIZ  
gtk-toolbar-icon-size=GTK_ICON_SIZE_MENU  
gtk-button-images=0  
gtk-menu-images=1  
gtk-enable-event-sounds=1  
gtk-enable-input-feedback-sounds=1  
gtk-xft-antialias=1  
gtk-xft-hinting=1  
gtk-xft-hintstyle=&amp;quot;hintslight&amp;quot;  
gtk-xft-rgba=&amp;quot;rgb&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;toc_160&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;创建新帐户-fb-主组-users&#34;&gt;创建新帐户 fb，主组 users&lt;/h1&gt;

&lt;p&gt;adduser &amp;ndash;ingroup users fb&lt;br /&gt;
gpasswd -a fb adm&lt;br /&gt;
gpasswd -a fb audio&lt;br /&gt;
gpasswd -a fb video&lt;br /&gt;
gpasswd -a fb plugdev&lt;br /&gt;
gpasswd -a fb mldonkey&lt;/p&gt;

&lt;h1 id=&#34;toc_162&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;用-fb-代收-root-的邮件&#34;&gt;用 fb 代收 root 的邮件&lt;/h1&gt;

&lt;p&gt;vi /etc/aliases #{ 追加&lt;br /&gt;
root: fb&lt;/p&gt;

&lt;h1 id=&#34;toc_164&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;重启系统-以使一些新配置生效&#34;&gt;重启系统，以使一些新配置生效&lt;/h1&gt;

&lt;p&gt;shutdown -r now&lt;/p&gt;

&lt;p&gt;##############################################################################&lt;/p&gt;

&lt;h1 id=&#34;重启进入新系统后-1&#34;&gt;重启进入新系统后&lt;/h1&gt;

&lt;h1 id=&#34;挂载-boot-备用-若独立而未挂载-1&#34;&gt;挂载 /boot 备用（若独立而未挂载）&lt;/h1&gt;

&lt;p&gt;mount /boot&lt;/p&gt;

&lt;h1 id=&#34;toc_168&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;用-fb-登录并进入桌面后部分设置&#34;&gt;用 fb 登录并进入桌面后部分设置&lt;/h1&gt;

&lt;h1 id=&#34;toc_170&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;创建用户内存盘目录链接&#34;&gt;创建用户内存盘目录链接&lt;/h1&gt;

&lt;p&gt;ln -s /urd/fb ~/urd&lt;/p&gt;

&lt;h1 id=&#34;toc_172&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;lxpanel-面板设置&#34;&gt;lxpanel 面板设置&lt;/h1&gt;

&lt;h1 id=&#34;文件管理器-thunar-s&#34;&gt;文件管理器：thunar %s&lt;/h1&gt;

&lt;h1 id=&#34;终端仿真器-x-terminal-emulator&#34;&gt;终端仿真器：x-terminal-emulator&lt;/h1&gt;

&lt;h1 id=&#34;注销命令-xlogout-dialog&#34;&gt;注销命令：xlogout-dialog&lt;/h1&gt;

&lt;h1 id=&#34;toc_177&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;thunar-自定义动作&#34;&gt;thunar 自定义动作&lt;/h1&gt;

&lt;h1 id=&#34;设为桌面背景&#34;&gt;设为桌面背景&lt;/h1&gt;

&lt;h1 id=&#34;说明-thunar-对图片文件默认有个-设为壁纸-菜单-但不能用-自定义一个-区别-设为壁纸&#34;&gt;说明：thunar 对图片文件默认有个“设为壁纸”菜单，但不能用，自定义一个，区别“设为壁纸”&lt;/h1&gt;

&lt;h1 id=&#34;命令&#34;&gt;命令：&lt;/h1&gt;

&lt;p&gt;ln -snf %f &amp;ldquo;${HOME}/.config/wallpaper&amp;rdquo; &amp;amp;&amp;amp; feh &amp;ndash;bg-scale &amp;ldquo;${HOME}/.config/wallpaper&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;文件模式&#34;&gt;文件模式：*&lt;/h1&gt;

&lt;h1 id=&#34;包含-图像文件&#34;&gt;包含：图像文件&lt;/h1&gt;

&lt;h1 id=&#34;设为启动音&#34;&gt;设为启动音&lt;/h1&gt;

&lt;h1 id=&#34;命令-1&#34;&gt;命令：&lt;/h1&gt;

&lt;p&gt;ln -snf %f &amp;ldquo;${HOME}/.config/login.wav&amp;rdquo; &amp;amp;&amp;amp; aplay &amp;ldquo;${HOME}/.config/login.wav&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;文件模式-wav-wav&#34;&gt;文件模式：&lt;em&gt;.wav;&lt;/em&gt;.WAV&lt;/h1&gt;

&lt;h1 id=&#34;包含-声音文件&#34;&gt;包含：声音文件&lt;/h1&gt;

&lt;h1 id=&#34;toc_188&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;firefox-设置&#34;&gt;firefox 设置&lt;/h1&gt;

&lt;h1 id=&#34;about-config&#34;&gt;about:config&lt;/h1&gt;

&lt;h1 id=&#34;转移-cache-目录&#34;&gt;转移 Cache 目录&lt;/h1&gt;

&lt;h1 id=&#34;新建字符串-browser-cache-disk-parent-directory-urd-fb-firefox&#34;&gt;新建字符串 browser.cache.disk.parent_directory = /urd/fb/.firefox&lt;/h1&gt;

&lt;h1 id=&#34;保存会话间隔-单位-毫秒&#34;&gt;保存会话间隔（单位：毫秒）&lt;/h1&gt;

&lt;h1 id=&#34;browser-sessionstore-interval-360000&#34;&gt;browser.sessionstore.interval = 360000&lt;/h1&gt;

&lt;h1 id=&#34;禁止图片动画&#34;&gt;禁止图片动画&lt;/h1&gt;

&lt;h1 id=&#34;image-animation-mode-once&#34;&gt;image.animation_mode = once&lt;/h1&gt;

&lt;h1 id=&#34;扩展组件&#34;&gt;扩展组件&lt;/h1&gt;

&lt;h1 id=&#34;https-everywhere&#34;&gt;HTTPS Everywhere&lt;/h1&gt;

&lt;h1 id=&#34;autoproxy-代理&#34;&gt;AutoProxy # 代理&lt;/h1&gt;

&lt;h1 id=&#34;flashgot-下载&#34;&gt;FlashGot # 下载&lt;/h1&gt;

&lt;h1 id=&#34;downthemall-下载&#34;&gt;DownThemAll # 下载&lt;/h1&gt;

&lt;h1 id=&#34;pearl-crescent-page-saver-basic-截图&#34;&gt;Pearl Crescent Page Saver Basic # 截图&lt;/h1&gt;

&lt;h1 id=&#34;chmfox-chm&#34;&gt;ChmFox # chm&lt;/h1&gt;

&lt;h1 id=&#34;unmht-mht&#34;&gt;UnMHT # mht&lt;/h1&gt;

&lt;h1 id=&#34;session-manager&#34;&gt;Session Manager&lt;/h1&gt;

&lt;h1 id=&#34;搜索组件&#34;&gt;搜索组件&lt;/h1&gt;

&lt;h1 id=&#34;ubuntu-packages&#34;&gt;Ubuntu packages&lt;/h1&gt;

&lt;h1 id=&#34;zdic-net-汉典&#34;&gt;Zdic.net 汉典&lt;/h1&gt;

&lt;h1 id=&#34;toc_209&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;虚拟机-1&#34;&gt;虚拟机&lt;/h1&gt;

&lt;p&gt;aptitude install -t wheezy-backports -R qemu-system qemu-utils&lt;/p&gt;

&lt;h1 id=&#34;修正载入模块时的胡乱警告&#34;&gt;修正载入模块时的胡乱警告&lt;/h1&gt;

&lt;p&gt;vi /etc/init.d/qemu-system-x86 #{ diff unified 格式 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@@ -46,6 +46,8 @@  
exit 1  
fi  
if modprobe -b vhost-net ; then  
+ log_success_msg &amp;quot;Loading module vhost-net&amp;quot;  
+ else  
log_warning_msg &amp;quot;Module vhost-net failed to load&amp;quot;  
fi  
;;  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;给-plugdev-组-不推荐-kvm-组-赋予-usb-设备操作权-1&#34;&gt;给 plugdev 组（不推荐 kvm 组）赋予 USB 设备操作权&lt;/h1&gt;

&lt;p&gt;vi /etc/udev/rules.d/10-usb-plugdev.rules #{ 覆&lt;br /&gt;
SUBSYSTEM==&amp;ldquo;usb_device&amp;rdquo;, GROUP=&amp;ldquo;plugdev&amp;rdquo;, MODE=&amp;ldquo;0664&amp;rdquo;&lt;br /&gt;
SUBSYSTEM==&amp;ldquo;usb&amp;rdquo;, ENV{DEVTYPE}==&amp;ldquo;usb_device&amp;rdquo;, GROUP=&amp;ldquo;plugdev&amp;rdquo;, MODE=&amp;ldquo;0664&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;入组-2&#34;&gt;入组&lt;/h1&gt;

&lt;p&gt;gpasswd -a fb kvm&lt;/p&gt;

&lt;h1 id=&#34;toc_214&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;虚拟网络&#34;&gt;虚拟网络&lt;/h1&gt;

&lt;p&gt;aptitude install -R vde2 bridge-utils&lt;/p&gt;

&lt;h1 id=&#34;建议显式指出加载-tun-模块-否则启动时虚拟网卡可能会初始化失败&#34;&gt;建议显式指出加载 tun 模块，否则启动时虚拟网卡可能会初始化失败&lt;/h1&gt;

&lt;p&gt;vi /etc/modules #{ 改&lt;br /&gt;
tun&lt;/p&gt;

&lt;p&gt;vi /etc/network/interfaces #{ 覆 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;auto lo tap1  
#allow-hotplug eth0  

iface lo inet loopback  
pre-up [ &amp;quot;`runlevel`&amp;quot; = &amp;quot;unknown&amp;quot; ] &amp;amp;&amp;amp; echo &#39;eth0=br0&#39; &amp;gt;/var/run/ifplugd.ifupdown.map || true  
#pre-up runlevel &amp;gt;/root/runlevel  

iface eth0 inet dhcp  
pre-up ifdown br0  
post-up sed -i &#39;/^eth0=/d&#39; /var/run/ifplugd.ifupdown.map || true  

## Bridge VM  
iface tap0 inet static  
address 192.168.0.1  
netmask 255.255.255.0  
vde2-switch -  
up ip link set tap0 down  
up ip link set tap0 address 52:53:00:00:00:00  
up ip link set tap0 up  
iface br0 inet dhcp  
pre-up ifdown eth0  
pre-up ifup tap0  
pre-up ifconfig tap0 0.0.0.0  
bridge_ports eth0 tap0  
post-up sed -i &#39;/^eth0=/d&#39; /var/run/ifplugd.ifupdown.map || true  
post-up echo &#39;eth0=br0&#39; &amp;gt;&amp;gt;/var/run/ifplugd.ifupdown.map  

## NAT VM  
iface tap1 inet static  
address 192.168.10.1  
netmask 255.255.255.0  
vde2-switch -  
#vde2-slirp -n 192.168.10.0 -dhcp  
up ip link set tap1 down  
up ip link set tap1 address 52:53:00:00:00:01  
up ip link set tap1 up  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;toc_217&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;tap1-端内网-dhcp-及-dns-服务&#34;&gt;tap1 端内网 DHCP 及 DNS 服务&lt;/h1&gt;

&lt;p&gt;vi /etc/dnsmasq.conf #{ 改&lt;br /&gt;
interface=tap1&lt;br /&gt;
no-dhcp-interface=eth0,br0,wlan0&lt;br /&gt;
bind-interfaces&lt;br /&gt;
dhcp-range=192.168.10.100,192.168.10.200,255.255.255.0,2h&lt;/p&gt;

&lt;h1 id=&#34;宿主机名加入解析&#34;&gt;宿主机名加入解析&lt;/h1&gt;

&lt;p&gt;vi /etc/hosts.dnsmasq #{ 改&lt;br /&gt;
192.168.10.1 cp2&lt;/p&gt;

&lt;h1 id=&#34;toc_220&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;tap1-端内网-nat-服务&#34;&gt;tap1 端内网 NAT 服务&lt;/h1&gt;

&lt;p&gt;vi /etc/sysctl.conf #{ 改&lt;br /&gt;
net.ipv4.ip_forward = 1&lt;br /&gt;
net.ipv4.ip_dynaddr = 1&lt;/p&gt;

&lt;p&gt;vi /etc/init.d/iptables.sh #{ 改&lt;br /&gt;
iptables -t nat -F&lt;br /&gt;
iptables -t nat -A POSTROUTING -o br0 -j MASQUERADE&lt;br /&gt;
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE&lt;/p&gt;

&lt;h1 id=&#34;toc_222&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;设置特权-方便切换-1&#34;&gt;设置特权，方便切换&lt;/h1&gt;

&lt;p&gt;visudo #{&lt;br /&gt;
%vde2-net localhost= /sbin/ifup br0, /sbin/ifdown br0&lt;br /&gt;
%vde2-net localhost= /sbin/ifup eth0, /sbin/ifdown eth0&lt;br /&gt;
%vde2-net localhost= /sbin/ifup tap0, /sbin/ifdown tap0&lt;br /&gt;
%vde2-net localhost= /sbin/ifup tap1, /sbin/ifdown tap1&lt;/p&gt;

&lt;h1 id=&#34;入组-3&#34;&gt;入组&lt;/h1&gt;

&lt;p&gt;gpasswd -a fb vde2-net&lt;/p&gt;

&lt;h1 id=&#34;toc_225&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;远程控制&#34;&gt;远程控制&lt;/h1&gt;

&lt;p&gt;aptitude install -R openssh-client rdesktop&lt;/p&gt;

&lt;h1 id=&#34;toc_227&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;基本构建工具文档&#34;&gt;基本构建工具文档&lt;/h1&gt;

&lt;p&gt;aptitude install -R cpp-doc gcc-doc make-doc diffutils-doc \&lt;br /&gt;
autoconf-doc m4-doc libtool-doc gettext-doc gnu-standards&lt;/p&gt;

&lt;h1 id=&#34;系统调用-内核-c-c-库文档&#34;&gt;系统调用、内核、C/C++ 库文档&lt;/h1&gt;

&lt;p&gt;aptitude install -R manpages-dev manpages-posix-dev linux-doc \&lt;br /&gt;
glibc-doc glibc-doc-reference libstdc++6-4.7-doc&lt;/p&gt;

&lt;h1 id=&#34;deb-包制作维护工具及文档&#34;&gt;deb 包制作维护工具及文档&lt;/h1&gt;

&lt;p&gt;aptitude install -R dh-make devscripts fakeroot lintian pbuilder cowdancer \&lt;br /&gt;
debian-policy developers-reference&lt;/p&gt;

&lt;h1 id=&#34;调试器&#34;&gt;调试器&lt;/h1&gt;

&lt;p&gt;aptitude install -R strace gdb gdb-doc cgdb&lt;/p&gt;

&lt;h1 id=&#34;版本控制&#34;&gt;版本控制&lt;/h1&gt;

&lt;p&gt;aptitude install -R subversion subversion-tools git git-doc&lt;/p&gt;

&lt;h1 id=&#34;qt&#34;&gt;Qt&lt;/h1&gt;

&lt;p&gt;aptitude install -R libqt4-dev libqt4-opengl-dev libqtwebkit-dev \&lt;br /&gt;
qt4-dev-tools qt4-designer qt4-doc&lt;/p&gt;

&lt;h1 id=&#34;boost&#34;&gt;boost&lt;/h1&gt;

&lt;p&gt;aptitude install -R libboost-all-dev libboost-doc&lt;/p&gt;

&lt;h1 id=&#34;java&#34;&gt;Java&lt;/h1&gt;

&lt;p&gt;aptitude install -R openjdk-6-jdk openjdk-6-doc&lt;/p&gt;

&lt;h1 id=&#34;python&#34;&gt;Python&lt;/h1&gt;

&lt;p&gt;aptitude install -R python-doc&lt;/p&gt;

&lt;h1 id=&#34;lisp&#34;&gt;Lisp&lt;/h1&gt;

&lt;p&gt;aptitude install -R clisp clisp-doc&lt;/p&gt;

&lt;h1 id=&#34;haskell&#34;&gt;Haskell&lt;/h1&gt;

&lt;p&gt;aptitude install -R hugs haskell-doc&lt;/p&gt;

&lt;h1 id=&#34;数据库&#34;&gt;数据库&lt;/h1&gt;

&lt;p&gt;aptitude install -R sqlite3 libsqlite3-dev sqlite3-doc&lt;br /&gt;
vi ~/.sqliterc #{ 改&lt;br /&gt;
PRAGMA foreign_keys = ON;&lt;/p&gt;

&lt;h1 id=&#34;文档工具&#34;&gt;文档工具&lt;/h1&gt;

&lt;p&gt;aptitude install -R docbook5-xml docbook-xsl-ns xsltproc fop \&lt;br /&gt;
doxygen doxygen-gui doxygen-doc \&lt;br /&gt;
graphviz graphviz-doc&lt;/p&gt;

&lt;h1 id=&#34;ide&#34;&gt;IDE&lt;/h1&gt;

&lt;p&gt;aptitude install -R qtcreator qtcreator-doc&lt;/p&gt;

&lt;h1 id=&#34;toc_242&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/h1&gt;

&lt;h1 id=&#34;建模工具-argouml&#34;&gt;建模工具（ArgoUML）&lt;/h1&gt;

&lt;h1 id=&#34;http-argouml-tigris-org&#34;&gt;&lt;a href=&#34;http://argouml.tigris.org/&#34; target=&#34;_blank&#34;&gt;http://argouml.tigris.org/&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;tar xf ArgoUML-0.34.tar.gz -C /opt/&lt;br /&gt;
chown -R root:root /opt/argouml-0.34/&lt;br /&gt;
ln -s /opt/argouml-0.34/argouml.sh /usr/local/bin/argouml&lt;br /&gt;
ln -s /opt/argouml-0.34/icon/argouml2.svg /usr/share/icons/hicolor/scalable/apps/argouml2.svg&lt;br /&gt;
update-icon-caches /usr/share/icons/hicolor/&lt;/p&gt;

&lt;p&gt;vi /usr/share/mime/packages/argouml.xml #{ 覆 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;  
&amp;lt;mime-info xmlns=&#39;http://www.freedesktop.org/standards/shared-mime-info&#39;&amp;gt;  
&amp;lt;mime-type type=&amp;quot;application/argouml-compressed-project&amp;quot;&amp;gt;  
&amp;lt;sub-class-of type=&amp;quot;application/zip&amp;quot;/&amp;gt;  
&amp;lt;comment&amp;gt;ArgoUML compressed project file&amp;lt;/comment&amp;gt;  
&amp;lt;comment xml:lang=&amp;quot;zh_CN&amp;quot;&amp;gt;ArgoUML 项目压缩文件&amp;lt;/comment&amp;gt;  
&amp;lt;generic-icon name=&amp;quot;package-x-generic&amp;quot;/&amp;gt;  
&amp;lt;glob pattern=&amp;quot;*.zargo&amp;quot;/&amp;gt;  
&amp;lt;/mime-type&amp;gt;  
&amp;lt;mime-type type=&amp;quot;application/argouml-project&amp;quot;&amp;gt;  
&amp;lt;comment&amp;gt;ArgoUML project file&amp;lt;/comment&amp;gt;  
&amp;lt;comment xml:lang=&amp;quot;zh_CN&amp;quot;&amp;gt;ArgoUML 项目文件&amp;lt;/comment&amp;gt;  
&amp;lt;generic-icon name=&amp;quot;image-x-generic&amp;quot;/&amp;gt;  
&amp;lt;glob pattern=&amp;quot;*.uml&amp;quot;/&amp;gt;  
&amp;lt;/mime-type&amp;gt;  
&amp;lt;/mime-info&amp;gt;  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;update-mime-database /usr/share/mime/&lt;/p&gt;

&lt;p&gt;cat &amp;gt;/usr/share/applications/argouml.desktop &amp;lt;&amp;lt;EOF&lt;br /&gt;
[Desktop Entry]&lt;br /&gt;
Encoding=UTF-8&lt;br /&gt;
Name=ArgoUML&lt;br /&gt;
Exec=/opt/argouml-0.34/argouml.sh&lt;br /&gt;
Terminal=false&lt;br /&gt;
Type=Application&lt;br /&gt;
Icon=argouml2&lt;br /&gt;
Categories=Development&lt;br /&gt;
MimeType=application/argouml-compressed-project;application/argouml-project;&lt;br /&gt;
EOF&lt;br /&gt;
update-desktop-database&lt;/p&gt;

&lt;h1 id=&#34;toc_245&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;办公&#34;&gt;办公&lt;/h1&gt;

&lt;p&gt;aptitude install -R libreoffice libreoffice-gtk \&lt;br /&gt;
libreoffice-l10n-zh-cn libreoffice-help-zh-cn \&lt;br /&gt;
libreoffice-l10n-zh-tw libreoffice-help-zh-tw&lt;/p&gt;

&lt;h1 id=&#34;项目管理&#34;&gt;项目管理&lt;/h1&gt;

&lt;h1 id=&#34;http-sourceforge-net-projects-projectlibre&#34;&gt;&lt;a href=&#34;http://sourceforge.net/projects/projectlibre/&#34; target=&#34;_blank&#34;&gt;http://sourceforge.net/projects/projectlibre/&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;dpkg -i projectlibre_1.5.9-1.deb&lt;br /&gt;
vi /usr/bin/projectlibre #{ diff unified 格式 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@@ -113,7 +113,7 @@  
&amp;quot;$JAVA_EXE&amp;quot; -version &amp;gt; &amp;quot;$VERSION_FILE&amp;quot; 2&amp;gt;&amp;amp;1 || rm -f &amp;quot;$VERSION_FILE&amp;quot;  

if [ -r &amp;quot;$VERSION_FILE&amp;quot; ]; then  
- JAVA_VERSION=`cat &amp;quot;$VERSION_FILE&amp;quot; | head -n 1 | awk &#39;{ print substr($3, 2, length($3)-2); }&#39;`  
+ JAVA_VERSION=`grep -m 1 &#39;^java version &#39; &amp;quot;$VERSION_FILE&amp;quot; | awk &#39;{ print substr($3, 2, length($3)-2); }&#39;`  
if [ &amp;quot;x$OS_NAME&amp;quot; = &amp;quot;xSunOS&amp;quot; ]; then  
echo &amp;quot; Java version: $JAVA_VERSION \c&amp;quot;  
else  
#} ---------------------------------------------------------------------------  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;思维导图&#34;&gt;思维导图&lt;/h1&gt;

&lt;p&gt;aptitude install -R freemind freemind-plugins-svg&lt;/p&gt;

&lt;h1 id=&#34;cad&#34;&gt;CAD&lt;/h1&gt;

&lt;p&gt;aptitude install -R freecad freecad-doc&lt;/p&gt;

&lt;h1 id=&#34;电子&#34;&gt;电子&lt;/h1&gt;

&lt;p&gt;aptitude install -R \&lt;br /&gt;
geda geda-gschem geda-gnetlist geda-gattrib geda-gsymcheck geda-utils \&lt;br /&gt;
geda-doc geda-examples \&lt;br /&gt;
pcb gerbv iverilog gtkwave ngspice ngspice-doc&lt;/p&gt;

&lt;h1 id=&#34;科学&#34;&gt;科学&lt;/h1&gt;

&lt;p&gt;aptitude install -R octave liboctave-dev octave-htmldoc qtoctave \&lt;br /&gt;
gnuplot-qt gnuplot-doc&lt;/p&gt;

&lt;h1 id=&#34;统计&#34;&gt;统计&lt;/h1&gt;

&lt;p&gt;aptitude install -R r-base r-mathlib r-base-dev r-base-html r-doc-html&lt;/p&gt;

&lt;h1 id=&#34;天文&#34;&gt;天文&lt;/h1&gt;

&lt;p&gt;aptitude install -R stellarium celestia-glut&lt;/p&gt;

&lt;h1 id=&#34;toc_255&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;图形图像&#34;&gt;图形图像&lt;/h1&gt;

&lt;p&gt;aptitude install -R dia inkscape gimp blender fontforge&lt;/p&gt;

&lt;h1 id=&#34;媒体播放-解码-编码-转换器&#34;&gt;媒体播放、解码、编码、转换器&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aptitude install -R mplayer smplayer smplayer-translations mencoder lame  
sed -i &#39;s/^Exec=.*/Exec=smplayer/&#39; /usr/share/applications/smplayer.desktop  
rm /usr/share/applications/smplayer_enqueue.desktop  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;音频播放&#34;&gt;音频播放&lt;/h1&gt;

&lt;p&gt;aptitude install -R audacious&lt;/p&gt;

&lt;h1 id=&#34;midi-及音色库&#34;&gt;MIDI 及音色库&lt;/h1&gt;

&lt;p&gt;aptitude install -R fluidsynth qsynth jackd qjackctl \&lt;br /&gt;
fluid-soundfont-gm fluid-soundfont-gs&lt;/p&gt;

&lt;h1 id=&#34;作曲&#34;&gt;作曲&lt;/h1&gt;

&lt;p&gt;aptitude install -R rosegarden swh-plugins&lt;/p&gt;

&lt;h1 id=&#34;音频编辑&#34;&gt;音频编辑&lt;/h1&gt;

&lt;p&gt;aptitude install -R audacity ardour&lt;/p&gt;

&lt;h1 id=&#34;屏幕录像&#34;&gt;屏幕录像&lt;/h1&gt;

&lt;p&gt;aptitude install -R gtk-recordmydesktop&lt;/p&gt;

&lt;h1 id=&#34;视频编缉&#34;&gt;视频编缉&lt;/h1&gt;

&lt;p&gt;aptitude install -R avidemux cinelerra-cv&lt;/p&gt;

&lt;h1 id=&#34;toc_264&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;中国象棋&#34;&gt;中国象棋&lt;/h1&gt;

&lt;p&gt;aptitude install -R gmchess libeval0-dev&lt;/p&gt;

&lt;h1 id=&#34;toc_266&#34;&gt;============================================================================&lt;/h1&gt;

&lt;h1 id=&#34;最后再看看有无更新&#34;&gt;最后再看看有无更新&lt;/h1&gt;

&lt;p&gt;aptitude update&lt;br /&gt;
aptitude full-upgrade&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
