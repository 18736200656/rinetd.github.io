<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Basics on 时光小栈</title>
        <link>http://blog.pytool.com/basic/</link>
        <language>zh-CN</language>
        <author>rinetd</author>
        <rights>Copyright (c) 2015, rinetd; all rights reserved.</rights>
        <updated>Thu, 15 Jun 2017 14:08:22 CST</updated>
        
        <item>
            <title>10个实用的PHP正则表达式</title>
            <link>http://blog.pytool.com/basic/2015-01-01-10%E4%B8%AA%E5%AE%9E%E7%94%A8%E7%9A%84php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
            <pubDate>Thu, 15 Jun 2017 14:08:22 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2015-01-01-10%E4%B8%AA%E5%AE%9E%E7%94%A8%E7%9A%84php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
            <description>&lt;p&gt;正则表达式是程序开发中一个重要的元素，它提供用来描述或匹配文本的字符串，如特定的字符、词或算式等。但在某些情况下，用正则表达式去验证一个字符串比较复杂和费时。本文为你介绍10种常见的实用PHP正则表达式的写法，希望对你的工作有所帮助。&lt;br /&gt;
1. 验证E-mail地址&lt;/p&gt;

&lt;p&gt;这是一个用于验证电子邮件的正则表达式。但它并不是高效、完美的解决方案。在此不推荐使用。&lt;/p&gt;

&lt;p&gt;$email = &amp;ldquo;test@ansoncheung.tk&amp;rdquo;;&lt;br /&gt;
if(preg&lt;em&gt;match(&amp;lsquo;/^[^0-9][a-zA-Z0-9&lt;/em&gt;]+([.][a-zA-Z0-9&lt;em&gt;]+)*[@][a-zA-Z0-9&lt;/em&gt;]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{2,4}$/&amp;lsquo;,$email)){&lt;br /&gt;
    echo &amp;ldquo;Your email is ok.&amp;rdquo;;&lt;br /&gt;
}else{&lt;br /&gt;
    echo &amp;ldquo;Wrong email address format&amp;rdquo;;&lt;br /&gt;
}&lt;/p&gt;

&lt;p&gt;为了更加有效验证电子邮件地址，推荐使用filer_var。&lt;/p&gt;

&lt;p&gt;if(filter_var(&amp;lsquo;test+email@ansoncheung&amp;rsquo;, FILTER_VALIDATE_EMAIL)){&lt;br /&gt;
    echo &amp;ldquo;Your email is ok.&amp;rdquo;;&lt;br /&gt;
}else{&lt;br /&gt;
    echo &amp;ldquo;Wrong email address format.&amp;rdquo;;&lt;br /&gt;
}&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;验证用户名&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这是一个用于验证用户名的实例，其中包括字母、数字（A-Z，a-z，0-9）、下划线以及最低5个字符，最大20个字符。同时，也可以根据需要，对最小值和最大值做合理的修改。&lt;/p&gt;

&lt;p&gt;$username = &amp;ldquo;user_name12&amp;rdquo;;&lt;br /&gt;
if(preg&lt;em&gt;match(&amp;lsquo;/^[a-z\d&lt;/em&gt;]{5,20}$/i&amp;rsquo;, $username)){&lt;br /&gt;
    echo &amp;ldquo;Your username is ok.&amp;rdquo;;&lt;br /&gt;
}else{&lt;br /&gt;
    echo &amp;ldquo;Wrong username format.&amp;rdquo;;&lt;br /&gt;
}&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;验证电话号码&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这是一个验证美国电话号码的实例。&lt;/p&gt;

&lt;p&gt;$phone = &amp;ldquo;(021)423-2323&amp;rdquo;;&lt;br /&gt;
if(preg_match(&amp;lsquo;/&lt;span class=&#34;MathJax_Preview&#34;&gt;(?\d{3})&lt;/span&gt;&lt;script type=&#34;math/tex&#34;&gt;?\d{3}&lt;/script&gt;?[-\s.]?\d{3}[-\s.]\d{4}/x&amp;rsquo;, $phone)){&lt;br /&gt;
    echo &amp;ldquo;Your phone number is ok.&amp;rdquo;;&lt;br /&gt;
}else{&lt;br /&gt;
    echo &amp;ldquo;Wrong phone number.&amp;rdquo;;&lt;br /&gt;
}&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;验证IP地址&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这是一个用来验证IPv4地址的实例。&lt;/p&gt;

&lt;p&gt;$IP = &amp;ldquo;198.168.1.78&amp;rdquo;;&lt;br /&gt;
if(preg_match(&amp;lsquo;/^(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/&amp;lsquo;,$IP)) {&lt;br /&gt;
    echo &amp;ldquo;Your IP address is ok.&amp;rdquo;;&lt;br /&gt;
}else{&lt;br /&gt;
    echo &amp;ldquo;Wrong IP address.&amp;rdquo;;&lt;br /&gt;
}&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;验证邮政编码&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这是一个用来验证邮政编码的实例。&lt;/p&gt;

&lt;p&gt;$zipcode = &amp;ldquo;12345-5434&amp;rdquo;;&lt;br /&gt;
if(preg_match(&amp;ldquo;/^([0-9]{5})(-[0-9]{4})?$/i&amp;rdquo;,$zipcode)){&lt;br /&gt;
   echo &amp;ldquo;Your Zip code is ok.&amp;rdquo;;&lt;br /&gt;
}else{&lt;br /&gt;
   echo &amp;ldquo;Wrong Zip code.&amp;rdquo;;&lt;br /&gt;
}&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;验证SSN（社会保险号）&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这是一个验证美国SSN的实例。&lt;/p&gt;

&lt;p&gt;$ssn = &amp;ldquo;333-23-2329&amp;rdquo;;&lt;br /&gt;
if(preg_match(&amp;lsquo;/&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:d&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:d&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;{3}-[\d]{2}-[\d]{4}$/&amp;lsquo;,$ssn)){&lt;br /&gt;
    echo &amp;ldquo;Your SSN is ok.&amp;rdquo;;&lt;br /&gt;
}else{&lt;br /&gt;
    echo &amp;ldquo;Wrong SSN.&amp;rdquo;;&lt;br /&gt;
}&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;验证信用卡号&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;$cc = &amp;ldquo;378282246310005&amp;rdquo;;&lt;br /&gt;
if(preg_match(&amp;lsquo;/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6011[0-9]{12}|3(?:0[0-5]|[68][0-9])[0-9]{11}|3[47][0-9]{13})$/&amp;lsquo;, $cc)){&lt;br /&gt;
    echo &amp;ldquo;Your credit card number is ok.&amp;rdquo;;&lt;br /&gt;
}else{&lt;br /&gt;
    echo &amp;ldquo;Wrong credit card number.&amp;rdquo;;&lt;br /&gt;
}&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;验证域名&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;$url = &amp;ldquo;&lt;a href=&#34;http://ansoncheung.tk/&amp;quot;&#34; target=&#34;_blank&#34;&gt;http://ansoncheung.tk/&amp;quot;&lt;/a&gt;;&lt;br /&gt;
if (preg&lt;em&gt;match(&amp;lsquo;/^(http|https|ftp):\/\/([A-Z0-9][A-Z0-9&lt;/em&gt;-]&lt;em&gt;(?:.[A-Z0-9][A-Z0-9_-]&lt;/em&gt;)+):?(\d+)?\/?/i&amp;rsquo;, $url)) {&lt;br /&gt;
    echo &amp;ldquo;Your url is ok.&amp;rdquo;;&lt;br /&gt;
}else{&lt;br /&gt;
    echo &amp;ldquo;Wrong url.&amp;rdquo;;&lt;br /&gt;
}&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;从特定URL中提取域名&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;$url = &amp;ldquo;&lt;a href=&#34;http://ansoncheung.tk/articles&amp;quot;&#34; target=&#34;_blank&#34;&gt;http://ansoncheung.tk/articles&amp;quot;&lt;/a&gt;;&lt;br /&gt;
preg_match(&amp;lsquo;@^(?:http://)?([^/]+)@i&amp;rsquo;, $url, $matches);&lt;br /&gt;
$host = $matches[1];&lt;br /&gt;
echo $host;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;将文中关键词高亮显示&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;$text = &amp;ldquo;Sample sentence from AnsonCheung.tk, regular expression has become popular in web programming. Now we learn regex. According to wikipedia, Regular expressions (abbreviated as regex or regexp, with plural forms regexes, regexps, or regexen) are written in a formal language that can be interpreted by a regular expression processor&amp;rdquo;;&lt;br /&gt;
$text = preg_replace(&amp;ldquo;/\b(regex)\b/i&amp;rdquo;, &amp;lsquo;&lt;span style=&#34;background:#5fc9f6&#34;&gt;\1&lt;/span&gt;&amp;rsquo;, $text);&lt;br /&gt;
echo $text;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:d&#34;&gt;\d &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:d&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        
        <item>
            <title>正则表达式前端使用手册</title>
            <link>http://blog.pytool.com/basic/2015-01-01-%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
            <pubDate>Thu, 15 Jun 2017 14:08:22 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2015-01-01-%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
            <description>&lt;p&gt;PS：正则表达式用于字符串处理、表单验证等场合，实用高效。以下表达式本人收集于网络，做了简单整理，以备不时之需。没有全部验证，可能会存在部分错误，读者请自己调试鉴别更正。&lt;/p&gt;

&lt;p&gt;匹配中文字符的正则表达式： [\u4e00-\u9fa5]&lt;br /&gt;
评注：匹配中文还真是个头疼的事，有了这个表达式就好办了&lt;/p&gt;

&lt;p&gt;匹配双字节字符(包括汉字在内)：[^\x00-\xff]&lt;br /&gt;
评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）&lt;/p&gt;

&lt;p&gt;匹配空白行的正则表达式：\n\s*\r&lt;br /&gt;
评注：可以用来删除空白行&lt;/p&gt;

&lt;p&gt;匹配HTML标记的正则表达式：&amp;lt;(\S&lt;em&gt;?)[^&amp;gt;]&lt;/em&gt;&amp;gt;.&lt;em&gt;?&amp;lt;/\1&amp;gt;|&amp;lt;.&lt;/em&gt;? /&amp;gt;&lt;br /&gt;
评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力&lt;/p&gt;

&lt;p&gt;匹配首尾空白字符的正则表达式：^\s&lt;em&gt;|\s&lt;/em&gt;$&lt;br /&gt;
评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式&lt;/p&gt;

&lt;p&gt;匹配Email地址的正则表达式：\w+([-+.]\w+)&lt;em&gt;@\w+([-.]\w+)&lt;/em&gt;.\w+([-.]\w+)*&lt;br /&gt;
评注：表单验证时很实用&lt;/p&gt;

&lt;p&gt;匹配网址URL的正则表达式：[a-zA-z]+://[^\s]*&lt;br /&gt;
评注：网上流传的版本功能很有限，上面这个基本可以满足需求&lt;/p&gt;

&lt;p&gt;匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$&lt;br /&gt;
评注：表单验证时很实用&lt;/p&gt;

&lt;p&gt;匹配国内电话号码：\d{3}-\d{8}|\d{4}-\d{7}&lt;br /&gt;
评注：匹配形式如 0511-4405222 或 021-87888822&lt;/p&gt;

&lt;p&gt;匹配腾讯QQ号：[1-9][0-9]{4,}&lt;br /&gt;
评注：腾讯QQ号从10000开始&lt;/p&gt;

&lt;p&gt;匹配中国邮政编码：[1-9]\d{5}(?!\d)&lt;br /&gt;
评注：中国邮政编码为6位数字&lt;/p&gt;

&lt;p&gt;匹配身份证：\d{15}|\d{18}&lt;br /&gt;
评注：中国的身份证为15位或18位&lt;/p&gt;

&lt;p&gt;匹配ip地址：\d+.\d+.\d+.\d+&lt;br /&gt;
评注：提取ip地址时有用&lt;/p&gt;

&lt;p&gt;匹配特定数字：&lt;br /&gt;
&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1-9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1-9&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;\d&lt;em&gt;$　 　 //匹配正整数&lt;br /&gt;
^-[1-9]\d&lt;/em&gt;$ 　 //匹配负整数&lt;br /&gt;
^-?[1-9]\d&lt;em&gt;$　　 //匹配整数&lt;br /&gt;
&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1-9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1-9&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;\d&lt;/em&gt;|0$　 //匹配非负整数（正整数 + 0）&lt;br /&gt;
^-[1-9]\d&lt;em&gt;|0$　　 //匹配非正整数（负整数 + 0）&lt;br /&gt;
&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1-9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1-9&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;\d&lt;/em&gt;.\d&lt;em&gt;|0.\d&lt;/em&gt;[1-9]\d&lt;em&gt;$　　 //匹配正浮点数&lt;br /&gt;
^-([1-9]\d&lt;/em&gt;.\d&lt;em&gt;|0.\d&lt;/em&gt;[1-9]\d&lt;em&gt;)$　 //匹配负浮点数&lt;br /&gt;
^-?([1-9]\d&lt;/em&gt;.\d&lt;em&gt;|0.\d&lt;/em&gt;[1-9]\d&lt;em&gt;|0?.0+|0)$　 //匹配浮点数&lt;br /&gt;
&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1-9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1-9&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;\d&lt;/em&gt;.\d&lt;em&gt;|0.\d&lt;/em&gt;[1-9]\d&lt;em&gt;|0?.0+|0$　　 //匹配非负浮点数（正浮点数 + 0）&lt;br /&gt;
^(-([1-9]\d&lt;/em&gt;.\d&lt;em&gt;|0.\d&lt;/em&gt;[1-9]\d*))|0?.0+|0$　　//匹配非正浮点数（负浮点数 + 0）&lt;br /&gt;
评注：处理大量数据时有用，具体应用时注意修正&lt;/p&gt;

&lt;p&gt;匹配特定字符串：&lt;br /&gt;
&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:A-Za-z&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:A-Za-z&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;+$　　//匹配由26个英文字母组成的字符串&lt;br /&gt;
&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:A-Z&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:A-Z&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;+$　　//匹配由26个英文字母的大写组成的字符串&lt;br /&gt;
&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a-z&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a-z&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;+$　　//匹配由26个英文字母的小写组成的字符串&lt;br /&gt;
&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:A-Za-z0-9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:A-Za-z0-9&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;+$　　//匹配由数字和26个英文字母组成的字符串&lt;br /&gt;
^\w+$　　//匹配由数字、26个英文字母或者下划线组成的字符串&lt;/p&gt;

&lt;p&gt;评注：上面是最基本也是最常用的一些表达式&lt;/p&gt;

&lt;p&gt;在使用RegularExpressionValidator验证控件时的验证功能及其验证表达式介绍如下:&lt;/p&gt;

&lt;p&gt;只能输入数字：“&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0-9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0-9&#34;&gt;9&lt;/a&gt;&lt;/sup&gt;&lt;em&gt;$”&lt;br /&gt;
只能输入n位的数字：“^d{n}$”&lt;br /&gt;
只能输入至少n位数字：“^d{n,}$”&lt;br /&gt;
只能输入m-n位的数字：“^d{m,n}$”&lt;br /&gt;
只能输入零和非零开头的数字：“^(0|[1-9][0-9]&lt;/em&gt;)$”&lt;br /&gt;
只能输入有两位小数的正实数：“&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0-9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0-9&#34;&gt;10&lt;/a&gt;&lt;/sup&gt;+(.[0-9]{2})?$”&lt;br /&gt;
只能输入有1-3位小数的正实数：“&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0-9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0-9&#34;&gt;11&lt;/a&gt;&lt;/sup&gt;+(.[0-9]{1,3})?$”&lt;br /&gt;
只能输入非零的正整数：“^+?[1-9][0-9]&lt;em&gt;$”&lt;br /&gt;
只能输入非零的负整数：“^-[1-9][0-9]&lt;/em&gt;$”&lt;br /&gt;
只能输入长度为3的字符：“^.{3}$”&lt;br /&gt;
只能输入由26个英文字母组成的字符串：“&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:A-Za-z&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:A-Za-z&#34;&gt;12&lt;/a&gt;&lt;/sup&gt;+$”&lt;br /&gt;
只能输入由26个大写英文字母组成的字符串：“&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:A-Z&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:A-Z&#34;&gt;13&lt;/a&gt;&lt;/sup&gt;+$”&lt;br /&gt;
只能输入由26个小写英文字母组成的字符串：“&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a-z&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a-z&#34;&gt;14&lt;/a&gt;&lt;/sup&gt;+$”&lt;br /&gt;
只能输入由数字和26个英文字母组成的字符串：“&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:A-Za-z0-9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:A-Za-z0-9&#34;&gt;15&lt;/a&gt;&lt;/sup&gt;+$”&lt;br /&gt;
只能输入由数字、26个英文字母或者下划线组成的字符串：“^w+$”&lt;br /&gt;
验证用户密码:“&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a-zA-Z&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a-zA-Z&#34;&gt;16&lt;/a&gt;&lt;/sup&gt;w{5,17}$”正确格式为：以字母开头，长度在6-18之间，&lt;/p&gt;

&lt;p&gt;只能包含字符、数字和下划线。&lt;br /&gt;
验证是否含有^%&amp;amp;’,;=?$”等字符：“[^%&amp;amp;’,;=?$x22]+”&lt;br /&gt;
只能输入汉字：“&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:u4e00-u9fa5&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:u4e00-u9fa5&#34;&gt;17&lt;/a&gt;&lt;/sup&gt;,{0,}$”&lt;br /&gt;
验证Email地址：“^w+[-+.]w+)&lt;em&gt;@w+([-.]w+)&lt;/em&gt;.w+([-.]w+)&lt;em&gt;$”&lt;br /&gt;
验证InternetURL：“^http://([w-]+.)+[w-]+(/[w-./?%&amp;amp;=]&lt;/em&gt;)?$”&lt;br /&gt;
验证电话号码：“^((d{3,4})|d{3,4}-)?d{7,8}$”&lt;/p&gt;

&lt;p&gt;正确格式为：“XXXX-XXXXXXX”，“XXXX-XXXXXXXX”，“XXX-XXXXXXX”，&lt;/p&gt;

&lt;p&gt;“XXX-XXXXXXXX”，“XXXXXXX”，“XXXXXXXX”。&lt;br /&gt;
验证身份证号（15位或18位数字）：“^d{15}|d{}18$”&lt;br /&gt;
验证一年的12个月：“^(0?[1-9]|1[0-2])$”正确格式为：“01”-“09”和“1”“12”&lt;br /&gt;
验证一个月的31天：“^((0?[1-9])|((1|2)[0-9])|30|31)$”&lt;/p&gt;

&lt;p&gt;正确格式为：“01”“09”和“1”“31”。&lt;br /&gt;
表达式全集&lt;/p&gt;

&lt;p&gt;正则表达式有多种不同的风格。下表是在PCRE中元字符及其在正则表达式上下文中的行为的一个完整列表：&lt;br /&gt;
字符  描述&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\ 	将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“n”匹配字符“n”。“\n”匹配一个换行符。序列“\\”匹配“\”而“\(”则匹配“(”。  
^ 	匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“\n”或“\r”之后的位置。  
$ 	匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\n”或“\r”之前的位置。  
* 	匹配前面的子表达式零次或多次。例如，zo*能匹配“z”以及“zoo”。*等价于{0,}。  
+ 	匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。  
? 	匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“do”或“does”中的“do”。?等价于{0,1}。  
{n} 	n是一个非负整数。匹配确定的n次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个o。  
{n,} 	n是一个非负整数。至少匹配n次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o*”。  
{n,m} 	m和n均为非负整数，其中n&amp;lt;=m。最少匹配n次且最多匹配m次。例如，“o{1,3}”将匹配“fooooood”中的前三个o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。  
? 	当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。  
. 	匹配除“\n”之外的任何单个字符。要匹配包括“\n”在内的任何字符，请使用像“[.\n]”的模式。  
(pattern) 	匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“\(”或“\)”。  
(?:pattern) 	匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“(|)”来组合一个模式的各个部分是很有用。例如“industr(?:y|ies)”就是一个比“industry|industries”更简略的表达式。  
(?=pattern) 	正向预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95|98|NT|2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。  
(?!pattern) 	负向预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“Windows(?!95|98|NT|2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始  
x|y 	匹配x或y。例如，“z|food”能匹配“z”或“food”。“(z|f)ood”则匹配“zood”或“food”。  
[xyz] 	字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。  
[^xyz] 	负值字符集合。匹配未包含的任意字符。例如，“[^abc]”可以匹配“plain”中的“p”。  
[a-z] 	字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。  
[^a-z] 	负值字符范围。匹配任何不在指定范围内的任意字符。例如，“[^a-z]”可以匹配任何不在“a”到“z”范围内的任意字符。  
\b 	匹配一个单词边界，也就是指单词和空格间的位置。例如，“er\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。  
\B 	匹配非单词边界。“er\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。  
\cx 	匹配由x指明的控制字符。例如，\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“c”字符。  
\d 	匹配一个数字字符。等价于[0-9]。  
\D 	匹配一个非数字字符。等价于[^0-9]。  
\f 	匹配一个换页符。等价于\x0c和\cL。  
\n 	匹配一个换行符。等价于\x0a和\cJ。  
\r 	匹配一个回车符。等价于\x0d和\cM。  
\s 	匹配任何空白字符，包括空格、制表符、换页符等等。等价于[\f\n\r\t\v]。  
\S 	匹配任何非空白字符。等价于[^\f\n\r\t\v]。  
\t 	匹配一个制表符。等价于\x09和\cI。  
\v 	匹配一个垂直制表符。等价于\x0b和\cK。  
\w 	匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。  
\W 	匹配任何非单词字符。等价于“[^A-Za-z0-9_]”。  
\xn 	匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\x41”匹配“A”。“\x041”则等价于“\x04&amp;amp;1”。正则表达式中可以使用ASCII编码。.  
\num 	匹配num，其中num是一个正整数。对所获取的匹配的引用。例如，“(.)\1”匹配两个连续的相同字符。  
\n 	标识一个八进制转义值或一个向后引用。如果\n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n为一个八进制转义值。  
\nm 	标识一个八进制转义值或一个向后引用。如果\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则\nm将匹配八进制转义值nm。  
\nml 	如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。  
\un 	匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\u00A9匹配版权符号（?）。  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下是以PHP的语法所写的示例&lt;/p&gt;

&lt;p&gt;验证字符串是否只含数字与英文，字符串长度并在4~16个字符之间&lt;/p&gt;

&lt;p&gt;&amp;lt;?php&lt;br /&gt;
$str = &amp;lsquo;a1234&amp;rsquo;;&lt;br /&gt;
if (preg_match(&amp;ldquo;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a-zA-Z0-9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a-zA-Z0-9&#34;&gt;18&lt;/a&gt;&lt;/sup&gt;{4,16}$&amp;ldquo;, $str)) {&lt;br /&gt;
    echo &amp;ldquo;驗證成功&amp;rdquo;;&lt;br /&gt;
} else {&lt;br /&gt;
    echo &amp;ldquo;驗證失敗&amp;rdquo;;&lt;br /&gt;
}&lt;br /&gt;
?&amp;gt;&lt;/p&gt;

&lt;p&gt;简易的台湾身份证字号验证&lt;/p&gt;

&lt;p&gt;&amp;lt;?php&lt;br /&gt;
$str = &amp;lsquo;a1234&amp;rsquo;;&lt;br /&gt;
if (preg_match(&amp;ldquo;/^\w[12]\d{8}$/&amp;ldquo;, $str)) {&lt;br /&gt;
    echo &amp;ldquo;驗證成功&amp;rdquo;;&lt;br /&gt;
} else {&lt;br /&gt;
    echo &amp;ldquo;驗證失敗&amp;rdquo;;&lt;br /&gt;
}&lt;br /&gt;
?&amp;gt;&lt;/p&gt;

&lt;p&gt;以下示例是用 Perl 语言写的，与上面的示例功能相同&lt;/p&gt;

&lt;p&gt;print $str = &amp;ldquo;a1234&amp;rdquo; =~ m:&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a-zA-Z0-9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a-zA-Z0-9&#34;&gt;19&lt;/a&gt;&lt;/sup&gt;{4,16}$: ? &amp;ldquo;COMFIRM&amp;rdquo; : &amp;ldquo;FAILED&amp;rdquo;;&lt;/p&gt;

&lt;p&gt;print $str = &amp;ldquo;a1234&amp;rdquo; =~ m&amp;rdquo;^\w[12]\d{8}$&amp;rdquo; ? &amp;ldquo;COMFIRM&amp;rdquo; : &amp;ldquo;INVAILD&amp;rdquo;;&lt;/p&gt;

&lt;p&gt;如何写出高效率的正则表达式&lt;/p&gt;

&lt;p&gt;如果纯粹是为了挑战自己的正则水平，用来实现一些特效（例如使用正则表达式计算质数、解线性方程），效率不是问题；如果所写的正则表达式只是为了满足一两次、几十次的运行，优化与否区别也不太大。但是，如果所写的正则表达式会百万次、千万次地运行，效率就是很大的问题了。我这里总结了几条提升正则表达式运行效率的经验（工作中学到的，看书学来的，自己的体会），贴在这里。如果您有其它的经验而这里没有提及，欢迎赐教。&lt;/p&gt;

&lt;p&gt;为行文方便，先定义两个概念。&lt;/p&gt;

&lt;p&gt;误匹配：指正则表达式所匹配的内容范围超出了所需要范围，有些文本明明不符合要求，但是被所写的正则式“击中了”。例如，如果使用\d{11}来匹配11位的手机号，\d{11}不单能匹配正确的手机号，它还会匹配98765432100这样的明显不是手机号的字符串。我们把这样的匹配称之为误匹配。&lt;/p&gt;

&lt;p&gt;漏匹配：指正则表达式所匹配的内容所规定的范围太狭窄，有些文本确实是所需要的，但是所写的正则没有将这种情况囊括在内。例如，使用\d{18}来匹配18位的身份证号码，就会漏掉结尾是字母X的情况。&lt;/p&gt;

&lt;p&gt;写出一条正则表达式，既可能只出现误匹配（条件写得极宽松，其范围大于目标文本），也可能只出现漏匹配（只描述了目标文本中多种情况种的一种），还可能既有误匹配又有漏匹配。例如，使用\w+.com来匹配.com结尾的域名，既会误匹配abc_.com这样的字串（合法的域名中不含下划线，\w包含了下划线这种情况），又会漏掉ab-c.com这样的域名（合法域名中可以含中划线，但是\w不匹配中划线）。&lt;/p&gt;

&lt;p&gt;精准的正则表达式意味着既无误匹配且无漏匹配。当然，现实中存在这样的情况：只能看到有限数量的文本，根据这些文本写规则，但是这些规则将会用到海量的文本中。这种情况下，尽可能地（如果不是完全地）消除误匹配以及漏匹配，并提升运行效率，就是我们的目标。本文所提出的经验，主要是针对这种情况。&lt;/p&gt;

&lt;p&gt;掌握语法细节。正则表达式在各种语言中，其语法大致相同，细节各有千秋。明确所使用语言的正则的语法的细节，是写出正确、高效正则表达式的基础。例如，perl中与\w等效的匹配范围是[a-zA-Z0-9_]；perl正则式不支持肯定逆序环视中使用可变的重复（variable repetition inside lookbehind，例如(?&amp;lt;=.*)abc），但是.Net语法是支持这一特性的；又如，JavaScript连逆序环视（Lookbehind,如(?&amp;lt;=ab)c）都不支持，而perl和python是支持的。《精通正则表达式》第3章《正则表达式的特性和流派概览》明确地列出了各大派系正则的异同，这篇文章也简要地列出了几种常用语言、工具中正则的比较。对于具体使用者而言，至少应该详细了解正在使用的那种工作语言里正则的语法细节。&lt;/p&gt;

&lt;p&gt;先粗后精，先加后减。使用正则表达式语法对于目标文本进行描述和界定，可以像画素描一样，先大致勾勒出框架，再逐步在局步实现细节。仍举刚才的手机号的例子，先界定\d{11}，总不会错；再细化为1[358]\d{9}，就向前迈了一大步（至于第二位是不是3、5、8，这里无意深究，只举这样一个例子，说明逐步细化的过程）。这样做的目的是先消除漏匹配（刚开始先尽可能多地匹配，做加法），然后再一点一点地消除误匹配（做减法）。这样有先有后，在考虑时才不易出错，从而向“不误不漏”这个目标迈进。&lt;/p&gt;

&lt;p&gt;留有余地。所能看到的文本sample是有限的，而待匹配检验的文本是海量的，暂时不可见的。对于这样的情况，在写正则表达式时要跳出所能见到的文本的圈子，开拓思路，作出“战略性前瞻”。例如，经常收到这样的垃圾短信：“发*票”、“发#漂”。如果要写规则屏蔽这样烦人的垃圾短信，不但要能写出可以匹配当前文本的正则表达式 发&lt;a href=&#34;?:票|漂&#34; target=&#34;_blank&#34;&gt;*#&lt;/a&gt;，还要能够想到 发.(?:票|漂|飘)之类可能出现的“变种”。这在具体的领域或许会有针对性的规则，不多言。这样做的目的是消除漏匹配，延长正则表达式的生命周期。&lt;/p&gt;

&lt;p&gt;明确。具体说来，就是谨慎用点号这样的元字符，尽可能不用星号和加号这样的任意量词。只要能确定范围的，例如\w，就不要用点号；只要能够预测重复次数的，就不要用任意量词。例如，写析取twitter消息的脚本，假设一条消息的xml正文部分结构是&lt;span class=”msg”&gt;…&lt;/span&gt;且正文中无尖括号，那么&lt;span class=”msg”&gt;[^&amp;lt;]{1,480}&lt;/span&gt;这种写法的思路要好于&lt;span class=”msg”&gt;.*&lt;/span&gt;，原因有二：一是使用[^&amp;lt;]，它保证了文本的范围不会超出下一个小于号所在的位置；二是明确长度范围，{1,480}，其依据是一条twitter消息大致能的字符长度范围。当然，480这个长度是否正确还可推敲，但是这种思路是值得借鉴的。说得狠一点，“滥用点号、星号和加号是不环保、不负责任的做法”。&lt;/p&gt;

&lt;p&gt;不要让稻草压死骆驼。每使用一个普通括号()而不是非捕获型括号(?:…)，就会保留一部分内存等着你再次访问。这样的正则表达式、无限次地运行次数，无异于一根根稻草的堆加，终于能将骆驼压死。养成合理使用(?:…)括号的习惯。&lt;/p&gt;

&lt;p&gt;宁简勿繁。将一条复杂的正则表达式拆分为两条或多条简单的正则表达式，编程难度会降低，运行效率会提升。例如用来消除行首和行尾空白字符的正则表达式s/^\s+|\s+$//g;，其运行效率理论上要低于s/^\s+//g; s/\s+$//g; 。这个例子出自《精通正则表达式》第五章，书中对它的评论是“它几乎总是最快的，而且显然最容易理解”。既快又容易理解，何乐而不为？工作中我们还有其它的理由要将C==(A|B)这样的正则表达式拆为A和B两条表达式分别执行。例如，虽然A和B这两种情况只要有一种能够击中所需要的文本模式就会成功匹配，但是如果只要有一条子表达式（例如A）会产生误匹配，那么不论其它的子表达式（例如B）效率如何之高，范围如何精准，C的总体精准度也会因A而受到影响。&lt;/p&gt;

&lt;p&gt;巧妙定位。有时候，我们需要匹配的the，是作为单词的the（两边有空格），而不是作为单词一部分的t-h-e的有序排列（例如together中的the）。在适当的时候用上^，$，\b等等定位锚点，能有效提升找到成功匹配、淘汰不成功匹配的效率。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1-9&#34;&gt;1-9 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1-9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:1-9&#34;&gt;1-9 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1-9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:1-9&#34;&gt;1-9 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1-9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:1-9&#34;&gt;1-9 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1-9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:A-Za-z&#34;&gt;A-Za-z &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:A-Za-z&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:A-Z&#34;&gt;A-Z &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:A-Z&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:a-z&#34;&gt;a-z &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a-z&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:A-Za-z0-9&#34;&gt;A-Za-z0-9 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:A-Za-z0-9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:0-9&#34;&gt;0-9 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0-9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:0-9&#34;&gt;0-9 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0-9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:0-9&#34;&gt;0-9 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0-9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:A-Za-z&#34;&gt;A-Za-z &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:A-Za-z&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:A-Z&#34;&gt;A-Z &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:A-Z&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:a-z&#34;&gt;a-z &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a-z&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:A-Za-z0-9&#34;&gt;A-Za-z0-9 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:A-Za-z0-9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:a-zA-Z&#34;&gt;a-zA-Z &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a-zA-Z&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:u4e00-u9fa5&#34;&gt;u4e00-u9fa5 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:u4e00-u9fa5&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:a-zA-Z0-9&#34;&gt;a-zA-Z0-9 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a-zA-Z0-9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:a-zA-Z0-9&#34;&gt;a-zA-Z0-9 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a-zA-Z0-9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        
        <item>
            <title>正则表达式前端使用手册</title>
            <link>http://blog.pytool.com/basic/2015-01-01-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
            <pubDate>Thu, 15 Jun 2017 14:08:22 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2015-01-01-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
            <description>

&lt;p&gt;title: 正则表达式前端使用手册
date: 2017-06-15T14:08:22+08:00&lt;br /&gt;
categories: [正则]&lt;br /&gt;
author: louis&lt;br /&gt;
authorLink: &lt;a href=&#34;http://louiszhai.github.io&#34; target=&#34;_blank&#34;&gt;http://louiszhai.github.io&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;http://www.regexr.com/&#34; target=&#34;_blank&#34;&gt;http://www.regexr.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;关于&#34;&gt;关于&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;我的博客：&lt;a href=&#34;http://louiszhai.github.io&#34; target=&#34;_blank&#34;&gt;louis blog&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;SF专栏：&lt;a href=&#34;https://segmentfault.com/blog/louiszhai&#34; target=&#34;_blank&#34;&gt;路易斯前端深度课&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;原文链接：&lt;a href=&#34;http://louiszhai.github.io/2016/06/13/regular/&#34; target=&#34;_blank&#34;&gt;正则表达式前端使用手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;导读&#34;&gt;导读&lt;/h3&gt;

&lt;p&gt;08 08 BS  \b 退格(BS) ，将当前位置移到前一列&lt;/p&gt;

&lt;p&gt;09 09 HT \t 水平制表(HT) （跳到下一个TAB位置）&lt;br /&gt;
10 0A LF \n 换行(LF) ，将当前位置移到下一行开头&lt;br /&gt;
11 0B VT \v 垂直制表(VT)&lt;br /&gt;
12 0C FF \f 换页(FF)，将当前位置移到下页开头&lt;br /&gt;
13 0D CR \r 回车(CR) ，将当前位置移到本行开头&lt;br /&gt;
32 20       空格&lt;br /&gt;
\s 等价 [ \t\n\v\f\r]&lt;/p&gt;

&lt;p&gt;你有没有在搜索文本的时候绞尽脑汁, 试了一个又一个表达式, 还是不行.&lt;/p&gt;

&lt;p&gt;你有没有在表单验证的时候, 只是做做样子(只要不为空就好), 然后烧香拜佛, 虔诚祈祷, 千万不要出错.&lt;/p&gt;

&lt;p&gt;你有没有在使用sed 和 grep 命令的时候, 感觉莫名其妙, 明明应该支持的元字符, 却就是匹配不到.&lt;/p&gt;

&lt;p&gt;甚至, 你压根没遇到过上述情况, 你只是一遍又一遍的调用 replace 而已 (把非搜索文本全部替换为空, 然后就只剩搜索文本了), 面对别人家的简洁高效的语句, 你只能在心中呐喊, replace 大法好.&lt;/p&gt;

&lt;p&gt;为什么要学正则表达式. 有位网友这么说: 江湖传说里, 程序员的正则表达式和医生的处方, 道士的鬼符齐名, 曰: 普通人看不懂的三件神器. 这个传说至少向我们透露了两点信息: 一是正则表达式很牛, 能和医生的处方, 道士的鬼符齐名, 并被大家提起, 可见其江湖地位. 二是正则表达式很难, 这也从侧面说明了, 如果你可以熟练的掌握并应用它, 在装逼的路上, 你将如日中天 (别问我中天是谁……) !&lt;/p&gt;

&lt;!-- more --&gt;  

&lt;p&gt;显然, 有关正则表达的介绍, 无须我多言. 这里就借助 Jeffrey Friedl 的《精通正则表达式》一书的序言正式抛个砖.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;​    &amp;ldquo;如果罗列计算机软件领域的伟大发明, 我相信绝对不会超过二十项, 在这个名单当中, 当然应该包括分组交换网络, Web, Lisp, 哈希算法, UNIX, 编译技术, 关系模型, 面向对象, XML这些大名鼎鼎的家伙, 而正则表达式也绝对不应该被漏掉.&lt;/p&gt;

&lt;p&gt;​     对很多实际工作而言, 正则表达式简直是灵丹妙药, 能够成百倍的提高开发效率和程序质量, 正则表达式在生物信息学和人类基因图谱的研究中所发挥的关键作用, 更是被传为佳话. CSDN的创始人蒋涛先生在早年开发专业软件产品时, 就曾经体验过这一工具的巨大威力, 并且一直印象深刻.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因此, 我们没有理由不去了解正则表达式, 甚至是熟练掌握并运用它.&lt;/p&gt;

&lt;p&gt;本文以正则基础语法开篇, 结合具体实例, 逐步讲解正则表达式匹配原理. 代码实例使用语言包括 js, php, python, java(因有些匹配模式, js并未支持, 需要借助其他语言讲解). 内容包括初阶技能和高阶技能, 适合新手学习和进阶. 本文力求简单通俗易懂, 同时为求全面, 涉及知识较多, 共计12k字, 篇幅较长, 请耐心阅读, 如有阅读障碍请及时&lt;a href=&#34;#respond&#34;&gt;联系我&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;回顾历史&#34;&gt;回顾历史&lt;/h3&gt;

&lt;p&gt;要论正则表达式的渊源, 最早可以追溯至对人类神经系统如何工作的早期研究. Warren McCulloch 和 Walter Pitts 这两位神经大咖 (神经生理学家) 研究出一种数学方式来描述这些神经网络.&lt;/p&gt;

&lt;p&gt;1956 年, 一位叫 Stephen Kleene 的数学家在 McCulloch 和 Pitts 早期工作的基础上, 发表了一篇标题为&amp;rdquo;神经网事件的表示法&amp;rdquo;的论文, 引入了正则表达式的概念.&lt;/p&gt;

&lt;p&gt;随后, 发现可以将这一工作应用于使用 Ken Thompson 的计算搜索算法的一些早期研究中. 而 Ken Thompson 又是 Unix 的主要发明人. 因此半个世纪以前的Unix 中的 qed 编辑器(1966 qed编辑器问世) 成了第一个使用正则表达式的应用程序.&lt;/p&gt;

&lt;p&gt;至此之后, 正则表达式成为家喻户晓的文本处理工具, 几乎各大编程语言都以支持正则表达式作为卖点, 当然 JavaScript 也不例外.&lt;/p&gt;

&lt;h3 id=&#34;正则表达式的定义&#34;&gt;正则表达式的定义&lt;/h3&gt;

&lt;p&gt;正则表达式是由普通字符和特殊字符(也叫元字符或限定符)组成的文字模板. 如下便是简单的匹配连续数字的正则表达式:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/[0-9]+/  
/\d+/  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;ldquo;\d&amp;rdquo; 就是元字符, 而 &amp;ldquo;+&amp;rdquo; 则是限定符.&lt;/p&gt;

&lt;h4 id=&#34;元字符&#34;&gt;元字符&lt;/h4&gt;

&lt;p&gt;| 元字符  |           描述           |&lt;br /&gt;
| :&amp;ndash;: | :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;: |&lt;br /&gt;
|  .   |     匹配除换行符以外的任意字符      |&lt;br /&gt;
|  \d  |   匹配数字, 等价于字符组[0-9]    |&lt;br /&gt;
|  \w  |    匹配字母, 数字, 下划线或汉字    |&lt;br /&gt;
|  \s  | 匹配任意的空白符(包括制表符,空格,换行等) |&lt;br /&gt;
|  \b  |      匹配单词开始或结束的位置      |&lt;br /&gt;
|  ^   |          匹配行首          |&lt;br /&gt;
|  $   |          匹配行尾          |&lt;/p&gt;

&lt;h4 id=&#34;反义元字符&#34;&gt;反义元字符&lt;/h4&gt;

&lt;p&gt;|  元字符  |           描述           |&lt;br /&gt;
| :&amp;mdash;: | :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;: |&lt;br /&gt;
|  \D   | 匹配非数字的任意字符, 等价于[^0-9] |&lt;br /&gt;
|  \W   | 匹配除字母,数字,下划线或汉字之外的任意字符 |&lt;br /&gt;
|  \S   |       匹配非空白的任意字符       |&lt;br /&gt;
|  \B   |     匹配非单词开始或结束的位置      |&lt;br /&gt;
| [^x] |      匹配除x以外的任意字符       |&lt;/p&gt;

&lt;p&gt;可以看出正则表达式严格区分大小写.&lt;/p&gt;

&lt;h4 id=&#34;重复限定符&#34;&gt;重复限定符&lt;/h4&gt;

&lt;p&gt;限定符共有6个, 假设重复次数为x次, 那么将有如下规则:&lt;/p&gt;

&lt;p&gt;|  限定符  |     描述     |&lt;br /&gt;
| :&amp;mdash;: | :&amp;mdash;&amp;mdash;&amp;ndash;: |&lt;br /&gt;
|   *   |    x&amp;gt;=0    |&lt;br /&gt;
|   +   |    x&amp;gt;=1    |&lt;br /&gt;
|   ?   | x=0 or x=1 |&lt;br /&gt;
|  {n}  |    x=n     |&lt;br /&gt;
| {n,}  |    x&amp;gt;=n    |&lt;br /&gt;
| {n,m} |  n&amp;lt;=x&amp;lt;=m   |&lt;/p&gt;

&lt;h4 id=&#34;字符组&#34;&gt;字符组&lt;/h4&gt;

&lt;p&gt;[&amp;hellip;] 匹配中括号内字符之一. 如: [xyz]  匹配字符 x, y 或 z. 如果中括号中包含元字符, 则元字符降级为普通字符, 不再具有元字符的功能, 如 [+.?] 匹配 加号, 点号或问号.&lt;/p&gt;

&lt;h4 id=&#34;排除性字符组&#34;&gt;排除性字符组&lt;/h4&gt;

&lt;p&gt;[^…] 匹配任何未列出的字符,. 如:  [^x]  匹配除x以外的任意字符.&lt;/p&gt;

&lt;h4 id=&#34;多选结构&#34;&gt;多选结构&lt;/h4&gt;

&lt;p&gt;| 就是或的意思, 表示两者中的一个. 如: a|b 匹配a或者b字符.&lt;/p&gt;

&lt;h4 id=&#34;括号&#34;&gt;括号&lt;/h4&gt;

&lt;p&gt;括号 常用来界定重复限定符的范围, 以及将字符&lt;strong&gt;分组&lt;/strong&gt;. 如: (ab)+ 可以匹配abab..等, 其中 ab 便是一个分组.&lt;/p&gt;

&lt;h4 id=&#34;转义字符&#34;&gt;转义字符&lt;/h4&gt;

&lt;p&gt;\ 即转义字符, 通常 &lt;strong&gt;\ * + ? | { [ ( ) ] }^ $ . # 和 空白&lt;/strong&gt; 这些字符都需要转义.&lt;/p&gt;

&lt;h4 id=&#34;操作符的运算优先级&#34;&gt;操作符的运算优先级&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;\ 转义符&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;(), (?:), (?=), [] 圆括号或方括号&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;*, +, ?, {n}, {n,}, {n,m} 限定符&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;^, $ 位置&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;| &amp;ldquo;或&amp;rdquo; 操作&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;测试&#34;&gt;测试&lt;/h4&gt;

&lt;p&gt;我们来测试下上面的知识点, 写一个匹配手机号码的正则表达式, 如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;(\+86)?1\d{10}  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;① &amp;ldquo;\+86&amp;rdquo; 匹配文本 &amp;ldquo;+86&amp;rdquo;, 后面接元字符问号, 表示可匹配1次或0次, 合起来表示 &amp;ldquo;(\+86)?&amp;rdquo; 匹配 &amp;ldquo;+86&amp;rdquo; 或者 &amp;ldquo;&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;② 普通字符&amp;rdquo;1&amp;rdquo; 匹配文本 &amp;ldquo;1&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;③ 元字符 &amp;ldquo;\d&amp;rdquo; 匹配数字0到9, 区间量词 &amp;ldquo;{10}&amp;rdquo; 表示匹配 10 次, 合起来表示 &amp;ldquo;\d{10}&amp;rdquo; 匹配连续的10个数字.&lt;/p&gt;

&lt;p&gt;以上, 匹配结果如下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://louiszhai.github.io/docImages/regexp01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;修饰符&#34;&gt;修饰符&lt;/h3&gt;

&lt;p&gt;javaScript中正则表达式默认有如下五种修饰符:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;g (全文查找), 如上述截图, 实际上就开启了全文查找模式.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;i (忽略大小写查找)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;m (多行查找)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;y (ES6新增的粘连修饰符)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;u (ES6新增)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;常用的正则表达式&#34;&gt;常用的正则表达式&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;汉字: &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:u4e00-u9fa5&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:u4e00-u9fa5&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;{0,}$&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Email: ^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;URL: ^https?://([\w-]+.)+[\w-]+(/[\w-./?%&amp;amp;=]*)?$&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;手机号码: ^1\d{10}$&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;身份证号: ^(\d{15}|\d{17}(\d|X))$&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;中国邮政编码: [1-9]\d{5}(?!\d) (邮政编码为6位数字)&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;密码验证&#34;&gt;密码验证&lt;/h4&gt;

&lt;p&gt;密码验证是常见的需求, 一般来说, 常规密码大致会满足规律: 6-16位, 数字, 字母, 字符至少包含两种, 同时不能包含中文和空格. 如下便是常规密码验证的正则描述:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var reg = /(?!^[0-9]+$)(?!^[A-z]+$)(?!^[^A-z0-9]+$)^[^\s\u4e00-\u9fa5]{6,16}$/;  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;正则的几大家族&#34;&gt;正则的几大家族&lt;/h3&gt;

&lt;h4 id=&#34;正则表达式分类&#34;&gt;正则表达式分类&lt;/h4&gt;

&lt;p&gt;在 linux 和 osx 下, 常见的正则表达式, 至少有以下三种:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;基本的正则表达式( Basic Regular Expression 又叫 Basic RegEx  简称 &lt;strong&gt;BREs&lt;/strong&gt; )&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;扩展的正则表达式( Extended Regular Expression 又叫 Extended RegEx 简称 &lt;strong&gt;EREs&lt;/strong&gt; )&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Perl 的正则表达式( Perl Regular Expression 又叫 Perl RegEx 简称 &lt;strong&gt;PREs&lt;/strong&gt; )&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;正则表达式比较&#34;&gt;正则表达式比较&lt;/h4&gt;

&lt;p&gt;| 字符         | 说明                                       | Basic RegEx         | Extended RegEx                     | python RegEx | Perl regEx                           |&lt;br /&gt;
| &amp;mdash;&amp;mdash;&amp;mdash;- | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; |&lt;br /&gt;
| 转义         |                                          |                     |                                    |              |                                      |&lt;br /&gt;
| ^          | 匹配行首，例如&amp;rsquo;^dog&amp;rsquo;匹配以字符串dog开头的行（注意：awk 指令中，&amp;rsquo;^&amp;lsquo;则是匹配字符串的开始） | ^                   | ^                                  | ^            | ^                                    |&lt;br /&gt;
| $          | 匹配行尾，例如：&amp;rsquo;^、dog\$&amp;rsquo; 匹配以字符串 dog 为结尾的行（注意：awk 指令中，&amp;rsquo;$&amp;lsquo;则是匹配字符串的结尾） | $                   | $                                  | $            | $                                    |&lt;br /&gt;
| ^$         | 匹配空行                                     | ^$                  | ^$                                 | ^$           | ^$                                   |&lt;br /&gt;
| ^string$   | 匹配行，例如：&amp;rsquo;^dog$&amp;lsquo;匹配只含一个字符串 dog 的行           | ^string$            | ^string$                           | ^string$     | ^string$                             |&lt;br /&gt;
| &amp;lt;         | 匹配单词，例如：&amp;rsquo;&amp;lt;frog&amp;rsquo; （等价于&amp;rsquo;\bfrog&amp;rsquo;），匹配以 frog 开头的单词 | &amp;lt;                  | &amp;lt;                                 | &lt;strong&gt;不支持&lt;/strong&gt;      | &lt;strong&gt;不支持&lt;/strong&gt;（但可以使用\b来匹配单词，例如：&amp;rsquo;\bfrog&amp;rsquo;）    |&lt;br /&gt;
| &amp;gt;         | 匹配单词，例如：&amp;rsquo;frog&amp;gt;&amp;lsquo;（等价于&amp;rsquo;frog\b &amp;lsquo;），匹配以 frog 结尾的单词 | &amp;gt;                  | &amp;gt;                                 | &lt;strong&gt;不支持&lt;/strong&gt;      | &lt;strong&gt;不支持&lt;/strong&gt;（但可以使用\b来匹配单词，例如：&amp;rsquo;frog\b&amp;rsquo;）    |&lt;br /&gt;
| &amp;lt;x&amp;gt;       | 匹配一个单词或者一个特定字符，例如：&amp;rsquo;&amp;lt;frog&amp;gt;&amp;lsquo;（等价于&amp;rsquo;\bfrog\b&amp;rsquo;）、&amp;rsquo;&amp;lt;G&amp;gt;&amp;rsquo; | &amp;lt;x&amp;gt;                | &amp;lt;x&amp;gt;                               | &lt;strong&gt;不支持&lt;/strong&gt;      | &lt;strong&gt;不支持&lt;/strong&gt;（但可以使用\b来匹配单词，例如：&amp;rsquo;\bfrog\b&amp;rsquo;   |&lt;br /&gt;
| ()         | 匹配表达式，例如：不支持&amp;rsquo;（frog）&amp;rsquo;                     | &lt;strong&gt;不支持&lt;/strong&gt;（但可以使用，如：dog | ()                                 | ()           | ()                                   |&lt;br /&gt;
|            | 匹配表达式，例如：不支持&amp;rsquo;（frog）&amp;rsquo;                     |                     | &lt;strong&gt;不支持&lt;/strong&gt;（同())                       | &lt;strong&gt;不支持&lt;/strong&gt;（同()) | &lt;strong&gt;不支持&lt;/strong&gt;（同())                         |&lt;br /&gt;
| ？          | 匹配前面的子表达式 0 次或 1 次（等价于{0,1}），例如：where(is)?能匹配&amp;rdquo;where&amp;rdquo; 以及&amp;rdquo;whereis&amp;rdquo; | &lt;strong&gt;不支持&lt;/strong&gt;（同\?)        | ？                                  | ？            | ？                                    |&lt;br /&gt;
| \?         | 匹配前面的子表达式 0 次或 1 次（等价于&amp;rsquo;{0,1}&amp;lsquo;），例如：&amp;rsquo;whereis\? &amp;lsquo;能匹配 &amp;ldquo;where&amp;rdquo;以及&amp;rdquo;whereis&amp;rdquo; | \?                  | &lt;strong&gt;不支持&lt;/strong&gt;（同?)                        | &lt;strong&gt;不支持&lt;/strong&gt;（同?)  | &lt;strong&gt;不支持&lt;/strong&gt;（同?)                          |&lt;br /&gt;
| ?          | 当该字符紧跟在任何一个其他限制符（*, +, ?, {n},{n,}, {n,m}） 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 &amp;ldquo;oooo&amp;rdquo;，&amp;rsquo;o+?&amp;rsquo; 将匹配单个&amp;rdquo;o&amp;rdquo;，而 &amp;lsquo;o+&amp;rsquo; 将匹配所有 &amp;lsquo;o&amp;rsquo; | &lt;strong&gt;不支持&lt;/strong&gt;             | &lt;strong&gt;不支持&lt;/strong&gt;                            | &lt;strong&gt;不支持&lt;/strong&gt;      | &lt;strong&gt;不支持&lt;/strong&gt;                              |&lt;br /&gt;
| .          | 匹配除换行符（&amp;rsquo;\n&amp;rsquo;）之外的任意单个字符（注意：awk 指令中的句点能匹配换行符） | .                   | .（如果要匹配包括“\n”在内的任何一个字符，请使用: [\s\S] | .            | .（如果要匹配包括“\n”在内的任何一个字符，请使用：&amp;rsquo; [.\n] &amp;lsquo; |&lt;br /&gt;
| *          | 匹配前面的子表达式 0 次或多次（等价于{0, }），例如：zo* 能匹配 &amp;ldquo;z&amp;rdquo;以及 &amp;ldquo;zoo&amp;rdquo; | *                   | *                                  | *            | *                                    |&lt;br /&gt;
| +         | 匹配前面的子表达式 1 次或多次（等价于&amp;rsquo;{1, }&amp;lsquo;），例如：&amp;rsquo;whereis+ &amp;lsquo;能匹配 &amp;ldquo;whereis&amp;rdquo;以及&amp;rdquo;whereisis&amp;rdquo; | +                  | &lt;strong&gt;不支持&lt;/strong&gt;（同+)                        | &lt;strong&gt;不支持&lt;/strong&gt;（同+)  | &lt;strong&gt;不支持&lt;/strong&gt;（同+)                          |&lt;br /&gt;
| +          | 匹配前面的子表达式 1 次或多次（等价于{1, }），例如：zo+能匹配 &amp;ldquo;zo&amp;rdquo;以及 &amp;ldquo;zoo&amp;rdquo;，但不能匹配 &amp;ldquo;z&amp;rdquo; | &lt;strong&gt;不支持&lt;/strong&gt;（同\+)       | +                                  | +            | +                                    |&lt;br /&gt;
| {n}        | n 必须是一个 0 或者正整数，匹配子表达式 n 次，例如：zo{2}能匹配   | &lt;strong&gt;不支持&lt;/strong&gt;（同\{n\})   | {n}                                | {n}          | {n}                                  |&lt;br /&gt;
| {n,}       | &amp;ldquo;zooz&amp;rdquo;，但不能匹配 &amp;ldquo;Bob&amp;rdquo;n 必须是一个 0 或者正整数，匹配子表达式大于等于 n次，例如：go{2,} | &lt;strong&gt;不支持&lt;/strong&gt;（同\{n,\})  | {n,}                               | {n,}         | {n,}                                 |&lt;br /&gt;
| {n,m}      | 能匹配 &amp;ldquo;good&amp;rdquo;，但不能匹配 godm 和 n 均为非负整数，其中 n &amp;lt;= m，最少匹配 n 次且最多匹配 m 次 ，例如：o{1,3}将配&amp;rdquo;fooooood&amp;rdquo; 中的前三个 o（请注意在逗号和两个数之间不能有空格） | &lt;strong&gt;不支持&lt;/strong&gt;（同\{n,m\}) | {n,m}                              | {n,m}        | {n,m}                                |&lt;br /&gt;
| x l y      | 匹配 x 或 y                                 | &lt;strong&gt;不支持&lt;/strong&gt;（同x \l y     | x l y                              | x l y        | x l y                                |&lt;br /&gt;
| [0-9]      | 匹配从 0 到 9 中的任意一个数字字符（注意：要写成递增）           | [0-9]               | [0-9]                              | [0-9]        | [0-9]                                |&lt;br /&gt;
| [xyz]      | 字符集合，匹配所包含的任意一个字符，例如：&amp;rsquo;[abc]&amp;lsquo;可以匹配&amp;rdquo;lay&amp;rdquo; 中的 &amp;lsquo;a&amp;rsquo;（注意：如果元字符，例如：. *等，它们被放在[ ]中，那么它们将变成一个普通字符） | [xyz]               | [xyz]                              | [xyz]        | [xyz]                                |&lt;br /&gt;
| [^xyz]    | 负值字符集合，匹配未包含的任意一个字符（注意：不包括换行符），例如：&amp;rsquo;[^abc]&amp;rsquo; 可以匹配 &amp;ldquo;Lay&amp;rdquo; 中的&amp;rsquo;L&amp;rsquo;（注意：[^xyz]在awk 指令中则是匹配未包含的任意一个字符+换行符） | [^xyz]             | [^xyz]                            | [^xyz]      | [^xyz]                              |&lt;br /&gt;
| [A-Za-z]   | 匹配大写字母或者小写字母中的任意一个字符（注意：要写成递增）           | [A-Za-z]            | [A-Za-z]                           | [A-Za-z]     | [A-Za-z]                             |&lt;br /&gt;
| [^A-Za-z] | 匹配除了大写与小写字母之外的任意一个字符（注意：写成递增）            | [^A-Za-z]          | [^A-Za-z]                         | [^A-Za-z]   | [^A-Za-z]                           |&lt;br /&gt;
| \d         | 匹配从 0 到 9 中的任意一个数字字符（等价于 [0-9]）          | &lt;strong&gt;不支持&lt;/strong&gt;             | &lt;strong&gt;不支持&lt;/strong&gt;                            | \d           | \d                                   |&lt;br /&gt;
| \D         | 匹配非数字字符（等价于 [^0-9]）                      | &lt;strong&gt;不支持&lt;/strong&gt;             | &lt;strong&gt;不支持&lt;/strong&gt;                            | \D           | \D                                   |&lt;br /&gt;
| \S         | 匹配任何非空白字符（等价于[^\f\n\r\t\v]）              | &lt;strong&gt;不支持&lt;/strong&gt;             | &lt;strong&gt;不支持&lt;/strong&gt;                            | \S           | \S                                   |&lt;br /&gt;
| \s         | 匹配任何空白字符，包括空格、制表符、换页符等等（等价于[ \f\n\r\t\v]） | &lt;strong&gt;不支持&lt;/strong&gt;             | &lt;strong&gt;不支持&lt;/strong&gt;                            | \s           | \s                                   |&lt;br /&gt;
| \W         | 匹配任何非单词字符 (等价于[^A-Za-z0-9&lt;em&gt;])             | \W                  | \W                                 | \W           | \W                                   |&lt;br /&gt;
| \w         | 匹配包括下划线的任何单词字符（等价于[A-Za-z0-9&lt;/em&gt;]）          | \w                  | \w                                 | \w           | \w                                   |&lt;br /&gt;
| \B         | 匹配非单词边界，例如：&amp;rsquo;er\B&amp;rsquo; 能匹配 &amp;ldquo;verb&amp;rdquo; 中的&amp;rsquo;er&amp;rsquo;，但不能匹配&amp;rdquo;never&amp;rdquo; 中的&amp;rsquo;er&amp;rsquo; | \B                  | \B                                 | \B           | \B                                   |&lt;br /&gt;
| \b         | 匹配一个单词边界，也就是指单词和空格间的位置，例如： &amp;lsquo;er\b&amp;rsquo; 可以匹配&amp;rdquo;never&amp;rdquo; 中的 &amp;lsquo;er&amp;rsquo;，但不能匹配 &amp;ldquo;verb&amp;rdquo; 中的&amp;rsquo;er&amp;rsquo; | \b                  | \b                                 | \b           | \b                                   |&lt;br /&gt;
| \t         | 匹配一个横向制表符（等价于 \x09和 \cI）                 | &lt;strong&gt;不支持&lt;/strong&gt;             | &lt;strong&gt;不支持&lt;/strong&gt;                            | \t           | \t                                   |&lt;br /&gt;
| \v         | 匹配一个垂直制表符（等价于 \x0b和 \cK）                 | &lt;strong&gt;不支持&lt;/strong&gt;             | &lt;strong&gt;不支持&lt;/strong&gt;                            | \v           | \v                                   |&lt;br /&gt;
| \n         | 匹配一个换行符（等价于 \x0a 和\cJ）                   | &lt;strong&gt;不支持&lt;/strong&gt;             | &lt;strong&gt;不支持&lt;/strong&gt;                            | \n           | \n                                   |&lt;br /&gt;
| \f         | 匹配一个换页符（等价于\x0c 和\cL）                    | &lt;strong&gt;不支持&lt;/strong&gt;             | &lt;strong&gt;不支持&lt;/strong&gt;                            | \f           | \f                                   |&lt;br /&gt;
| \r         | 匹配一个回车符（等价于 \x0d 和\cM）                   | &lt;strong&gt;不支持&lt;/strong&gt;             | &lt;strong&gt;不支持&lt;/strong&gt;                            | \r           | \r                                   |&lt;br /&gt;
| \         | 匹配转义字符本身&amp;rdquo;\&amp;rdquo;                              | \                  | \                                 | \           | \                                   |&lt;br /&gt;
| \cx        | 匹配由 x 指明的控制字符，例如：\cM匹配一个Control-M 或回车符，x 的值必须为A-Z 或 a-z 之一，否则，将 c 视为一个原义的 &amp;lsquo;c&amp;rsquo; 字符 | &lt;strong&gt;不支持&lt;/strong&gt;             | &lt;strong&gt;不支持&lt;/strong&gt;                            |              | \cx                                  |&lt;br /&gt;
| \xn        | 匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长，例如：&amp;rsquo;\x41&amp;rsquo; 匹配 &amp;ldquo;A&amp;rdquo;。&amp;rsquo;\x041&amp;rsquo; 则等价于&amp;rsquo;\x04&amp;rsquo; &amp;amp; &amp;ldquo;1&amp;rdquo;。正则表达式中可以使用 ASCII 编码 | &lt;strong&gt;不支持&lt;/strong&gt;             | &lt;strong&gt;不支持&lt;/strong&gt;                            |              | \xn                                  |&lt;br /&gt;
| \num       | 匹配 num，其中 num是一个正整数。表示对所获取的匹配的引用         | &lt;strong&gt;不支持&lt;/strong&gt;             | \num                               | \num         |                                      |&lt;br /&gt;
| [:alnum:]  | 匹配任何一个字母或数字（[A-Za-z0-9]），例如：&amp;rsquo;[[:alnum:]] &amp;lsquo; | [:alnum:]           | [:alnum:]                          | [:alnum:]    | [:alnum:]                            |&lt;br /&gt;
| [:alpha:]  | 匹配任何一个字母（[A－Za－z]）， 例如：&amp;rsquo; [[:alpha:]] &amp;lsquo;   | [:alpha:]           | [:alpha:]                          | [:alpha:]    | [:alpha:]                            |&lt;br /&gt;
| [:digit:]  | 匹配任何一个数字（[0-9]），例如：&amp;rsquo;[[:digit:]] &amp;lsquo;        | [:digit:]           | [:digit:]                          | [:digit:]    | [:digit:]                            |&lt;br /&gt;
| [:lower:]  | 匹配任何一个小写字母（[a-z]）， 例如：&amp;rsquo; [[:lower:]] &amp;lsquo;    | [:lower:]           | [:lower:]                          | [:lower:]    | [:lower:]                            |&lt;br /&gt;
| [:upper:]  | 匹配任何一个大写字母（[A-Z]）                        | [:upper:]           | [:upper:]                          | [:upper:]    | [:upper:]                            |&lt;br /&gt;
| [:space:]  | 任何一个空白字符： 支持制表符、空格，例如：&amp;rsquo; [[:space:]] &amp;lsquo;    | [:space:]           | [:space:]                          | [:space:]    | [:space:]                            |&lt;br /&gt;
| [:blank:]  | 空格和制表符（横向和纵向），例如：&amp;rsquo;[[:blank:]]&amp;lsquo;ó&amp;rsquo;[\s\t\v]&amp;rsquo; | [:blank:]           | [:blank:]                          | [:blank:]    | [:blank:]                            |&lt;br /&gt;
| [:graph:]  | 任何一个可以看得见的且可以打印的字符（注意：不包括空格和换行符等），例如：&amp;rsquo;[[:graph:]] &amp;lsquo; | [:graph:]           | [:graph:]                          | [:graph:]    | [:graph:]                            |&lt;br /&gt;
| [:print:]  | 任何一个可以打印的字符（注意：不包括：[:cntrl:]、字符串结束符&amp;rsquo;\0&amp;rsquo;、EOF 文件结束符（-1）， 但包括空格符号），例如：&amp;rsquo;[[:print:]] &amp;lsquo; | [:print:]           | [:print:]                          | [:print:]    | [:print:]                            |&lt;br /&gt;
| [:cntrl:]  | 任何一个控制字符（ASCII 字符集中的前 32 个字符，即：用十进制表示为从 0 到31，例如：换行符、制表符等等），例如：&amp;rsquo; [[:cntrl:]]&amp;rsquo; | [:cntrl:]           | [:cntrl:]                          | [:cntrl:]    | [:cntrl:]                            |&lt;br /&gt;
| [:punct:]  | 任何一个标点符号（不包括：[:alnum:]、[:cntrl:]、[:space:]这些字符集） | [:punct:]           | [:punct:]                          | [:punct:]    | [:punct:]                            |&lt;br /&gt;
| [:xdigit:] | 任何一个十六进制数（即：0-9，a-f，A-F）                 | [:xdigit:]          | [:xdigit:]                         | [:xdigit:]   | [:xdigit:]                           |&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;js中支持的是EREs.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;当使用 BREs ( 基本正则表达式 ) 时，必须在下列这些符号(?,+,|,{,},(,))前加上转义字符 \ .&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;上述[[:xxxx:]] 形式的正则表达式, 是php中内置的通用字符簇, js中并不支持.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;linux-osx下常用命令与正则表达式的关系&#34;&gt;linux/osx下常用命令与正则表达式的关系&lt;/h3&gt;

&lt;p&gt;我曾经尝试在 grep 和 sed 命令中书写正则表达式, 经常发现不能使用元字符, 而且有时候需要转义, 有时候不需要转义, 始终不能摸清它的规律. 如果恰好你也有同样的困惑, 那么请往下看, 相信应该能有所收获.&lt;/p&gt;

&lt;h4 id=&#34;grep-egrep-sed-awk-正则表达式特点&#34;&gt;grep , egrep , sed , awk  正则表达式特点&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;grep 支持：BREs、EREs、PREs 正则表达式&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;grep 指令后不跟任何参数, 则表示要使用 &amp;ldquo;BREs&amp;rdquo;&lt;/p&gt;

&lt;p&gt;grep 指令后跟 ”-E&amp;rdquo; 参数, 则表示要使用 &amp;ldquo;EREs&amp;rdquo;&lt;/p&gt;

&lt;p&gt;grep 指令后跟 “-P&amp;rdquo; 参数, 则表示要使用 &amp;ldquo;PREs&amp;rdquo;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;egrep 支持：EREs、PREs 正则表达式&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;egrep 指令后不跟任何参数, 则表示要使用 &amp;ldquo;EREs&amp;rdquo;&lt;/p&gt;

&lt;p&gt;egrep 指令后跟 “-P&amp;rdquo; 参数, 则表示要使用 &amp;ldquo;PREs&amp;rdquo;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;sed 支持: BREs、EREs&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;sed 指令默认是使用 &amp;ldquo;BREs&amp;rdquo;&lt;/p&gt;

&lt;p&gt;sed 指令后跟 &amp;ldquo;-r&amp;rdquo; 参数 , 则表示要使用“EREs&amp;rdquo;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;awk 支持 EREs, 并且默认使用 &amp;ldquo;EREs&amp;rdquo;&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;正则表达式初阶技能&#34;&gt;正则表达式初阶技能&lt;/h3&gt;

&lt;h4 id=&#34;贪婪模式与非贪婪模式&#34;&gt;贪婪模式与非贪婪模式&lt;/h4&gt;

&lt;p&gt;默认情况下, 所有的限定词都是贪婪模式, 表示尽可能多的去捕获字符; 而在限定词后增加?, 则是非贪婪模式, 表示尽可能少的去捕获字符. 如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var str = &amp;quot;aaab&amp;quot;,  
    reg1 = /a+/, //贪婪模式  
    reg2 = /a+?/;//非贪婪模式  
console.log(str.match(reg1)); //[&amp;quot;aaa&amp;quot;], 由于是贪婪模式, 捕获了所有的a  
console.log(str.match(reg2)); //[&amp;quot;a&amp;quot;], 由于是非贪婪模式, 只捕获到第一个a  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;实际上, 非贪婪模式非常有效, 特别是当匹配html标签时. 比如匹配一个配对出现的div, 方案一可能会匹配到很多的div标签对, 而方案二则只会匹配一个div标签对.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var str = &amp;quot;&amp;lt;div class=&#39;v1&#39;&amp;gt;&amp;lt;div class=&#39;v2&#39;&amp;gt;test&amp;lt;/div&amp;gt;&amp;lt;input type=&#39;text&#39;/&amp;gt;&amp;lt;/div&amp;gt;&amp;quot;;  
var reg1 = /&amp;lt;div.*&amp;lt;\/div&amp;gt;/; //方案一,贪婪匹配  
var reg2 = /&amp;lt;div.*?&amp;lt;\/div&amp;gt;/;//方案二,非贪婪匹配  
console.log(str.match(reg1));//&amp;quot;&amp;lt;div class=&#39;v1&#39;&amp;gt;&amp;lt;div class=&#39;v2&#39;&amp;gt;test&amp;lt;/div&amp;gt;&amp;lt;input type=&#39;text&#39;/&amp;gt;&amp;lt;/div&amp;gt;&amp;quot;  
console.log(str.match(reg2));//&amp;quot;&amp;lt;div class=&#39;v1&#39;&amp;gt;&amp;lt;div class=&#39;v2&#39;&amp;gt;test&amp;lt;/div&amp;gt;&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;区间量词的非贪婪模式&#34;&gt;区间量词的非贪婪模式&lt;/h5&gt;

&lt;p&gt;一般情况下, 非贪婪模式, 我们使用的是&amp;rdquo;*?&amp;ldquo;, 或 &amp;ldquo;+?&amp;rdquo; 这种形式, 还有一种是 &amp;ldquo;{n,m}?&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;区间量词&amp;rdquo;{n,m}&amp;rdquo; 也是匹配优先, 虽有匹配次数上限, 但是在到达上限之前, 它依然是尽可能多的匹配, 而&amp;rdquo;{n,m}?&amp;rdquo; 则表示在区间范围内, 尽可能少的匹配.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;需要注意的是&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;能达到同样匹配结果的贪婪与非贪婪模式, 通常是贪婪模式的匹配效率较高.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;所有的非贪婪模式, 都可以通过修改量词修饰的子表达式, 转换为贪婪模式.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;贪婪模式可以与&lt;code&gt;固化分组&lt;/code&gt;(后面会讲到)结合，提升匹配效率，而非贪婪模式却不可以.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;分组&#34;&gt;分组&lt;/h4&gt;

&lt;p&gt;正则的分组主要通过小括号来实现, 括号包裹的子表达式作为一个分组, 括号后可以紧跟限定词表示重复次数. 如下, 小括号内包裹的abc便是一个分组:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/(abc)+/.test(&amp;quot;abc123&amp;quot;) == true  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;那么分组有什么用呢? 一般来说, 分组是为了方便的表示重复次数, 除此之外, 还有一个作用就是用于捕获, 请往下看.&lt;/p&gt;

&lt;h4 id=&#34;捕获性分组&#34;&gt;捕获性分组&lt;/h4&gt;

&lt;p&gt;捕获性分组, 通常由一对小括号加上子表达式组成. 捕获性分组会创建反向引用, 每个反向引用都由一个编号或名称来标识, js中主要是通过 &lt;code&gt;$+编号&lt;/code&gt; 或者 &lt;code&gt;\+编号&lt;/code&gt; 表示法进行引用. 如下便是一个捕获性分组的例子.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var color = &amp;quot;#808080&amp;quot;;  
var output = color.replace(/#(\d+)/,&amp;quot;$1&amp;quot;+&amp;quot;~~&amp;quot;);//自然也可以写成 &amp;quot;$1~~&amp;quot;  
console.log(RegExp.$1);//808080  
console.log(output);//808080~~  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上, (\d+) 表示一个捕获性分组, &lt;code&gt;RegExp.$1&lt;/code&gt; 指向该分组捕获的内容. &lt;code&gt;$+编号&lt;/code&gt; 这种引用通常在正则表达式之外使用. &lt;code&gt;\+编号&lt;/code&gt; 这种引用却可以在正则表达式中使用, 可用于匹配不同位置相同部分的子串.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var url = &amp;quot;www.google.google.com&amp;quot;;  
var re = /([a-z]+)\.\1/;  
console.log(url.replace(re,&amp;quot;$1&amp;quot;));//&amp;quot;www.google.com&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上, 相同部分的&amp;rdquo;google&amp;rdquo;字符串只被替换一次.&lt;/p&gt;

&lt;h4 id=&#34;非捕获性分组&#34;&gt;非捕获性分组&lt;/h4&gt;

&lt;p&gt;非捕获性分组, 通常由一对括号加上&amp;rdquo;?:&amp;ldquo;加上子表达式组成, 非捕获性分组不会创建反向引用, 就好像没有括号一样. 如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var color = &amp;quot;#808080&amp;quot;;  
var output = color.replace(/#(?:\d+)/,&amp;quot;$1&amp;quot;+&amp;quot;~~&amp;quot;);  
console.log(RegExp.$1);//&amp;quot;&amp;quot;  
console.log(output);//$1~~  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上, (?:\d+) 表示一个非捕获性分组, 由于分组不捕获任何内容, 所以, &lt;code&gt;RegExp.$1&lt;/code&gt; 就指向了空字符串.&lt;/p&gt;

&lt;p&gt;同时, 由于&lt;code&gt;$1&lt;/code&gt; 的反向引用不存在, 因此最终它被当成了普通字符串进行替换.&lt;/p&gt;

&lt;p&gt;实际上, 捕获性分组和无捕获性分组在搜索效率方面也没什么不同, 没有哪一个比另一个更快.&lt;/p&gt;

&lt;h4 id=&#34;命名分组&#34;&gt;命名分组&lt;/h4&gt;

&lt;p&gt;语法: (?&lt;name&gt;&amp;hellip;)&lt;/p&gt;

&lt;p&gt;命名分组也是捕获性分组,  它将匹配的字符串捕获到一个组名称或编号名称中, 在获得匹配结果后, 可通过分组名进行获取. 如下是一个python的命名分组的例子.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import re  
data = &amp;quot;#808080&amp;quot;  
regExp = r&amp;quot;#(?P&amp;lt;one&amp;gt;\d+)&amp;quot;  
replaceString = &amp;quot;\g&amp;lt;one&amp;gt;&amp;quot; + &amp;quot;~~&amp;quot;  
print re.sub(regExp,replaceString,data) # 808080~~  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;python的命名分组表达式与标准格式相比, 在 ? 后多了一大写的 P 字符, 并且python通过“\g&amp;lt;命名&amp;gt;&amp;ldquo;表示法进行引用. (如果是捕获性分组, python通过&amp;rdquo;\g&amp;lt;编号&amp;gt;&amp;ldquo;表示法进行引用)&lt;/p&gt;

&lt;p&gt;与python不同的是, javaScript 中并不支持命名分组.&lt;/p&gt;

&lt;h4 id=&#34;固化分组&#34;&gt;固化分组&lt;/h4&gt;

&lt;p&gt;固化分组, 又叫原子组.&lt;/p&gt;

&lt;p&gt;语法: (?&amp;gt;&amp;hellip;)&lt;/p&gt;

&lt;p&gt;如上所述, 我们在使用非贪婪模式时, 匹配过程中可能会进行多次的回溯, 回溯越多, 正则表达式的运行效率就越低. 而固化分组就是用来减少回溯次数的.&lt;/p&gt;

&lt;p&gt;实际上, 固化分组(?&amp;gt;…)的匹配与正常的匹配并无分别, 它并不会改变匹配结果. 唯一的不同就是: 固化分组匹配结束时, 它匹配到的文本已经固化为一个单元, 只能作为整体而保留或放弃, 括号内的子表达式中未尝试过的备用状态都会被放弃, 所以回溯永远也不能选择其中的状态(因此不能参与回溯). 下面我们来通过一个例子更好地理解固化分组.&lt;/p&gt;

&lt;p&gt;假如要处理一批数据, 原格式为 123.456, 因为浮点数显示问题, 部分数据格式会变为123.456000000789这种, 现要求只保留小数点后2~3位, 但是最后一位不能为0, 那么这个正则怎么写呢?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var str = &amp;quot;123.456000000789&amp;quot;;  
str = str.replace(/(\.\d\d[1-9]?)\d*/,&amp;quot;$1&amp;quot;); //123.456  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上的正则, 对于&amp;rdquo;123.456&amp;rdquo; 这种格式的数据, 将白白处理一遍. 为了提高效率, 我们将正则最后的一个&amp;rdquo;*&amp;ldquo;改为&amp;rdquo;+&amp;ldquo;. 如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var str = &amp;quot;123.456&amp;quot;;  
str = str.replace(/(\.\d\d[1-9]?)\d+/,&amp;quot;$1&amp;quot;); //123.45  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时, &amp;ldquo;\d\d[1-9]?&amp;rdquo; 子表达式, 匹配是 &amp;ldquo;45&amp;rdquo;, 而不是 &amp;ldquo;456&amp;rdquo;, 这是因为正则末尾使用了&amp;rdquo;+&amp;ldquo;, 表示末尾至少要匹配一个数字, 因此末尾的子表达式&amp;rdquo;\d+&amp;rdquo; 匹配到了 &amp;ldquo;6&amp;rdquo;. 显然 &amp;ldquo;123.45&amp;rdquo; 不是我们期望的匹配结果, 那我们应该怎么做呢? 能否让 &amp;ldquo;[1-9]?&amp;rdquo; 一旦匹配成功, 便不再进行回溯, 这里就要用到我们上面说的固化分组.&lt;/p&gt;

&lt;p&gt;&amp;rdquo;(\.\d\d(?&amp;gt;[1-9]?))\d+&amp;rdquo; 便是上述正则的固化分组形式. 由于字符串 &amp;ldquo;123.456&amp;rdquo; 不满足该固化分组的正则, 所以, 匹配会失败, 符合我们期望.&lt;/p&gt;

&lt;p&gt;下面我们来分析下固化分组的正则 (\.\d\d(?&amp;gt;[1-9]?))\d+ 为什么匹配不到字符串&amp;rdquo;123.456&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;很明显, 对于上述固化分组, 只存在两种匹配结果.&lt;/p&gt;

&lt;p&gt;情况①: 若 [1-9] 匹配失败, 正则会返回 ? 留下的备用状态. 然后匹配脱离固化分组, 继续前进到[\d+]. 当控制权离开固化分组时, 没有备用状态需要放弃(因固化分组中根本没有创建任何备用状态).&lt;/p&gt;

&lt;p&gt;情况②: 若 [1-9] 匹配成功, 匹配脱离固化分组之后,  ? 保存的备用状态仍然存在, 但是, 由于它属于已经结束的固化分组, 所以会被抛弃.&lt;/p&gt;

&lt;p&gt;对于字符串 &amp;ldquo;123.456&amp;rdquo;, 由于 [1-9] 能够匹配成功, 所以它符合情况②. 下面我们来还原情况②的执行现场.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;匹配所处的状态:  匹配已经走到了 &amp;ldquo;6&amp;rdquo; 的位置, 匹配将继续前进;==&amp;gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;子表达式 \d+ 发现无法匹配, 正则引擎便尝试回溯;==&amp;gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;查看是否存在备用状态以供回溯?==&amp;gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&amp;rdquo;?&amp;rdquo; 保存的备用状态属于已经结束的固化分组, 所以该备用状态会被放弃;==&amp;gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;此时固化分组匹配到的 &amp;ldquo;6&amp;rdquo;, 便不能用于正则引擎的回溯;==&amp;gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;尝试回溯失败;==&amp;gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;正则匹配失败.==&amp;gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;文本 &amp;ldquo;123.456&amp;rdquo; 没有被正则表达式匹配上, 符合预期.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;相应的流程图如下:&lt;/p&gt;

&lt;style&gt;  

img[src$=&#34;louiszhai.github.io/docImages/regexp02.png&#34;]{height:500px;width:396px;}  

&lt;/style&gt;  

&lt;p&gt;&lt;img src=&#34;http://louiszhai.github.io/docImages/regexp02.png&#34; alt=&#34;正则表达式流程图&#34; /&gt;&lt;/p&gt;

&lt;p&gt;遗憾的是, javaScript, java 和 python中并不支持固化分组的语法, 不过, 它在php和.NET中表现良好. 下面提供了一个php版的固化分组形式的正则表达式, 以供尝试.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$str = &amp;quot;123.456&amp;quot;;  
echo preg_replace(&amp;quot;/(\.\d\d(?&amp;gt;[1-9]?))\d+/&amp;quot;,&amp;quot;\\1&amp;quot;,$str); //固化分组  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;不仅如此, php还提供了占有量词优先的语法. 如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$str = &amp;quot;123.456&amp;quot;;  
echo preg_replace(&amp;quot;/(\.\d\d[1-9]?+)\d+/&amp;quot;,&amp;quot;\\1&amp;quot;,$str); //占有量词优先  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;虽然java不支持固化分组的语法, 但java也提供了占有量词优先的语法, 同样能够避免正则回溯. 如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;String str = &amp;quot;123.456&amp;quot;;  
System.out.println(str.replaceAll(&amp;quot;(\\.\\d\\d[1-9]?+)\\d+&amp;quot;, &amp;quot;$1&amp;quot;));// 123.456  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;值得注意的是: java中 replaceAll 方法需要转义反斜杠.&lt;/p&gt;

&lt;h3 id=&#34;正则表达式高阶技能-零宽断言&#34;&gt;正则表达式高阶技能-零宽断言&lt;/h3&gt;

&lt;p&gt;如果说正则分组是写轮眼, 那么零宽断言就是万花筒写轮眼终极奥义-须佐能乎(这里借火影忍术打个比方). 合理地使用零宽断言, 能够能分组之不能, 极大地增强正则匹配能力, 它甚至可以帮助你在匹配条件非常模糊的情况下快速地定位文本.&lt;/p&gt;

&lt;p&gt;零宽断言, 又叫环视. 环视只进行子表达式的匹配, 匹配到的内容不保存到最终的匹配结果, 由于匹配是零宽度的, 故最终匹配到的只是一个位置.&lt;/p&gt;

&lt;p&gt;环视按照方向划分, 有顺序和逆序两种(也叫前瞻和后瞻), 按照是否匹配有肯定和否定两种, 组合之, 便有4种环视. 4种环视并不复杂, 如下便是它们的描述.&lt;/p&gt;

&lt;p&gt;|     &lt;strong&gt;字符&lt;/strong&gt;     | &lt;strong&gt;描述&lt;/strong&gt;                                   | &lt;strong&gt;示例&lt;/strong&gt;                                   |&lt;br /&gt;
| :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;: | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- |&lt;br /&gt;
| (?:&lt;em&gt;pattern&lt;/em&gt;)  | 非捕获性分组, 匹配pattern的位置, 但不捕获匹配结果.也就是说不创建反向引用, 就好像没有括号一样. | &amp;lsquo;abcd(?:e)匹配&amp;rsquo;abcde                       |&lt;br /&gt;
| (?=&lt;em&gt;pattern&lt;/em&gt;)  | &lt;strong&gt;顺序肯定环视&lt;/strong&gt;, 匹配后面是pattern 的位置, 不捕获匹配结果.   | &amp;lsquo;Windows (?=2000)&amp;lsquo;匹配 &amp;ldquo;Windows2000&amp;rdquo; 中的 &amp;ldquo;Windows&amp;rdquo;; 不匹配 &amp;ldquo;Windows3.1&amp;rdquo; 中的 &amp;ldquo;Windows&amp;rdquo; |&lt;br /&gt;
| (?!&lt;em&gt;pattern&lt;/em&gt;)  | &lt;strong&gt;顺序否定环视&lt;/strong&gt;, 匹配后面不是 pattern 的位置, 不捕获匹配结果. | &amp;lsquo;Windows (?!2000)&amp;lsquo;匹配 &amp;ldquo;Windows3.1&amp;rdquo; 中的 &amp;ldquo;Windows&amp;rdquo;; 不匹配 &amp;ldquo;Windows2000&amp;rdquo; 中的 &amp;ldquo;Windows&amp;rdquo; |&lt;br /&gt;
| (?&amp;lt;=&lt;em&gt;pattern&lt;/em&gt;) | &lt;strong&gt;逆序肯定环视&lt;/strong&gt;, 匹配前面是 pattern 的位置, 不捕获匹配结果.  | &amp;lsquo;(?&amp;lt;=Office)2000&amp;rsquo;匹配 &amp;ldquo; Office2000&amp;rdquo; 中的 &amp;ldquo;2000&amp;rdquo;; 不匹配 &amp;ldquo;Windows2000&amp;rdquo; 中的 &amp;ldquo;2000&amp;rdquo; |&lt;br /&gt;
| (?&amp;lt;!&lt;em&gt;pattern&lt;/em&gt;) | &lt;strong&gt;逆序否定环视&lt;/strong&gt;, 匹配前面不是 pattern 的位置, 不捕获匹配结果. | &amp;lsquo;(?&amp;lt;!Office)2000&amp;rsquo;匹配 &amp;ldquo; Windows2000&amp;rdquo; 中的 &amp;ldquo;2000&amp;rdquo;; 不匹配 &amp;ldquo; Office2000&amp;rdquo; 中的 &amp;ldquo;2000&amp;rdquo; |&lt;/p&gt;

&lt;p&gt;非捕获性分组由于结构与环视相似, 故列在表中, 以做对比. 以上4种环视中, 目前 javaScript 中只支持前两种, 也就是只支持 &lt;strong&gt;顺序肯定环视&lt;/strong&gt; 和 &lt;strong&gt;顺序否定环视&lt;/strong&gt;. 下面我们通过实例来帮助理解下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var str = &amp;quot;123abc789&amp;quot;,s;  
//没有使用环视,abc直接被替换  
s = str.replace(/abc/,456);  
console.log(s); //123456789  

//使用了顺序肯定环视,捕获到了a前面的位置,所以abc没有被替换,只是将3替换成了3456  
s = str.replace(/3(?=abc)/,3456);  
console.log(s); //123456abc789  

//使用了顺序否定环视,由于3后面跟着abc,不满意条件,故捕获失败,所以原字符串没有被替换  
s = str.replace(/3(?!abc)/,3456);  
console.log(s); //123abc789  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面通过python来演示下 &lt;strong&gt;逆序肯定环视&lt;/strong&gt; 和 &lt;strong&gt;逆序否定环视&lt;/strong&gt; 的用法.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import re  
data = &amp;quot;123abc789&amp;quot;  
# 使用了逆序肯定环视,替换左边为123的连续的小写英文字母,匹配成功,故abc被替换为456  
regExp = r&amp;quot;(?&amp;lt;=123)[a-z]+&amp;quot;  
replaceString = &amp;quot;456&amp;quot;  
print re.sub(regExp,replaceString,data) # 123456789  

# 使用了逆序否定环视,由于英文字母左侧不能为123,故子表达式[a-z]+捕获到bc,最终bc被替换为456  
regExp = r&amp;quot;(?&amp;lt;!123)[a-z]+&amp;quot;  
replaceString = &amp;quot;456&amp;quot;  
print re.sub(regExp,replaceString,data) # 123a456789  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;需要注意的是: python 和 perl 语言中的 &lt;strong&gt;逆序环视&lt;/strong&gt; 的子表达式只能使用定长的文本. 比如将上述 &amp;ldquo;(?&amp;lt;=123)&amp;rdquo; (逆序肯定环视)子表达式写成 &amp;ldquo;(?&amp;lt;=[0-9]+)&amp;ldquo;, python解释器将会报错: &amp;ldquo;error: look-behind requires fixed-width pattern&amp;rdquo;.&lt;/p&gt;

&lt;h4 id=&#34;场景回顾&#34;&gt;场景回顾&lt;/h4&gt;

&lt;h5 id=&#34;获取html片段&#34;&gt;获取html片段&lt;/h5&gt;

&lt;p&gt;假如现在, js 通过 ajax 获取到一段 html 代码如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;var responseText = &amp;quot;&amp;lt;div data=&#39;dev.xxx.txt&#39;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;img src=&#39;dev.xxx.png&#39; /&amp;gt;&amp;quot;;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现我们需要替换img标签的src 属性中的 &amp;ldquo;dev&amp;rdquo;字符串 为 &amp;ldquo;test&amp;rdquo; 字符串.&lt;/p&gt;

&lt;p&gt;① 由于上述 responseText 字符串中包含至少两个子字符串 &amp;ldquo;dev&amp;rdquo;, 显然不能直接 replace 字符串 &amp;ldquo;dev&amp;rdquo;为 &amp;ldquo;test&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;② 同时由于 js 中不支持逆序环视, 我们也不能在正则中判断前缀为 &amp;ldquo;src=&amp;lsquo;&amp;rdquo;, 然后再替换&amp;rdquo;dev&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;③ 我们注意到 img 标签的 src 属性以 &amp;ldquo;.png&amp;rdquo; 结尾, 基于此, 就可以使用顺序肯定环视. 如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var reg = /dev(?=[^&#39;]*png)/; //为了防止匹配到第一个dev, 通配符前面需要排除单引号或者是尖括号  
var str = responseText.replace(reg,&amp;quot;test&amp;quot;);  
console.log(str);//&amp;lt;div data=&#39;dev.xxx&#39;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;img src=&#39;test.xxx.png&#39; /&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然, 以上不止顺序肯定环视一种解法, 捕获性分组同样可以做到. 那么环视高级在哪里呢? 环视高级的地方就在于它通过一次捕获就可以定位到一个位置, 对于复杂的文本替换场景, 常有奇效, 而分组则需要更多的操作. 请往下看.&lt;/p&gt;

&lt;h5 id=&#34;千位分割符&#34;&gt;千位分割符&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;千位分隔符, 顾名思义, 就是数字中的逗号. 参考西方的习惯, 数字之中加入一个符号, 避免因数字太长难以直观的看出它的值. 故而数字之中, 每隔三位添加一个逗号, 即千位分隔符.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;那么怎么将一串数字转化为千位分隔符形式呢?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var str = &amp;quot;1234567890&amp;quot;;  
(+str).toLocaleString();//&amp;quot;1,234,567,890&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如上, &lt;code&gt;toLocaleString()&lt;/code&gt; 返回当前对象的&amp;rdquo;本地化&amp;rdquo;字符串形式.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如果该对象是Number类型, 那么将返回该数值的按照特定符号分割的字符串形式.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;如果该对象是Array类型, 那么先将数组中的每项转化为字符串, 然后将这些字符串以指定分隔符连接起来并返回.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;toLocaleString&lt;/code&gt; 方法特殊, 有本地化特性, 对于天朝, 默认的分隔符是英文逗号. 因此使用它恰好可以将数值转化为千位分隔符形式的字符串. 如果考虑到国际化, 以上方法就有可能会失效了.&lt;/p&gt;

&lt;p&gt;我们尝试使用环视来处理下.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function thousand(str){  
  return str.replace(/(?!^)(?=([0-9]{3})+$)/g,&#39;,&#39;);  
}  
console.log(thousand(str));//&amp;quot;1,234,567,890&amp;quot;  
console.log(thousand(&amp;quot;123456&amp;quot;));//&amp;quot;123,456&amp;quot;  
console.log(thousand(&amp;quot;1234567879876543210&amp;quot;));//&amp;quot;1,234,567,879,876,543,210&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述使用到的正则分为两块. &lt;code&gt;(?!^)&lt;/code&gt; 和 &lt;code&gt;(?=([0-9]{3})+$)&lt;/code&gt;. 我们先来看后面的部分, 然后逐步分析之.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&amp;ldquo;[0-9]{3}&amp;rdquo; 表示连续3位数字.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&amp;rdquo;([0-9]{3})+&amp;rdquo; 表示连续3位数字至少出现一次或更多次.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&amp;rdquo;([0-9]{3})+$&amp;rdquo; 表示连续3的正整数倍的数字, 直到字符串末尾.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;那么 &lt;code&gt;(?=([0-9]{3})+$)&lt;/code&gt; 就表示匹配一个零宽度的位置, 并且从这个位置到字符串末尾, 中间拥有3的正整数倍的数字.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;正则表达式使用全局匹配g, 表示匹配到一个位置后, 它会继续匹配, 直至匹配不到.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;将这个位置替换为逗号, 实际上就是每3位数字添加一个逗号.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;当然对于字符串&amp;rdquo;123456&amp;rdquo;这种刚好拥有3的正整数倍的数字的, 当然不能在1前面添加逗号. 那么使用 &lt;code&gt;(?!^)&lt;/code&gt; 就指定了这个替换的位置不能为起始位置.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;千位分隔符实例, 展示了环视的强大, 一步到位.&lt;/p&gt;

&lt;h3 id=&#34;正则表达式在js中的应用&#34;&gt;正则表达式在JS中的应用&lt;/h3&gt;

&lt;h4 id=&#34;es6对正则的扩展&#34;&gt;ES6对正则的扩展&lt;/h4&gt;

&lt;p&gt;ES6对正则扩展了又两种修饰符(其他语言可能不支持):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;y (粘连sticky修饰符), 与g类似, 也是全局匹配, 并且下一次匹配都是从上一次匹配成功的下一个位置开始, 不同之处在于, g修饰符只要剩余位置中存在匹配即可, 而y修饰符确保匹配必须从剩余的第一个位置开始.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var s = &amp;quot;abc_ab_a&amp;quot;;  
var r1 = /[a-z]+/g;  
var r2 = /[a-z]+/y;  
console.log(r1.exec(s),r1.lastIndex); // [&amp;quot;abc&amp;quot;, index: 0, input: &amp;quot;abc_ab_a&amp;quot;] 3  
console.log(r2.exec(s),r2.lastIndex); // [&amp;quot;abc&amp;quot;, index: 0, input: &amp;quot;abc_ab_a&amp;quot;] 3  

console.log(r1.exec(s),r1.lastIndex); // [&amp;quot;ab&amp;quot;, index: 4, input: &amp;quot;abc_ab_a&amp;quot;] 6  
console.log(r2.exec(s),r2.lastIndex); // null 0  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如上, 由于第二次匹配的开始位置是下标3,  对应的字符串是 &amp;ldquo;_&amp;ldquo;, 而使用y修饰符的正则对象r2, 需要从剩余的第一个位置开始, 所以匹配失败, 返回null.&lt;/p&gt;

&lt;p&gt;正则对象的 sticky 属性, 表示是否设置了y修饰符. 这点将会在后面讲到.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;u 修饰符, 提供了对正则表达式添加4字节码点的支持. 比如 &amp;ldquo;𝌆&amp;rdquo; 字符是一个4字节字符, 直接使用正则匹配将会失败, 而使用u修饰符后, 将会等到正确的结果.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var s = &amp;quot;𝌆&amp;quot;;  
console.log(/^.$/.test(s));//false  
console.log(/^.$/u.test(s));//true  
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;ucs-2字节码&#34;&gt;UCS-2字节码&lt;/h5&gt;

&lt;p&gt;有关字节码点, 稍微提下. javaScript 只能处理UCS-2编码(js于1995年5月被Brendan Eich花费10天设计出来, 比1996年7月发布的编码规范UTF-16早了一年多, 当时只有UCS-2可选). 由于UCS-2先天不足, 造成了所有字符在js中都是2个字节. 如果是4个字节的字符, 将会默认被当作两个双字节字符处理. 因此 js 的字符处理函数都会受到限制, 无法返回正确结果. 如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var s = &amp;quot;𝌆&amp;quot;;  
console.log(s == &amp;quot;\uD834\uDF06&amp;quot;);//true 𝌆相当于UTF-16中的0xD834DF06  
console.log(s.length);//2 长度为2, 表示这是4字节字符  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;幸运的是, ES6可以自动识别4字节的字符.因此遍历字符串可以直接使用for of循环. 同时, js中如果直接使用码点表示Unicode字符, 对于4字节字符, ES5里是没办法识别的. 为此ES6修复了这个问题, 只需将码点放在大括号内即可.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(s === &amp;quot;\u1D306&amp;quot;);//false   ES5无法识别𝌆  
console.log(s === &amp;quot;\u{1D306}&amp;quot;);//true  ES6可以借助大括号识别𝌆  
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;附-es6新增的处理4字节码的函数&#34;&gt;附: ES6新增的处理4字节码的函数&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;String.fromCodePoint()&lt;/strong&gt;：从Unicode码点返回对应字符&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;String.prototype.codePointAt()&lt;/strong&gt;：从字符返回对应的码点&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;String.prototype.at()&lt;/strong&gt;：返回字符串给定位置的字符&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有关js中的unicode字符集, 请参考阮一峰老师的 &lt;a href=&#34;http://www.ruanyifeng.com/blog/2014/12/unicode.html&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Unicode与JavaScript详解&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;以上是ES6对正则的扩展. 另一个方面, 从方法上看, javaScript 中与正则表达式有关的方法有:&lt;/p&gt;

&lt;p&gt;| 方法名  | compile | test   | exec   | match  | search | replace | split  |&lt;br /&gt;
| &amp;mdash;- | &amp;mdash;&amp;mdash;- | &amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash;- | &amp;mdash;&amp;mdash; |&lt;br /&gt;
| 所属对象 | RegExp  | RegExp | RegExp | String | String | String  | String |&lt;/p&gt;

&lt;p&gt;由上, 一共有7个与js相关的方法, 这些方法分别来自于 RegExp 与 String 对象. 首先我们先来看看js中的正则类 RegExp.&lt;/p&gt;

&lt;h4 id=&#34;regexp&#34;&gt;RegExp&lt;/h4&gt;

&lt;p&gt;RegExp 对象表示正则表达式, 主要用于对字符串执行模式匹配.&lt;/p&gt;

&lt;p&gt;语法: new RegExp(pattern[, flags])&lt;/p&gt;

&lt;p&gt;参数 &lt;em&gt;pattern&lt;/em&gt; 是一个字符串, 指定了正则表达式字符串或其他的正则表达式对象.&lt;/p&gt;

&lt;p&gt;参数 &lt;em&gt;flags&lt;/em&gt; 是一个可选的字符串, 包含属性 &amp;ldquo;g&amp;rdquo;、&amp;rdquo;i&amp;rdquo; 和 &amp;ldquo;m&amp;rdquo;, 分别用于指定全局匹配、区分大小写的匹配和多行匹配. 如果&lt;em&gt;pattern&lt;/em&gt; 是正则表达式, 而不是字符串, 则必须省略该参数.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var pattern = &amp;quot;[0-9]&amp;quot;;  
var reg = new RegExp(pattern,&amp;quot;g&amp;quot;);  
// 上述创建正则表达式对象,可以用对象字面量形式代替,也推荐下面这种  
var reg = /[0-9]/g;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上, 通过对象字面量和构造函数创建正则表达式, 有个小插曲.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;对于正则表达式的直接量, ECMAscript 3规定在每次它时都会返回同一个RegExp对象, 因此用直接量创建的正则表达式的会共享一个实例. 直到ECMAScript 5才规定每次返回不同的实例.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;所以, 现在我们基本不用担心这个问题, 只需要注意在低版本的非IE浏览器中尽量使用构造函数创建正则(这点上, IE一直遵守ES5规定, 其他浏览器的低级版本遵循ES3规定).&lt;/p&gt;

&lt;p&gt;RegExp 实例对象包含如下属性:&lt;/p&gt;

&lt;p&gt;|    实例属性     |              描述              |&lt;br /&gt;
| :&amp;mdash;&amp;mdash;&amp;mdash;: | :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;: |&lt;br /&gt;
|   global    |     是否包含全局标志(true/false)     |&lt;br /&gt;
| ignoreCase  |   是否包含区分大小写标志(true/false)    |&lt;br /&gt;
|  multiline  |     是否包含多行标志(true/false)     |&lt;br /&gt;
|   source    | 返回创建RegExp对象实例时指定的表达式文本字符串形式 |&lt;br /&gt;
|  lastIndex  | 表示原字符串中匹配的字符串末尾的后一个位置, 默认为0  |&lt;br /&gt;
| flags(ES6)  |         返回正则表达式的修饰符          |&lt;br /&gt;
| sticky(ES6) |  是否设置了y(粘连)修饰符(true/false)   |&lt;/p&gt;

&lt;h5 id=&#34;compile&#34;&gt;compile&lt;/h5&gt;

&lt;p&gt;compile 方法用于在执行过程中改变和重新编译正则表达式.&lt;/p&gt;

&lt;p&gt;语法: compile(pattern[, flags])&lt;/p&gt;

&lt;p&gt;参数介绍请参考上述 RegExp 构造器. 用法如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var reg = new RegExp(&amp;quot;abc&amp;quot;, &amp;quot;gi&amp;quot;);  
var reg2 = reg.compile(&amp;quot;new abc&amp;quot;, &amp;quot;g&amp;quot;);  
console.log(reg);// /new abc/g  
console.log(reg2);// undefined  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可见 compile 方法会改变原正则表达式对象, 并重新编译, 而且它的返回值为空.&lt;/p&gt;

&lt;h5 id=&#34;test&#34;&gt;test&lt;/h5&gt;

&lt;p&gt;test 方法用于检测一个字符串是否匹配某个正则规则, 只要是字符串中含有与正则规则匹配的文本, 该方法就返回true, 否则返回 false.&lt;/p&gt;

&lt;p&gt;语法: test(string), 用法如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(/[0-9]+/.test(&amp;quot;abc123&amp;quot;));//true  
console.log(/[0-9]+/.test(&amp;quot;abc&amp;quot;));//false  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上, 字符串&amp;rdquo;abc123&amp;rdquo; 包含数字, 故 test 方法返回 true; 而 字符串&amp;rdquo;abc&amp;rdquo; 不包含数字, 故返回 false.&lt;/p&gt;

&lt;p&gt;如果需要使用 test 方法测试字符串是否完成匹配某个正则规则, 那么可以在正则表达式里增加开始(^)和结束($)元字符. 如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(/^[0-9]+$/.test(&amp;quot;abc123&amp;quot;));//false  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上, 由于字符串&amp;rdquo;abc123&amp;rdquo; 并非以数字开始, 也并非以数字结束, 故 test 方法返回false.&lt;/p&gt;

&lt;p&gt;实际上, 如果正则表达式带有全局标志(带有参数g)时, test 方法还受正则对象的lastIndex属性影响,如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var reg = /[a-z]+/;//正则不带全局标志  
console.log(reg.test(&amp;quot;abc&amp;quot;));//true  
console.log(reg.test(&amp;quot;de&amp;quot;));//true  

var reg = /[a-z]+/g;//正则带有全局标志g  
console.log(reg.test(&amp;quot;abc&amp;quot;));//true  
console.log(reg.lastIndex);//3, 下次运行test时,将从索引为3的位置开始查找  
console.log(reg.test(&amp;quot;de&amp;quot;));//false  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;该影响将在exec 方法讲解中予以分析.&lt;/p&gt;

&lt;h5 id=&#34;exec&#34;&gt;exec&lt;/h5&gt;

&lt;p&gt;exec 方法用于检测字符串对正则表达式的匹配, 如果找到了匹配的文本, 则返回一个结果数组, 否则返回null.&lt;/p&gt;

&lt;p&gt;语法: exec(string)&lt;/p&gt;

&lt;p&gt;exec 方法返回的数组中包含两个额外的属性, index 和 input. 并且该数组具有如下特点:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;第 0 个项表示正则表达式捕获的文本&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;第 1~n 项表示第 1~n 个反向引用, 依次指向第 1~n 个分组捕获的文本, 可以使用RegExp.$ + &amp;ldquo;编号1~n&amp;rdquo;  依次获取分组中的文本&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;index 表示匹配字符串的初始位置&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;input 表示正在检索的字符串&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;无论正则表达式有无全局标示&amp;rdquo;g&amp;rdquo;, exec 的表现都相同. 但正则表达式对象的表现却有些不同. 下面我们来详细说明下正则表达式对象的表现都有哪些不同.&lt;/p&gt;

&lt;p&gt;假设正则表达式对象为 reg , 检测的字符为 string , reg.exec(string) 返回值为 array.&lt;/p&gt;

&lt;p&gt;若 reg 包含全局标示&amp;rdquo;g&amp;rdquo;, 那么 reg.lastIndex 属性表示原字符串中匹配的字符串末尾的后一个位置, 即下次匹配开始的位置, 此时 reg.lastIndex == array.index(匹配开始的位置) + array[0].length(匹配字符串的长度). 如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var reg = /([a-z]+)/gi,  
    string = &amp;quot;World Internet Conference&amp;quot;;  
var array = reg.exec(string);  
console.log(array);//[&amp;quot;World&amp;quot;, &amp;quot;World&amp;quot;, index: 0, input: &amp;quot;World Internet Conference&amp;quot;]  
console.log(RegExp.$1);//World  
console.log(reg.lastIndex);//5, 刚好等于 array.index + array[0].length  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;随着检索继续, array.index 的值将往后递增, 也就是说, reg.lastIndex 的值也会同步往后递增. 因此, 我们也可以通过反复调用 exec 方法来遍历字符串中所有的匹配文本. 直到 exec 方法再也匹配不到文本时, 它将返回 null, 并把 reg.lastIndex 属性重置为 0.&lt;/p&gt;

&lt;p&gt;接着上述例子, 我们继续执行代码, 看看上面说的对不对, 如下所示:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;array = reg.exec(string);  
console.log(array);//[&amp;quot;Internet&amp;quot;, &amp;quot;Internet&amp;quot;, index: 6, input: &amp;quot;World Internet Conference&amp;quot;]  
console.log(reg.lastIndex);//14  

array = reg.exec(string);  
console.log(array);//[&amp;quot;Conference&amp;quot;, &amp;quot;Conference&amp;quot;, index: 15, input: &amp;quot;World Internet Conference&amp;quot;]  
console.log(reg.lastIndex);//25  

array = reg.exec(string);  
console.log(array);//null  
console.log(reg.lastIndex);//0  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上代码中, 随着反复调用 exec 方法, reg.lastIndex 属性最终被重置为 0.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;问题回顾&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在 test 方法的讲解中, 我们留下了一个问题. 如果正则表达式带有全局标志g, 以上 test 方法的执行结果将受 reg.lastIndex影响, 不仅如此, exec 方法也一样. 由于 reg.lastIndex 的值并不总是为零, 并且它决定了下次匹配开始的位置, 如果在一个字符串中完成了一次匹配之后要开始检索新的字符串, 那就必须要手动地把 lastIndex 属性重置为 0. 避免出现下面这种错误:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var reg = /[0-9]+/g,  
    str1 = &amp;quot;123abc&amp;quot;,  
    str2 = &amp;quot;123456&amp;quot;;  
reg.exec(str1);  
console.log(reg.lastIndex);//3  
var array = reg.exec(str2);  
console.log(array);//[&amp;quot;456&amp;quot;, index: 3, input: &amp;quot;123456&amp;quot;]  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上代码, 正确执行结果应该是 &amp;ldquo;123456&amp;rdquo;,  因此建议在第二次执行 exec 方法前, 增加一句 &amp;ldquo;reg.lastIndex = 0;&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;若 reg 不包含全局标示&amp;rdquo;g&amp;rdquo;, 那么 exec 方法的执行结果(array)将与 string.match(reg) 方法执行结果完全相同.&lt;/p&gt;

&lt;h4 id=&#34;string&#34;&gt;String&lt;/h4&gt;

&lt;p&gt;match, search, replace, split 方法请参考 &lt;a href=&#34;http://louiszhai.github.io/2016/01/12/js.String/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;字符串常用方法&lt;/code&gt;&lt;/a&gt; 中的讲解.&lt;/p&gt;

&lt;p&gt;如下展示了使用捕获性分组处理文本模板, 最终生成完整字符串的过程:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var tmp = &amp;quot;An ${a} a ${b} keeps the ${c} away&amp;quot;;  
var obj = {  
  a:&amp;quot;apple&amp;quot;,  
  b:&amp;quot;day&amp;quot;,  
  c:&amp;quot;doctor&amp;quot;  
};  
function tmpl(t,o){  
  return t.replace(/\${(.)}/g,function(m,p){  
    console.log(&#39;m:&#39;+m+&#39; p:&#39;+p);  
    return o[p];  
  });  
}  
tmpl(tmp,obj);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述功能使用ES6可这么实现:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var obj = {  
  a:&amp;quot;apple&amp;quot;,  
  b:&amp;quot;day&amp;quot;,  
  c:&amp;quot;doctor&amp;quot;  
};  
with(obj){  
  console.log(`An ${a} a ${b} keeps the ${c} away`);  
}  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;正则表达式在h5中的应用&#34;&gt;正则表达式在H5中的应用&lt;/h3&gt;

&lt;p&gt;H5中新增了 pattern 属性, 规定了用于验证输入字段的模式, pattern的模式匹配支持正则表达式的书写方式. 默认 pattern 属性是全部匹配, 即无论正则表达式中有无 &amp;ldquo;^&amp;rdquo;, &amp;ldquo;$&amp;rdquo; 元字符, 它都是匹配所有文本.&lt;/p&gt;

&lt;p&gt;注: pattern 适用于以下 input 类型：text, search, url, telephone, email 以及 password. 如果需要取消表单验证, 在form标签上增加 novalidate 属性即可.&lt;/p&gt;

&lt;h3 id=&#34;正则引擎&#34;&gt;正则引擎&lt;/h3&gt;

&lt;p&gt;目前正则引擎有两种, DFA 和 NFA, NFA又可以分为传统型NFA和POSIX NFA.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DFA Deterministic finite automaton 确定型有穷自动机&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;NFA Non-deterministic finite automaton　非确定型有穷自动机&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Traditional NFA&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;POSIX NFA&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DFA引擎不支持回溯, 匹配快速, 并且不支持捕获组, 因此也就不支持反向引用. 上述awk, egrep命令均支持 DFA引擎.&lt;/p&gt;

&lt;p&gt;POSIX NFA主要指符合POSIX标准的NFA引擎, 像 javaScript, java, php, python, c#等语言均实现了NFA引擎.&lt;/p&gt;

&lt;p&gt;有关正则表达式详细的匹配原理, 暂时没在网上看到适合的文章, 建议选读 Jeffrey Friedl 的 &amp;lt;精通正则表达式&amp;gt;[第三版] 中第4章-表达式的匹配原理(p143-p183), Jeffrey Friedl 对正则表达式有着深刻的理解, 相信他能够帮助您更好的学习正则.&lt;/p&gt;

&lt;p&gt;有关NFA引擎的简单实现, 可以参考文章 &lt;a href=&#34;http://www.cnblogs.com/catch/p/3722082.html&#34; target=&#34;_blank&#34;&gt;基于ε-NFA的正则表达式引擎 - twoon&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;

&lt;p&gt;在学习正则的初级阶段, 重在理解 ①贪婪与非贪婪模式, ②分组, ③捕获性与非捕获性分组, ④命名分组, ⑤固化分组, 体会设计的精妙之处. 而高级阶段, 主要在于熟练运用⑥零宽断言(或环视)解决问题, 并且熟悉正则匹配的原理.&lt;/p&gt;

&lt;p&gt;实际上, 正则在 javaScript 中的功能不算强大, js 仅仅支持了①贪婪与非贪婪模式, ②分组, ③捕获性与非捕获性分组 以及 ⑥零宽断言中的顺序环视. 如果再稍微熟悉些 js 中7种与正则有关的方法(compile, test, exec, match, search, replace, split), 那么处理文本或字符串将游刃有余.&lt;/p&gt;

&lt;p&gt;正则表达式, 在文本处理方面天赋异禀, 它的功能十分强大, 很多时候甚至是唯一解决方案. 正则不局限于js, 当下热门的编辑器(比如Sublime, Atom) 以及 IDE(比如WebStorm, IntelliJ IDEA) 都支持它. 您甚至可以在任何时候任何语言中, 尝试使用正则解决问题, 也许之前不能解决的问题, 现在可以轻松的解决.&lt;/p&gt;

&lt;p&gt;附其他语言正则资料:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.ubuntu.org.cn/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97&#34; target=&#34;_blank&#34;&gt;Python正则表达式操作指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/allwefantasy/article/details/3136570/&#34; target=&#34;_blank&#34;&gt;java正则表达式&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;本文就讨论这么多内容,大家有什么问题或好的想法欢迎在下方参与&lt;a href=&#34;#respond&#34;&gt;留言和评论&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;本文作者: &lt;a href=&#34;https://github.com/Louiszhai&#34; target=&#34;_blank&#34;&gt;louis&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本文简介: 本文断断续续历时两个月而成, 共计12k字, 为求简洁全面地还原前端场景中正则的使用规律, 搜集了大量正则相关资料, 并剔除不少冗余字句, 码字不易, 喜欢的请点个赞👍或者收藏, 我将持续保持更新.&lt;/p&gt;

&lt;p&gt;本文链接: &lt;a href=&#34;http://louiszhai.github.io/2016/06/13/regular/&#34; target=&#34;_blank&#34;&gt;http://louiszhai.github.io/2016/06/13/regular/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;参考文章&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jeffrey Friedl 的 &amp;lt;精通正则表达式&amp;gt;[第三版]&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/fdl19881/article/details/7800877&#34; target=&#34;_blank&#34;&gt;linux shell 正则表达式(BREs,EREs,PREs)差异比较&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jb51.net/article/28035.htm&#34; target=&#34;_blank&#34;&gt;正则表达式之捕获组/非捕获组介绍_正则表达式_脚本之家&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/kissdodog/archive/2013/04/22/3036649.html&#34; target=&#34;_blank&#34;&gt;正则表达式(一) &amp;ndash; 元字符 - 逆心 - 博客园&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/hguisu/article/details/8244560&#34; target=&#34;_blank&#34;&gt;正则表达式详解 - guisu，程序人生。 逆水行舟，不进则退。 - 博客频道 - CSDN.NET&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/taek/archive/2012/02/08/2342741.html&#34; target=&#34;_blank&#34;&gt;正则表达式之固化分组 - taek - 博客园&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jb51.net/article/31491.htm&#34; target=&#34;_blank&#34;&gt;正则表达式之 贪婪与非贪婪模式详解（概述）_正则表达式_脚本之家&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/nebula1982/article/details/6659702&#34; target=&#34;_blank&#34;&gt;JAVASCRIPT 正则表达式学习&amp;ndash;&amp;gt;基础与零宽断言（转自司徒正美） - 随风之羽 - 博客频道 - CSDN.NET&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2014/12/unicode.html&#34; target=&#34;_blank&#34;&gt;Unicode与JavaScript详解 - 阮一峰的网络日志&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:u4e00-u9fa5&#34;&gt;\u4e00-\u9fa5 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:u4e00-u9fa5&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        
        <item>
            <title>i18n</title>
            <link>http://blog.pytool.com/basic/2017-10-31-i18n/</link>
            <pubDate>Sat, 01 Apr 2017 04:15:26 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2017-10-31-i18n/</guid>
            <description>&lt;p&gt;[i18n]
LANGS = en-US,zh-CN,zh-HK,de-DE,fr-FR,nl-NL,lv-LV,ru-RU,ja-JP,es-ES,pt-BR,pl-PL,bg-BG,it-IT&lt;br /&gt;
NAMES = English,简体中文,繁體中文,Deutsch,Français,Nederlands,Latviešu,Русский,日本語,Español,Português do Brasil,Polski,български,Italiano&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://crowdin.com/project/&#34; target=&#34;_blank&#34;&gt;Crowdin&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>五大开源 Web 代理服务器横评：Squid、Privoxy、Varnish、Polipo、Tinyproxy</title>
            <link>http://blog.pytool.com/basic/2017-04-01-http%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
            <pubDate>Sat, 01 Apr 2017 04:15:26 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2017-04-01-http%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
            <description>&lt;p&gt;五大开源 Web 代理服务器横评：Squid、Privoxy、Varnish、Polipo、Tinyproxy&lt;/p&gt;

&lt;p&gt;apt install tinyproxy&lt;br /&gt;
vi /etc/tinyproxy.conf&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>钓鱼</title>
            <link>http://blog.pytool.com/basic/2017-04-01-%E9%92%93%E9%B1%BC/</link>
            <pubDate>Sat, 01 Apr 2017 04:15:26 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2017-04-01-%E9%92%93%E9%B1%BC/</guid>
            <description>&lt;p&gt;有很多钓鱼新手也许到现在都没弄明白什么是正口？小编建议钓到的头几条鱼要用手摘钩，看看中钩位置的情况。&lt;/p&gt;

&lt;p&gt;通常钩上唇证明我们调钓正常，鱼吃口正常，即为正口。经常钩下唇，证明我们钓的钝了，做出相应的调整就可以了，还有如果中钩位置在两侧，说明提杆时机不对，抓口不准！&lt;/p&gt;

&lt;p&gt;首先如果是上钩连续中鱼，证明我们钓的钝了，若是下钩连续中鱼证明钓的偏灵敏了，调钓正常应该是上下钩中鱼率几乎差不多。&lt;/p&gt;

&lt;p&gt;比如我们今天半水调4目钓4目，先从不灵不钝开始，可通过察看鱼漂来体会水下鱼的情况，这里也有两种情况：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;提竿不中鱼，说明我们钓的过于灵敏了，这时可进行向上推漂，以1/3-1/2目为一个标点，直到稳定中鱼。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;还有一种情况就是如果没有看到浮漂动作，提竿换饵的时候，却无意中鱼了，证明我们钓的过于迟钝了，这个时候应果断的向下拉漂，要一点一点的找，直到提杆中鱼。&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
        <item>
            <title>10个核心的Linux面试问题与答案</title>
            <link>http://blog.pytool.com/basic/10%E4%B8%AA%E6%A0%B8%E5%BF%83%E7%9A%84linux%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E4%B8%8E%E7%AD%94%E6%A1%88/</link>
            <pubDate>Wed, 05 Oct 2016 16:46:14 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/10%E4%B8%AA%E6%A0%B8%E5%BF%83%E7%9A%84linux%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E4%B8%8E%E7%AD%94%E6%A1%88/</guid>
            <description>

&lt;h2 id=&#34;10个核心的linux面试问题与答案&#34;&gt;10个核心的Linux面试问题与答案&lt;/h2&gt;

&lt;h3 id=&#34;1-问-当你需要给命令绑定一个宏或者按键的时候-应该怎么做呢&#34;&gt;&lt;strong&gt;1. 问： 当你需要给命令绑定一个宏或者按键的时候，应该怎么做呢？&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;答：可以使用bind命令，bind可以很方便地在shell中实现宏或按键的绑定。&lt;/p&gt;

&lt;p&gt;在进行按键绑定的时候，我们需要先获取到绑定按键对应的字符序列。&lt;/p&gt;

&lt;p&gt;比如获取F12的字符序列获取方法如下：先按下&lt;code&gt;Ctrl+V,然后按下F12&lt;/code&gt; .我们就可以得到F12的&lt;code&gt;字符序列 ^\[\[24~&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;接着使用bind进行绑定。&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;crayon-title&#34;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;[root@localhost ~]# bind ‘”\e[24~&amp;rdquo;:&amp;ldquo;date&amp;rdquo;&amp;rsquo;&lt;/p&gt;

&lt;p&gt;注意：相同的按键在不同的终端或终端模拟器下可能会产生不同的字符序列。&lt;/p&gt;

&lt;p&gt;【附】也可以使用showkey -a命令查看按键对应的字符序列。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3 id=&#34;2-问-如果一个linux新手想要知道当前系统支持的所有命令的列表-他需要怎么做&#34;&gt;&lt;strong&gt;2. 问： 如果一个linux新手想要知道当前系统支持的所有命令的列表，他需要怎么做？&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;答： 使用命令compgen ­-c，可以打印出所有支持的命令列表。&lt;/p&gt;

&lt;h3 id=&#34;3-问-如果你的助手想要打印出当前的目录栈-你会建议他怎么做&#34;&gt;&lt;strong&gt;3. 问：如果你的助手想要打印出当前的目录栈，你会建议他怎么做？&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;答：使用Linux 命令dirs可以将当前的目录栈打印出来。&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;crayon-title&#34;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;[root@localhost ~]# dirs /usr/share/X11&lt;/p&gt;

&lt;p&gt;【附】：目录栈通过pushd popd 来操作。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3 id=&#34;4-问-你的系统目前有许多正在运行的任务-在不重启机器的条件下-有什么方法可以把所有正在运行的进程移除呢&#34;&gt;&lt;strong&gt;4. 问： 你的系统目前有许多正在运行的任务，在不重启机器的条件下，有什么方法可以把所有正在运行的进程移除呢？&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;答： 使用linux命令 ’disown -r ’可以将所有正在运行的进程移除。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3 id=&#34;5-问-bash-shell-中的hash-命令有什么作用&#34;&gt;&lt;strong&gt;5. 问： bash shell 中的hash 命令有什么作用？&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;答：linux命令’hash’管理着一个内置的哈希表，记录了已执行过的命令的完整路径, 用该命令可以打印出你所使用过的命令以及执行的次数。&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;crayon-title&#34;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;[root@localhost ~]# hash hits command 2 /bin/ls 2 /bin/su&lt;/p&gt;

&lt;h3 id=&#34;6-问-哪一个bash内置命令能够进行数学运算&#34;&gt;&lt;strong&gt;6. 问：哪一个bash内置命令能够进行数学运算。&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;答： bash shell 的内置命令let 可以进行整型数的数学运算。&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;crayon-title&#34;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;#! /bin/bash … … let c=a+b … …&lt;/p&gt;

&lt;h3 id=&#34;8-问-数据字典属于哪一个用户的&#34;&gt;&lt;strong&gt;8. 问：数据字典属于哪一个用户的？&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;答：数据字典是属于’SYS’用户的，用户‘SYS’ 和 ’SYSEM’是由系统默认自动创建的。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3 id=&#34;9-问-怎样查看一个linux命令的概要与用法&#34;&gt;&lt;strong&gt;9 .  问： 怎样查看一个linux命令的概要与用法？&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;假设你在/bin目录中偶然看到一个你从没见过的的命令，怎样才能知道它的作用和用法呢？&lt;/p&gt;

&lt;p&gt;答 ： 使用命令whatis 可以先出显示出这个命令的用法简要，比如，你可以使用whatis zcat 去查看‘zcat’的介绍以及使用简要。&lt;/p&gt;

&lt;p&gt;[root@localhost ~]# whatis zcat zcat [gzip] (1) – compress or expand files&lt;br /&gt;
&lt;code&gt;whatis git-submodule&lt;/code&gt;&lt;br /&gt;
git-submodule (1)    - Initialize, update or inspect submodules&lt;/p&gt;

&lt;h3 id=&#34;10-span-style-font-family-宋体-问-使用哪一个命令可以查看自己文件系统的磁盘空间配额呢-span&#34;&gt;&lt;strong&gt;10.  &lt;span style=&#34;font-family: 宋体;&#34;&gt;问：使用哪一个命令可以查看自己文件系统的磁盘空间配额呢？&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;答： 使用命令&lt;span style=&#34;font-family: &#39;Times New Roman&#39;;&#34;&gt;repquota &lt;/span&gt;&lt;span style=&#34;font-family: 宋体;&#34;&gt;能够显示出一个文件系统的配额信息&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;【附】只有&lt;span style=&#34;font-family: &#39;Times New Roman&#39;;&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;font-family: 宋体;&#34;&gt;用户才能够查看其它用户的配额。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;到这里，整个面试就结束啦，请将您的宝贵意见在评论中反馈给我们，敬请期待更多的Linux以及开源软件文章。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>开源书籍</title>
            <link>http://blog.pytool.com/basic/2016-10-04-%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D/</link>
            <pubDate>Tue, 04 Oct 2016 04:15:26 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2016-10-04-%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D/</guid>
            <description>

&lt;p&gt;&lt;a href=&#34;http://siberiawolf.com/free_programming/index.html&#34; target=&#34;_blank&#34;&gt;原文&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#语言无关&#34;&gt;语言无关&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ide&#34;&gt;IDE&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mysql&#34;&gt;MySQL&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nosql&#34;&gt;NoSQL&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#postgresql&#34;&gt;PostgreSQL&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#web&#34;&gt;Web&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#web服务器&#34;&gt;WEB服务器&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#其它&#34;&gt;其它&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#函数式概念&#34;&gt;函数式概念&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#分布式系统&#34;&gt;分布式系统&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#在线教育&#34;&gt;在线教育&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#大数据&#34;&gt;大数据&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#操作系统&#34;&gt;操作系统&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#数据库&#34;&gt;数据库&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#智能系统&#34;&gt;智能系统&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#正则表达式&#34;&gt;正则表达式&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#版本控制&#34;&gt;版本控制&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#程序员杂谈&#34;&gt;程序员杂谈&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#管理和监控&#34;&gt;管理和监控&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#编程艺术&#34;&gt;编程艺术&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#编译原理&#34;&gt;编译原理&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#编辑器&#34;&gt;编辑器&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#计算机图形学&#34;&gt;计算机图形学&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#设计模式&#34;&gt;设计模式&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#软件开发方法&#34;&gt;软件开发方法&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#项目相关&#34;&gt;项目相关&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#语言相关&#34;&gt;语言相关&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#android&#34;&gt;Android&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#awk&#34;&gt;AWK&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#c&#34;&gt;C&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#c-sharp&#34;&gt;C#&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#c-1&#34;&gt;C++&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coffeescript&#34;&gt;CoffeeScript&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dart&#34;&gt;Dart&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#elasticsearch&#34;&gt;Elasticsearch&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#elixir&#34;&gt;Elixir&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#erlang&#34;&gt;Erlang&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fortran&#34;&gt;Fortran&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#golang&#34;&gt;Golang&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#haskell&#34;&gt;Haskell&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#html--css&#34;&gt;HTML / CSS&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http&#34;&gt;HTTP&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ios&#34;&gt;iOS&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#java&#34;&gt;Java&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#javascript&#34;&gt;JavaScript&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#latex&#34;&gt;LaTeX&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lisp&#34;&gt;LISP&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lua&#34;&gt;Lua&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#markdown&#34;&gt;Markdown&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nodejs&#34;&gt;Node.js&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#perl&#34;&gt;Perl&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#php&#34;&gt;PHP&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#python&#34;&gt;Python&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r&#34;&gt;R&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#restructuredtext&#34;&gt;reStructuredText&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ruby&#34;&gt;Ruby&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rust&#34;&gt;Rust&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scala&#34;&gt;Scala&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scheme&#34;&gt;Scheme&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#shell&#34;&gt;Shell&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#swift&#34;&gt;Swift&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#vim&#34;&gt;Vim&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#visual-prolog&#34;&gt;Visual Prolog&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;语言无关&#34;&gt;语言无关&lt;/h2&gt;

&lt;h3 id=&#34;ide&#34;&gt;IDE&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/judasn/IntelliJ-IDEA-Tutorial&#34; target=&#34;_blank&#34;&gt;IntelliJ IDEA 简体中文专题教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;mysql&#34;&gt;MySQL&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html&#34; target=&#34;_blank&#34;&gt;21分钟MySQL入门教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.codinglabs.org/articles/theory-of-mysql-index.html&#34; target=&#34;_blank&#34;&gt;MySQL索引背后的数据结构及算法原理&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;nosql&#34;&gt;NoSQL&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://disquebook.com&#34; target=&#34;_blank&#34;&gt;Disque 使用教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://neo4j.tw&#34; target=&#34;_blank&#34;&gt;Neo4j .rb 中文資源&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.neo4j.org.cn&#34; target=&#34;_blank&#34;&gt;Neo4j 简体中文手册 v1.8&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://redisdoc.com&#34; target=&#34;_blank&#34;&gt;Redis 命令参考&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://redisbook.com&#34; target=&#34;_blank&#34;&gt;Redis 设计与实现&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justinyhuang/the-little-mongodb-book-cn/blob/master/mongodb.md&#34; target=&#34;_blank&#34;&gt;The Little MongoDB Book&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JasonLai256/the-little-redis-book/blob/master/cn/redis.md&#34; target=&#34;_blank&#34;&gt;The Little Redis Book&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/huangz1990/annotated_redis_source&#34; target=&#34;_blank&#34;&gt;带有详细注释的 Redis 2.6 代码&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/huangz1990/redis-3.0-annotated&#34; target=&#34;_blank&#34;&gt;带有详细注释的 Redis 3.0 代码&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;postgresql&#34;&gt;PostgreSQL&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://works.jinbuguo.com/postgresql/menu823/index.html&#34; target=&#34;_blank&#34;&gt;PostgreSQL 8.2.3 中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.postgres.cn/docs/9.3/index.html&#34; target=&#34;_blank&#34;&gt;PostgreSQL 9.3.1 中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/juntao/3-web-designs-in-3-weeks/details&#34; target=&#34;_blank&#34;&gt;3 Web Designs in 3 Weeks&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CN-Chrome-DevTools/CN-Chrome-DevTools&#34; target=&#34;_blank&#34;&gt;Chrome 开发者工具中文手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://open.chrome.360.cn/extension_dev/overview.html&#34; target=&#34;_blank&#34;&gt;Chrome扩展开发文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phodal/growth-ebook&#34; target=&#34;_blank&#34;&gt;Growth: 全栈增长工程师指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.gruntjs.net&#34; target=&#34;_blank&#34;&gt;Grunt中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nimojs/gulp-book&#34; target=&#34;_blank&#34;&gt;Gulp 入门指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.gulpjs.com.cn/docs/&#34; target=&#34;_blank&#34;&gt;gulp中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bolasblack/http-api-guide&#34; target=&#34;_blank&#34;&gt;HTTP 接口设计指北&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://yuedu.baidu.com/ebook/478d1a62376baf1ffc4fad99?pn=1&#34; target=&#34;_blank&#34;&gt;HTTP/2.0 中文翻译&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/ye11ow/http2-explained/details&#34; target=&#34;_blank&#34;&gt;http2讲解&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/darcyliu/google-styleguide/blob/master/JSONStyleGuide.md&#34; target=&#34;_blank&#34;&gt;JSON风格指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://man.lupaworld.com/content/network/wireshark/index.html&#34; target=&#34;_blank&#34;&gt;Wireshark用户手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://community.emc.com/thread/194901&#34; target=&#34;_blank&#34;&gt;一站式学习Wireshark&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.20thingsilearned.com/zh-CN/home&#34; target=&#34;_blank&#34;&gt;关于浏览器和网络的 20 项须知&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://coderlmn.github.io/code-standards/&#34; target=&#34;_blank&#34;&gt;前端代码规范 及 最佳实践&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fouber/blog/issues/2&#34; target=&#34;_blank&#34;&gt;前端开发体系建设日记&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hacke2/hacke2.github.io/issues/1&#34; target=&#34;_blank&#34;&gt;前端资源分享（一）&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hacke2/hacke2.github.io/issues/3&#34; target=&#34;_blank&#34;&gt;前端资源分享（二）&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://deerchao.net/tutorials/regex/regex.htm&#34; target=&#34;_blank&#34;&gt;正则表达式30分钟入门教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jinlong.github.io/2013/08/29/devtoolsecrets/&#34; target=&#34;_blank&#34;&gt;浏览器开发工具的秘密&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/AlloyTeam/Mars&#34; target=&#34;_blank&#34;&gt;移动Web前端知识库&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hoosin/mobile-web-favorites&#34; target=&#34;_blank&#34;&gt;移动前端开发收藏夹&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web服务器&#34;&gt;WEB服务器&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://works.jinbuguo.com/apache/menu22/index.html&#34; target=&#34;_blank&#34;&gt;Apache 中文手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tengine.taobao.org/book/index.html&#34; target=&#34;_blank&#34;&gt;Nginx开发从入门到精通&lt;/a&gt; (淘宝团队出品)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ttlsa.com/nginx/nginx-stu-pdf/&#34; target=&#34;_blank&#34;&gt;Nginx教程从入门到精通&lt;/a&gt; (PDF版本，运维生存时间出品)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;其它&#34;&gt;其它&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://softwaredownload.gitbooks.io/openwrt-fanqiang/content/&#34; target=&#34;_blank&#34;&gt;OpenWrt智能、自动、透明翻墙路由器教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://community.emc.com/docs/DOC-16067&#34; target=&#34;_blank&#34;&gt;SAN 管理入门系列&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sketchcn.com/sketch-chinese-user-manual.html#introduce&#34; target=&#34;_blank&#34;&gt;Sketch 中文手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ifeve.com/perfbook/&#34; target=&#34;_blank&#34;&gt;深入理解并行编程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;函数式概念&#34;&gt;函数式概念&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justinyhuang/Functional-Programming-For-The-Rest-of-Us-Cn&#34; target=&#34;_blank&#34;&gt;傻瓜函数编程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;分布式系统&#34;&gt;分布式系统&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://dcaoyuan.github.io/papers/pdfs/Scalability.pdf&#34; target=&#34;_blank&#34;&gt;走向分布式&lt;/a&gt; (PDF)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;在线教育&#34;&gt;在线教育&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://edu.51cto.com&#34; target=&#34;_blank&#34;&gt;51CTO学院&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.codecademy.com/?locale_code=zh&#34; target=&#34;_blank&#34;&gt;Codecademy&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.codeschool.com&#34; target=&#34;_blank&#34;&gt;CodeSchool&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.coursera.org/courses?orderby=upcoming&amp;amp;lngs=zh&#34; target=&#34;_blank&#34;&gt;Coursera&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learnxinyminutes.com&#34; target=&#34;_blank&#34;&gt;Learn X in Y minutes&lt;/a&gt; (数十种语言快速入门教程)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com&#34; target=&#34;_blank&#34;&gt;shiyanlou&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://teamtreehouse.com&#34; target=&#34;_blank&#34;&gt;TeamTreeHouse&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udacity.com&#34; target=&#34;_blank&#34;&gt;Udacity&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.xuetangx.com&#34; target=&#34;_blank&#34;&gt;xuetangX&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.imooc.com/course/list&#34; target=&#34;_blank&#34;&gt;慕课网&lt;/a&gt; (丰富的移动端开发、php开发、web前端、html5教程以及css3视频教程等课程资源)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jikexueyuan.com&#34; target=&#34;_blank&#34;&gt;极客学院&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jisuanke.com&#34; target=&#34;_blank&#34;&gt;计蒜客&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;大数据&#34;&gt;大数据&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://aiyanbo.gitbooks.io/spark-programming-guide-zh-cn/content/&#34; target=&#34;_blank&#34;&gt;Spark 编程指南简体中文版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.csdn.net/CODE_Translation/spark_matei_phd&#34; target=&#34;_blank&#34;&gt;大型集群上的快速和通用数据处理架构&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Flowerowl/Big-Data-Resources&#34; target=&#34;_blank&#34;&gt;大数据/数据挖掘/推荐系统/机器学习相关资源&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyiqun/DataMiningAlgorithm&#34; target=&#34;_blank&#34;&gt;数据挖掘中经典的算法实现和详细的注释&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dataminingguide.books.yourtion.com&#34; target=&#34;_blank&#34;&gt;面向程序员的数据挖掘指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;操作系统&#34;&gt;操作系统&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://man.chinaunix.net/linux/debian/reference/reference.zh-cn.html&#34; target=&#34;_blank&#34;&gt;Debian 参考手册 &lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yeasy/docker_practice&#34; target=&#34;_blank&#34;&gt;Docker —— 从入门到实践&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/widuu/chinese_docker&#34; target=&#34;_blank&#34;&gt;Docker中文指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://yuedu.baidu.com/ebook/d817967416fc700abb68fca1&#34; target=&#34;_blank&#34;&gt;Docker入门实战&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.freebsd.org/doc/zh_CN.UTF-8/books/handbook/&#34; target=&#34;_blank&#34;&gt;FreeBSD 使用手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://freeradius.akagi201.org&#34; target=&#34;_blank&#34;&gt;FreeRADIUS新手入门&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tinylab.gitbooks.io/linux-doc/content/zh-cn/&#34; target=&#34;_blank&#34;&gt;Linux Documentation (中文版)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://happypeter.github.io/LGCB/book/&#34; target=&#34;_blank&#34;&gt;Linux Guide for Complete Beginners&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://works.jinbuguo.com/lfs/lfs62/index.html&#34; target=&#34;_blank&#34;&gt;Linux 构建指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sourceforge.net/projects/elpi/&#34; target=&#34;_blank&#34;&gt;Linux 系统高级编程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/me115/linuxtools_rst&#34; target=&#34;_blank&#34;&gt;Linux工具快速教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aaaaaashu.gitbooks.io/mac-dev-setup/content/&#34; target=&#34;_blank&#34;&gt;Mac 开发配置手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pages.cs.wisc.edu/~remzi/OSTEP/&#34; target=&#34;_blank&#34;&gt;Operating Systems: Three Easy Pieces&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://billie66.github.io/TLCL/index.html&#34; target=&#34;_blank&#34;&gt;The Linux Command Line&lt;/a&gt; (中英文版)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.ubuntu.org.cn/UbuntuManual&#34; target=&#34;_blank&#34;&gt;Ubuntu 参考手册 &lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/objectkuan/ucore-docs/details&#34; target=&#34;_blank&#34;&gt;uCore Lab: Operating System Course in Tsinghua University&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cb.vu/unixtoolbox_zh_CN.xhtml&#34; target=&#34;_blank&#34;&gt;UNIX TOOLBOX&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md&#34; target=&#34;_blank&#34;&gt;命令行的艺术&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tinylab.gitbooks.io/elinux/content/zh/&#34; target=&#34;_blank&#34;&gt;嵌入式 Linux 知识库 (eLinux.org 中文版)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://i.linuxtoy.org/docs/guide/index.html&#34; target=&#34;_blank&#34;&gt;开源世界旅行手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kerneltravel.net/kernel-book/%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90Linux%E5%86%85%E6%A0%B8%E6%BA%90%E7%A0%81.html&#34; target=&#34;_blank&#34;&gt;深入分析Linux内核源码&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tobegit3hub/understand_linux_process&#34; target=&#34;_blank&#34;&gt;理解Linux进程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://vbird.dic.ksu.edu.tw/linux_basic/linux_basic.php&#34; target=&#34;_blank&#34;&gt;鸟哥的 Linux 私房菜 基础学习篇&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://vbird.dic.ksu.edu.tw/linux_server/&#34; target=&#34;_blank&#34;&gt;鸟哥的 Linux 私房菜 服务器架设篇&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;数据库&#34;&gt;数据库&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://redisbook.com&#34; target=&#34;_blank&#34;&gt;Redis 设计与实现&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justinyhuang/the-little-mongodb-book-cn&#34; target=&#34;_blank&#34;&gt;The Little MongoDB Book 中文版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;智能系统&#34;&gt;智能系统&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phodal/designiot&#34; target=&#34;_blank&#34;&gt;一步步搭建物联网系统&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;正则表达式&#34;&gt;正则表达式&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://deerchao.net/tutorials/regex/regex.htm&#34; target=&#34;_blank&#34;&gt;正则表达式30分钟入门教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;版本控制&#34;&gt;版本控制&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://rogerdudler.github.io/git-guide/index.zh.html&#34; target=&#34;_blank&#34;&gt;Git - 简易指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flyhigher139/Git-Cheat-Sheet&#34; target=&#34;_blank&#34;&gt;Git-Cheat-Sheet&lt;/a&gt; （感谢 @flyhigher139 翻译了中文版）&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gitbook.liuhui998.com&#34; target=&#34;_blank&#34;&gt;Git Community Book 中文版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html&#34; target=&#34;_blank&#34;&gt;git-flow 备忘清单&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/&#34; target=&#34;_blank&#34;&gt;Git magic&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/&#34; target=&#34;_blank&#34;&gt;Git Magic&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gitref.justjavac.com&#34; target=&#34;_blank&#34;&gt;Git 参考手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/github-help&#34; target=&#34;_blank&#34;&gt;Github帮助文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://snowdream86.gitbooks.io/github-cheat-sheet/content/zh/&#34; target=&#34;_blank&#34;&gt;GitHub秘籍&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&#34; target=&#34;_blank&#34;&gt;Git教程&lt;/a&gt; （本文由 &lt;a href=&#34;http://weibo.com/liaoxuefeng&#34; target=&#34;_blank&#34;&gt;@廖雪峰&lt;/a&gt; 创作，如果觉得本教程对您有帮助，可以去 &lt;a href=&#34;https://itunes.apple.com/cn/app/git-jiao-cheng/id876420437&#34; target=&#34;_blank&#34;&gt;iTunes&lt;/a&gt; 购买）&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gotgit/gotgithub&#34; target=&#34;_blank&#34;&gt;Got GitHub&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.worldhello.net/gotgithub/index.html&#34; target=&#34;_blank&#34;&gt;GotGitHub&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bucunzai.net/hginit/&#34; target=&#34;_blank&#34;&gt;HgInit (中文版)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mercurial-scm.org/wiki/ChineseTutorial&#34; target=&#34;_blank&#34;&gt;Mercurial 使用教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/zh/v2&#34; target=&#34;_blank&#34;&gt;Pro Git&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/0532/progit/details&#34; target=&#34;_blank&#34;&gt;Pro Git 中文版&lt;/a&gt; (整理在gitbook上)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svnbook.red-bean.com/nightly/zh/index.html&#34; target=&#34;_blank&#34;&gt;svn 手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pcottle.github.io/learnGitBranching/&#34; target=&#34;_blank&#34;&gt;学习 Git 分支&lt;/a&gt; (点击右下角按钮可切换至简体及正体中文)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://igit.linuxtoy.org/index.html&#34; target=&#34;_blank&#34;&gt;沉浸式学 Git&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://backlogtool.com/git-guide/cn/&#34; target=&#34;_blank&#34;&gt;猴子都能懂的GIT入门&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;程序员杂谈&#34;&gt;程序员杂谈&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kancloud.cn/kancloud/a-programmer-prepares&#34; target=&#34;_blank&#34;&gt;程序员的自我修养&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;管理和监控&#34;&gt;管理和监控&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/fuxiaopang/learnelasticsearch/details&#34; target=&#34;_blank&#34;&gt;ElasticSearch 权威指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://es.xiaoleilu.com&#34; target=&#34;_blank&#34;&gt;Elasticsearch 权威指南（中文版）&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kibana.logstash.es&#34; target=&#34;_blank&#34;&gt;ELKstack 中文指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chenryn/logstash-best-practice-cn&#34; target=&#34;_blank&#34;&gt;Logstash 最佳实践&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://udn.yyuap.com/doc/mastering-elasticsearch/&#34; target=&#34;_blank&#34;&gt;Mastering Elasticsearch(中文版)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bbs.konotes.org/workdoc/puppet-27/&#34; target=&#34;_blank&#34;&gt;Puppet 2.7 Cookbook 中文版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;编程艺术&#34;&gt;编程艺术&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://read.douban.com/ebook/4972883/&#34; target=&#34;_blank&#34;&gt;取悦的工序：如何理解游戏&lt;/a&gt; (豆瓣阅读，免费书籍)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.oschina.net/translate/what-every-programmer-should-know-about-memory-part1?print&#34; target=&#34;_blank&#34;&gt;每个程序员都应该了解的内存知识(译)&lt;/a&gt;【第一部分】&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/julycoding/The-Art-Of-Programming-by-July&#34; target=&#34;_blank&#34;&gt;程序员编程艺术&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kancloud.cn/kancloud/intro-to-prog/52592&#34; target=&#34;_blank&#34;&gt;编程入门指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;编译原理&#34;&gt;编译原理&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DeathKing/Learning-SICP&#34; target=&#34;_blank&#34;&gt;《计算机程序的结构和解释》公开课 翻译项目&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;编辑器&#34;&gt;编辑器&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://exvim.github.io/docs-zh/intro/&#34; target=&#34;_blank&#34;&gt;exvim&amp;ndash;vim 改良成IDE项目&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vimcn/vimcdoc&#34; target=&#34;_blank&#34;&gt;Vim中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yangyangwithgnu/use_vim_as_ide&#34; target=&#34;_blank&#34;&gt;所需即所获：像 IDE 一样使用 vim&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://learnvimscriptthehardway.onefloweroneworld.com&#34; target=&#34;_blank&#34;&gt;笨方法学Vimscript 中译本&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;计算机图形学&#34;&gt;计算机图形学&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zilongshanren/opengl-tutorials&#34; target=&#34;_blank&#34;&gt;OpenGL 教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;设计模式&#34;&gt;设计模式&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/lovelion/article/details/17517213&#34; target=&#34;_blank&#34;&gt;史上最全设计模式导学目录&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/me115/design_patterns&#34; target=&#34;_blank&#34;&gt;图说设计模式&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;软件开发方法&#34;&gt;软件开发方法&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justinyhuang/Functional-Programming-For-The-Rest-of-Us-Cn&#34; target=&#34;_blank&#34;&gt;傻瓜函数编程&lt;/a&gt; (《Functional Programming For The Rest of Us》中文版)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.infoq.com/cn/minibooks/scrum-xp-from-the-trenches&#34; target=&#34;_blank&#34;&gt;硝烟中的 Scrum 和 XP&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;项目相关&#34;&gt;项目相关&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://docs.huihoo.com/gnu/linux/gmake.html&#34; target=&#34;_blank&#34;&gt;GNU make 指南&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/waylau/Gradle-2-User-Guide&#34; target=&#34;_blank&#34;&gt;Gradle 2 用户指南&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://yuedu.baidu.com/ebook/f23af265998fcc22bcd10da2&#34; target=&#34;_blank&#34;&gt;Gradle 中文使用文档&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://local.joelonsoftware.com/wiki/Chinese_(Simplified)&#34; target=&#34;_blank&#34;&gt;Joel谈软件&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/fool2fish/selenium-doc&#34; target=&#34;_blank&#34;&gt;selenium 中文文档&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.ituring.com.cn/book/1143&#34; target=&#34;_blank&#34;&gt;开源软件架构&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://article.yeeyan.org/view/2251/94882&#34; target=&#34;_blank&#34;&gt;持续集成（第二版）&lt;/a&gt; (译言网)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://local.joelonsoftware.com/wiki/%E9%A6%96%E9%A0%81&#34; target=&#34;_blank&#34;&gt;約耳談軟體(Joel on Software)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ecomfe/spec&#34; target=&#34;_blank&#34;&gt;编码规范&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;  -   让开发自动化系列专栏](http://www.ibm.com/developerworks/cn/java/j-ap/)  
  -   [追求代码质量  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;](&lt;a href=&#34;http://www.ibm.com/developerworks/cn/java/j-cq/&#34; target=&#34;_blank&#34;&gt;http://www.ibm.com/developerworks/cn/java/j-cq/&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&#34;语言相关&#34;&gt;语言相关&lt;/h2&gt;

&lt;h3 id=&#34;android&#34;&gt;Android&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.apkbus.com/design/index.html&#34; target=&#34;_blank&#34;&gt;Android Design(中文版)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CharonChui/AndroidNote&#34; target=&#34;_blank&#34;&gt;Android Note(开发过程中积累的知识点)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://leanote.com/blog/post/561658f938f41126b2000298?hmsr=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&#34; target=&#34;_blank&#34;&gt;Android6.0新特性详解&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stormzhang.github.io/android/2014/07/07/learn-android-from-rookie/&#34; target=&#34;_blank&#34;&gt;Android学习之路&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bboyfeiyu/android-tech-frontier&#34; target=&#34;_blank&#34;&gt;Android开发技术前线(android-tech-frontier)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hukai.me/android-training-course-in-chinese/index.html&#34; target=&#34;_blank&#34;&gt;Google Android官方培训课程中文版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Google Material Design 正體中文版 (&lt;a href=&#34;https://wcc723.gitbooks.io/google_design_translate/content/style-icons.html&#34; target=&#34;_blank&#34;&gt;译本一&lt;/a&gt; &lt;a href=&#34;https://github.com/1sters/material_design_zh&#34; target=&#34;_blank&#34;&gt;译本二&lt;/a&gt;)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.jikexueyuan.com/project/material-design/&#34; target=&#34;_blank&#34;&gt;Material Design 中文版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/FX-Max/Point-of-Android&#34; target=&#34;_blank&#34;&gt;Point-of-Android&lt;/a&gt; Android 一些重要知识点解析整理&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;awk&#34;&gt;AWK&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://awk.readthedocs.org/en/latest/index.html&#34; target=&#34;_blank&#34;&gt;awk中文指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wuzhouhui/awk&#34; target=&#34;_blank&#34;&gt;awk程序设计语言&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;c&#34;&gt;C&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://c-faq-chn.sourceforge.net/ccfaq/ccfaq.html&#34; target=&#34;_blank&#34;&gt;C 语言常见问题集&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://doc.lellansin.com&#34; target=&#34;_blank&#34;&gt;C/C++ 学习教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.linuxtone.org/ebooks/C&amp;amp;CPP/c/&#34; target=&#34;_blank&#34;&gt;Linux C 编程一站式学习&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/limingth/NCCL&#34; target=&#34;_blank&#34;&gt;新概念 C 语言教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;c-sharp&#34;&gt;C Sharp&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://book.douban.com/subject/24827879/&#34; target=&#34;_blank&#34;&gt;精通C#(第6版) &lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;c-1&#34;&gt;C++&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hellogcc/100-gcc-tips/blob/master/src/index.md&#34; target=&#34;_blank&#34;&gt;100个gcc小技巧&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hellogcc/100-gdb-tips/blob/master/src/index.md&#34; target=&#34;_blank&#34;&gt;100个gdb小技巧&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tinylab.gitbooks.io/cbook/content/&#34; target=&#34;_blank&#34;&gt;C 语言编程透视&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/andycai/cprimer&#34; target=&#34;_blank&#34;&gt;C/C++ Primer&lt;/a&gt; - @andycai&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sunistudio.com/cppfaq/&#34; target=&#34;_blank&#34;&gt;C++ FAQ LITE(中文版)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Mooophy/Cpp-Primer&#34; target=&#34;_blank&#34;&gt;C++ Primer 5th Answers&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wuye9036/CppTemplateTutorial&#34; target=&#34;_blank&#34;&gt;C++ Template 进阶指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.prglab.com/cms/&#34; target=&#34;_blank&#34;&gt;C++ 基础教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chenxiaowei.gitbooks.io/cpp_concurrency_in_action/content/&#34; target=&#34;_blank&#34;&gt;C++ 并发编程(基于C++11)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/forhappy/Cplusplus-Concurrency-In-Practice&#34; target=&#34;_blank&#34;&gt;C++ 并发编程指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/leeyiw/cgdb-manual-in-chinese&#34; target=&#34;_blank&#34;&gt;CGDB中文手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sewm.pku.edu.cn/src/paradise/reference/CMake%20Practice.pdf&#34; target=&#34;_blank&#34;&gt;Cmake 实践&lt;/a&gt; (PDF版)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.huihoo.com/gnu/linux/gmake.html&#34; target=&#34;_blank&#34;&gt;GNU make 指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://zh-google-styleguide.readthedocs.org/en/latest/google-cpp-styleguide/contents/&#34; target=&#34;_blank&#34;&gt;Google C++ 风格指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kuqin.com/qtdocument/tutorial.html&#34; target=&#34;_blank&#34;&gt;QT 教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/anjuke/zguide-cn&#34; target=&#34;_blank&#34;&gt;ZMQ 指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ituring.com.cn/book/1203&#34; target=&#34;_blank&#34;&gt;像计算机科学家一样思考（C++版)&lt;/a&gt; (《How To Think Like a Computer Scientist: C++ Version》中文版)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nowamagic.net/librarys/books/contents/c&#34; target=&#34;_blank&#34;&gt;简单易懂的C魔法&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://scc.qibebt.cas.cn/docs/linux/base/%B8%FA%CE%D2%D2%BB%C6%F0%D0%B4Makefile-%B3%C2%F0%A9.pdf&#34; target=&#34;_blank&#34;&gt;跟我一起写Makefile(PDF)&lt;/a&gt; (PDF)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;coffeescript&#34;&gt;CoffeeScript&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://coffee-script.org&#34; target=&#34;_blank&#34;&gt;CoffeeScript 中文&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/elrrrrrrr/coffeescript-style-guide/blob/master/README-ZH.md&#34; target=&#34;_blank&#34;&gt;CoffeeScript 编程风格指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;dart&#34;&gt;Dart&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://dart.lidian.info/wiki/Language_Tour&#34; target=&#34;_blank&#34;&gt;Dart 语言导览&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;elasticsearch&#34;&gt;Elasticsearch&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/looly/elasticsearch-definitive-guide-cn&#34; target=&#34;_blank&#34;&gt;Elasticsearch 权威指南&lt;/a&gt; （《Elasticsearch the definitive guide》中文版）&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kibana.logstash.es&#34; target=&#34;_blank&#34;&gt;ELKstack 中文指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://udn.yyuap.com/doc/mastering-elasticsearch/&#34; target=&#34;_blank&#34;&gt;Mastering Elasticsearch(中文版)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;elixir&#34;&gt;Elixir&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Ljzn/ElixrGettingStartedChinese&#34; target=&#34;_blank&#34;&gt;Elixir Getting Started 中文翻译&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elixirschool.com/cn/&#34; target=&#34;_blank&#34;&gt;Elixir 编程语言教程&lt;/a&gt; (Elixir School)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Ljzn/MetaProgrammingInElixirChinese&#34; target=&#34;_blank&#34;&gt;Elixir元编程与DSL 中文翻译&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mydearxym.gitbooks.io/phoenix-doc-in-chinese/content/&#34; target=&#34;_blank&#34;&gt;Phoenix 框架中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;erlang&#34;&gt;Erlang&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/liancheng/cpie-cn&#34; target=&#34;_blank&#34;&gt;Erlang 并发编程&lt;/a&gt; (《Concurrent Programming in Erlang (Part I)》中文版)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fortran&#34;&gt;Fortran&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://micro.ustc.edu.cn/Fortran/ZJDing/&#34; target=&#34;_blank&#34;&gt;Fortran77和90/95编程入门&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;golang&#34;&gt;Golang&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/qyuhen/book.git&#34; target=&#34;_blank&#34;&gt;Go 学习笔记&lt;/a&gt; (雨痕)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.hellogcc.org/effective_go.html&#34; target=&#34;_blank&#34;&gt;Effective Go&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/astaxie/build-web-application-with-golang&#34; target=&#34;_blank&#34;&gt;Go Web 编程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Unknwon/the-way-to-go_ZH_CN&#34; target=&#34;_blank&#34;&gt;Go 入门指南&lt;/a&gt; (《The Way to Go》中文版)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golang-china/golangdoc.translations&#34; target=&#34;_blank&#34;&gt;Go 官方文档翻译&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://go-tour-zh.appsp0t.com&#34; target=&#34;_blank&#34;&gt;Go 指南&lt;/a&gt; (《A Tour of Go》中文版)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/songleo/the-little-go-book_ZH_CN&#34; target=&#34;_blank&#34;&gt;Go 简易教程&lt;/a&gt; (《&lt;a href=&#34;https://github.com/karlseguin/the-little-go-book&#34; target=&#34;_blank&#34;&gt;The Little Go Book&lt;/a&gt;》中文版)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Unknwon/go-fundamental-programming&#34; target=&#34;_blank&#34;&gt;Go 编程基础&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/polaris1119/The-Golang-Standard-Library-by-Example&#34; target=&#34;_blank&#34;&gt;Go 语言标准库&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hyper-carrot/go_command_tutorial&#34; target=&#34;_blank&#34;&gt;Go命令教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/astaxie/Go-in-Action&#34; target=&#34;_blank&#34;&gt;Go实战开发&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/achun/Go-Blog-In-Action&#34; target=&#34;_blank&#34;&gt;Go语言博客实践&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/dc_726/article/details/46565241&#34; target=&#34;_blank&#34;&gt;Java程序员的Golang入门指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/astaxie/NPWG_zh&#34; target=&#34;_blank&#34;&gt;Network programming with Go 中文翻译版本&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gorevel.cn/docs/manual/index.html&#34; target=&#34;_blank&#34;&gt;Revel 框架手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mikespook.com/learning-go/&#34; target=&#34;_blank&#34;&gt;学习Go语言&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;groovy&#34;&gt;Groovy&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ibm.com/developerworks/cn/java/j-pg/&#34; target=&#34;_blank&#34;&gt;实战 Groovy 系列&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;haskell&#34;&gt;Haskell&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://learnyoua.haskell.sg&#34; target=&#34;_blank&#34;&gt;Haskell 趣学指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cnhaskell.com&#34; target=&#34;_blank&#34;&gt;Real World Haskell 中文版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;html-css&#34;&gt;HTML / CSS&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/css3-tutorial&#34; target=&#34;_blank&#34;&gt;CSS3 Tutorial 《CSS3 教程》&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://css.doyoe.com&#34; target=&#34;_blank&#34;&gt;CSS参考手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://yanxyz.github.io/emmet-docs/&#34; target=&#34;_blank&#34;&gt;Emmet 文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.w3school.com.cn/html5/&#34; target=&#34;_blank&#34;&gt;HTML5 教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://codeguide.bootcss.com&#34; target=&#34;_blank&#34;&gt;HTML和CSS编码规范&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sass-guidelin.es/zh/&#34; target=&#34;_blank&#34;&gt;Sass Guidelines 中文&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alloyteam.github.io/CodeGuide/&#34; target=&#34;_blank&#34;&gt;前端代码规范&lt;/a&gt; (腾讯 AlloyTeam 团队)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://zh.learnlayout.com&#34; target=&#34;_blank&#34;&gt;学习CSS布局&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chadluo/CSS-Guidelines/blob/master/README.md&#34; target=&#34;_blank&#34;&gt;通用 CSS 笔记、建议与指导&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ios&#34;&gt;iOS&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://nilsun.github.io/apple-watch/&#34; target=&#34;_blank&#34;&gt;Apple Watch开发初探&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://zh-google-styleguide.readthedocs.org/en/latest/google-objc-styleguide/&#34; target=&#34;_blank&#34;&gt;Google Objective-C Style Guide 中文版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://isux.tencent.com/ios-human-interface-guidelines-ui-design-basics-ios7.html&#34; target=&#34;_blank&#34;&gt;iOS7人机界面指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/qinjx/30min_guides/blob/master/ios.md&#34; target=&#34;_blank&#34;&gt;iOS开发60分钟入门&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wileam.com/iphone-6-screen-cn/&#34; target=&#34;_blank&#34;&gt;iPhone 6 屏幕揭秘&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jkyin/Subtitle&#34; target=&#34;_blank&#34;&gt;网易斯坦福大学公开课：iOS 7应用开发字幕文件&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;java&#34;&gt;Java&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/activiti-5.x-user-guide&#34; target=&#34;_blank&#34;&gt;Activiti 5.x 用户指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/apache-mina-2.x-user-guide&#34; target=&#34;_blank&#34;&gt;Apache MINA 2 用户指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/apache-shiro-1.2.x-reference&#34; target=&#34;_blank&#34;&gt;Apache Shiro 用户指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.hawstein.com/posts/google-java-style.html&#34; target=&#34;_blank&#34;&gt;Google Java编程风格指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/h2-database-doc&#34; target=&#34;_blank&#34;&gt;H2 Database 教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/servlet-3.1-specification&#34; target=&#34;_blank&#34;&gt;Java Servlet 3.1 规范&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/java-code-conventions&#34; target=&#34;_blank&#34;&gt;Java 编码规范&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/Jersey-2.x-User-Guide&#34; target=&#34;_blank&#34;&gt;Jersey 2.x 用户指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/jsse-reference-guide&#34; target=&#34;_blank&#34;&gt;JSSE 参考指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mybatis.github.io/mybatis-3/zh/index.html&#34; target=&#34;_blank&#34;&gt;MyBatis中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/netty-4-user-guide&#34; target=&#34;_blank&#34;&gt;Netty 4.x 用户指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/essential-netty-in-action&#34; target=&#34;_blank&#34;&gt;Netty 实战(精髓)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/rest-in-action&#34; target=&#34;_blank&#34;&gt;REST 实战&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/qibaoguang/Spring-Boot-Reference-Guide&#34; target=&#34;_blank&#34;&gt;Spring Boot参考指南&lt;/a&gt; (翻译中)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/spring-framework-4-reference&#34; target=&#34;_blank&#34;&gt;Spring Framework 4.x参考文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/waylau/RestDemo&#34; target=&#34;_blank&#34;&gt;用jersey构建REST服务&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;javascript&#34;&gt;Javascript&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/adamlu/javascript-style-guide&#34; target=&#34;_blank&#34;&gt;Airbnb JavaScript 规范&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;AngularJS&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/peiransun/angularjs-cn&#34; target=&#34;_blank&#34;&gt;AngularJS中译本&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zensh/AngularjsTutorial_cn&#34; target=&#34;_blank&#34;&gt;AngularJS入门教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mgechev/angularjs-style-guide/blob/master/README-zh-cn.md&#34; target=&#34;_blank&#34;&gt;AngularJS最佳实践和风格指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.waylau.com/build-angularjs-app-with-yeoman-in-windows/&#34; target=&#34;_blank&#34;&gt;在Windows环境下用Yeoman构建AngularJS项目&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xufei/Make-Your-Own-AngularJS/blob/master/01.md&#34; target=&#34;_blank&#34;&gt;构建自己的AngularJS&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;backbone.js&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.css88.com/doc/backbone/&#34; target=&#34;_blank&#34;&gt;backbone.js中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.the5fire.com/backbone-js-tutorials-pdf-download.html&#34; target=&#34;_blank&#34;&gt;backbone.js入门教程&lt;/a&gt; (PDF)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/the5fire/backbonejs-learning-note&#34; target=&#34;_blank&#34;&gt;Backbone.js入门教程第二版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://feliving.github.io/developing-backbone-applications&#34; target=&#34;_blank&#34;&gt;Developing Backbone.js Applications(中文版)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ituring.com.cn/minibook/950&#34; target=&#34;_blank&#34;&gt;Chrome扩展及应用开发&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;CoffeeScript&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/geekplux/coffeescript-style-guide&#34; target=&#34;_blank&#34;&gt;CoffeeScript 编码风格指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;D3.js&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ourd3js.com/wordpress/?cat=2&#34; target=&#34;_blank&#34;&gt;D3.js 入门系列&lt;/a&gt; (还有进阶、高级等系列)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mbostock/d3/wiki/API--%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C&#34; target=&#34;_blank&#34;&gt;官方API文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/zhang__tianxu/article/category/1623437&#34; target=&#34;_blank&#34;&gt;张天旭的D3教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/winleisure/tag/D3.js/&#34; target=&#34;_blank&#34;&gt;楚狂人的D3教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://es6.ruanyifeng.com&#34; target=&#34;_blank&#34;&gt;ECMAScript 6 入门&lt;/a&gt; (作者：阮一峰)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;ExtJS&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://extjs-doc-cn.github.io/ext4api/&#34; target=&#34;_blank&#34;&gt;Ext4.1.0 中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bq69.com/blog/articles/script/868/google-javascript-style-guide.html&#34; target=&#34;_blank&#34;&gt;Google JavaScript 代码风格指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/darcyliu/google-styleguide/blob/master/JSONStyleGuide.md&#34; target=&#34;_blank&#34;&gt;Google JSON 风格指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;impress.js&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kokdemo/impress.js-tutorial-in-Chinese&#34; target=&#34;_blank&#34;&gt;impress.js的中文教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://liubin.github.io/promises-book/&#34; target=&#34;_blank&#34;&gt;JavaScript Promise迷你书&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://typeof.net/s/jsmech/&#34; target=&#34;_blank&#34;&gt;Javascript 原理&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://javascript.ruanyifeng.com&#34; target=&#34;_blank&#34;&gt;JavaScript 标准参考教程（alpha）&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jayli/javascript-patterns&#34; target=&#34;_blank&#34;&gt;《JavaScript 模式》&lt;/a&gt; “JavaScript patterns”中译本&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justjavac/12-javascript-quirks&#34; target=&#34;_blank&#34;&gt;javascript 的 12 个怪癖&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bonsaiden.github.io/JavaScript-Garden/zh/&#34; target=&#34;_blank&#34;&gt;JavaScript 秘密花园&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://icodeit.org/jsccp/&#34; target=&#34;_blank&#34;&gt;JavaScript核心概念及实践&lt;/a&gt; (PDF) (此书已由人民邮电出版社出版发行，但作者依然免费提供PDF版本，希望开发者们去购买，支持作者)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pij.robinqu.me&#34; target=&#34;_blank&#34;&gt;Javascript编程指南&lt;/a&gt; (&lt;a href=&#34;https://github.com/RobinQu/Programing-In-Javascript&#34; target=&#34;_blank&#34;&gt;源码&lt;/a&gt;)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;jQuery&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://i5ting.github.io/How-to-write-jQuery-plugin/build/jquery.plugin.html&#34; target=&#34;_blank&#34;&gt;How to write jQuery plugin&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nowamagic.net/librarys/books/contents/jquery&#34; target=&#34;_blank&#34;&gt;简单易懂的JQuery魔法&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Meteor&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://zh.discovermeteor.com&#34; target=&#34;_blank&#34;&gt;Discover Meteor&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Node.js&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://expressjs.jser.us&#34; target=&#34;_blank&#34;&gt;express.js 中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://javascript.ruanyifeng.com/nodejs/express.html&#34; target=&#34;_blank&#34;&gt;Express框架&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/guo-yu/koa-guide&#34; target=&#34;_blank&#34;&gt;koa 中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/learnyounode-zh-cn&#34; target=&#34;_blank&#34;&gt;Learn You The Node.js For Much Win! (中文版)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://i5ting.github.io/node-debug-tutorial/&#34; target=&#34;_blank&#34;&gt;Node debug 三法三例&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alsotang/node-lessons&#34; target=&#34;_blank&#34;&gt;Node.js 包教不包会&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodejs-tw/nodejs-wiki-book&#34; target=&#34;_blank&#34;&gt;Nodejs Wiki Book&lt;/a&gt; (繁体中文)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/0532/nodejs/details&#34; target=&#34;_blank&#34;&gt;nodejs中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nodebeginner.org/index-zh-cn.html&#34; target=&#34;_blank&#34;&gt;Node入门&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nqdeng.github.io/7-days-nodejs/&#34; target=&#34;_blank&#34;&gt;七天学会NodeJS&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nswbmw/N-blog&#34; target=&#34;_blank&#34;&gt;使用 Express + MongoDB 搭建多人博客&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;React.js&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/theJian/build-a-hn-front-page&#34; target=&#34;_blank&#34;&gt;Learn React &amp;amp; Webpack by building the Hacker News front page&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.jikexueyuan.com/project/react-native/&#34; target=&#34;_blank&#34;&gt;React Native 中文文档(含最新Android内容)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fakefish/react-webpack-cookbook&#34; target=&#34;_blank&#34;&gt;React webpack-cookbook&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fraserxu.me/intro-to-react/&#34; target=&#34;_blank&#34;&gt;React 入门教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://reactjs.cn&#34; target=&#34;_blank&#34;&gt;React.js 中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;underscore.js&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://learningcn.com/underscore/&#34; target=&#34;_blank&#34;&gt;Underscore.js中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/getify/You-Dont-Know-JS&#34; target=&#34;_blank&#34;&gt;You-Dont-Know-JS&lt;/a&gt; (深入JavaScript语言核心机制的系列图书)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Zepto.js&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mweb.baidu.com/zeptoapi/&#34; target=&#34;_blank&#34;&gt;Zepto.js 中文文档&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://justjavac.com/named-function-expressions-demystified.html&#34; target=&#34;_blank&#34;&gt;命名函数表达式探秘&lt;/a&gt;  (注:原文由&lt;a href=&#34;http://www.cn-cuckoo.com&#34; target=&#34;_blank&#34;&gt;为之漫笔&lt;/a&gt; 翻译，原始地址无法打开，所以此处地址为我博客上的备份)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.oschina.net/translate/learning-javascript-design-patterns&#34; target=&#34;_blank&#34;&gt;学用 JavaScript 设计模式&lt;/a&gt; (开源中国)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html&#34; target=&#34;_blank&#34;&gt;深入理解JavaScript系列&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;latex&#34;&gt;LaTeX&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.dralpha.com/zh/tech/tech.htm&#34; target=&#34;_blank&#34;&gt;LaTeX 笔记&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ctan.org/pkg/lshort-zh-cn&#34; target=&#34;_blank&#34;&gt;一份不太简短的 LaTeX2ε 介绍&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/49951331/graduate-project-102pj/blob/master/docs/latex123.pdf&#34; target=&#34;_blank&#34;&gt;大家來學 LaTeX&lt;/a&gt; (PDF)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;lisp&#34;&gt;LISP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://acl.readthedocs.org/en/latest/&#34; target=&#34;_blank&#34;&gt;ANSI Common Lisp 中文翻译版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ituring.com.cn/minibook/862&#34; target=&#34;_blank&#34;&gt;Common Lisp 高级编程技术&lt;/a&gt; (《On Lisp》中文版)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;lua&#34;&gt;Lua&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.w3cschool.cc/manual/lua53doc/contents.html&#34; target=&#34;_blank&#34;&gt;Lua 5.3 参考手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;markdown&#34;&gt;Markdown&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wowubuntu.com/markdown/basic.html&#34; target=&#34;_blank&#34;&gt;Markdown 快速入门&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jianshu.com/p/7bd23251da0a&#34; target=&#34;_blank&#34;&gt;Markdown 简明教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wowubuntu.com/markdown/&#34; target=&#34;_blank&#34;&gt;Markdown 语法说明&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jianshu.com/p/q81RER&#34; target=&#34;_blank&#34;&gt;献给写作者的 Markdown 新手指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;node-js&#34;&gt;Node.js&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nodebeginner.org/index-zh-cn.html&#34; target=&#34;_blank&#34;&gt;Node 入门&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/0532/nodejs/details&#34; target=&#34;_blank&#34;&gt;The NodeJS 中文文档&lt;/a&gt;（社区翻译）&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nqdeng.github.io/7-days-nodejs/&#34; target=&#34;_blank&#34;&gt;七天学会NodeJS&lt;/a&gt; 阿里出品，很好的入门资料&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;perl&#34;&gt;Perl&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fayland/chinese-perl-book&#34; target=&#34;_blank&#34;&gt;Master Perl Today&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/horus/modern_perl_book&#34; target=&#34;_blank&#34;&gt;《Modern Perl》中文版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cbi.pku.edu.cn/chinese/documents/perl/index.htm&#34; target=&#34;_blank&#34;&gt;Perl 5 教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.yiibai.com/perl&#34; target=&#34;_blank&#34;&gt;Perl 教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;php&#34;&gt;PHP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wulijun.github.io/php-the-right-way/&#34; target=&#34;_blank&#34;&gt;PHP 之道&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://php.net/manual/zh/&#34; target=&#34;_blank&#34;&gt;PHP5中文手册&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.walu.cc/phpbook/preface.md&#34; target=&#34;_blank&#34;&gt;PHP扩展开发及内核应用&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wusuopu.gitbooks.io/symfony2_tutorial/content&#34; target=&#34;_blank&#34;&gt;Symfony2 实例教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.php-internals.com/book/&#34; target=&#34;_blank&#34;&gt;深入理解 PHP 内核&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;python&#34;&gt;Python&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://djangobook.py3k.cn/2.0/&#34; target=&#34;_blank&#34;&gt;Django book 2.0&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docspy3zh.readthedocs.org/en/latest/&#34; target=&#34;_blank&#34;&gt;Python 3 文档(简体中文) 3.2.2 documentation&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.pythondoc.com&#34; target=&#34;_blank&#34;&gt;Python 中文学习大本营&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jiechic/diveintopython3&#34; target=&#34;_blank&#34;&gt;深入 Python 3&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://old.sebug.net/paper/books/LearnPythonTheHardWay/&#34; target=&#34;_blank&#34;&gt;笨办法学 Python&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;r&#34;&gt;R&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/doc/contrib/Liu-FAQ.pdf&#34; target=&#34;_blank&#34;&gt;153分钟学会 R&lt;/a&gt; (PDF)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.biosino.org/R/R-doc/files/R4beg_cn_2.0.pdf&#34; target=&#34;_blank&#34;&gt;《R for beginners》中文版&lt;/a&gt; (PDF)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/doc/contrib/Ding-R-intro_cn.pdf&#34; target=&#34;_blank&#34;&gt;R 导论&lt;/a&gt; (《An Introduction to R》中文版) (PDF)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://yanping.me/shiny-tutorial/&#34; target=&#34;_blank&#34;&gt;用 R 构建 Shiny 应用程序&lt;/a&gt; (《Building &amp;lsquo;Shiny&amp;rsquo; Applications with R》中文版)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/doc/contrib/Xu-Statistics_and_R.pdf&#34; target=&#34;_blank&#34;&gt;统计学与 R 读书笔记&lt;/a&gt; (PDF)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;restructuredtext&#34;&gt;reStructuredText&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.pythondoc.com/sphinx/rest.html&#34; target=&#34;_blank&#34;&gt;reStructuredText 入门&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jwch.sdut.edu.cn/book/rst.html&#34; target=&#34;_blank&#34;&gt;reStructuredText 简明教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ruby&#34;&gt;Ruby&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JuanitoFatas/rails-style-guide/blob/master/README-zhCN.md&#34; target=&#34;_blank&#34;&gt;Rails 风格指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://railstutorial-china.org&#34; target=&#34;_blank&#34;&gt;Ruby on Rails Tutorial 原书第 2 版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ihower.tw/rails4/&#34; target=&#34;_blank&#34;&gt;Ruby on Rails 实战圣经&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JuanitoFatas/ruby-style-guide/blob/master/README-zhCN.md&#34; target=&#34;_blank&#34;&gt;Ruby 风格指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lrthw.github.io&#34; target=&#34;_blank&#34;&gt;笨方法学 Ruby&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;rust&#34;&gt;Rust&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/KaiserY/rust-book-chinese&#34; target=&#34;_blank&#34;&gt;Rust 官方教程&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/photino/rust-notes&#34; target=&#34;_blank&#34;&gt;Rust 语言学习笔记&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rustcc/RustPrimer&#34; target=&#34;_blank&#34;&gt;RustPrimer&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rustcc/rust-by-example/&#34; target=&#34;_blank&#34;&gt;通过例子学习 Rust&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;scala&#34;&gt;Scala&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://twitter.github.io/effectivescala/index-cn.html&#34; target=&#34;_blank&#34;&gt;Effective Scala&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/windor/beginners-guide-to-scala/details&#34; target=&#34;_blank&#34;&gt;Scala 初学者指南&lt;/a&gt; (The Neophyte&amp;rsquo;s Guide to Scala)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://twitter.github.io/scala_school/zh_cn/index.html&#34; target=&#34;_blank&#34;&gt;Scala 课堂&lt;/a&gt; (Twitter的Scala中文教程)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;scheme&#34;&gt;Scheme&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://deathking.github.io/yast-cn/&#34; target=&#34;_blank&#34;&gt;Scheme 入门教程&lt;/a&gt; (《Yet Another Scheme Tutorial》中文版)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;shell&#34;&gt;Shell&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.ubuntu.org.cn/Shell%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80&#34; target=&#34;_blank&#34;&gt;Shell 编程基础&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/qinjx/30min_guides/blob/master/shell.md&#34; target=&#34;_blank&#34;&gt;Shell 脚本编程30分钟入门&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://billie66.github.io/TLCL/book/zh&#34; target=&#34;_blank&#34;&gt;The Linux Command Line 中文版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;swift&#34;&gt;Swift&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/numbbbbb/-the-swift-programming-language-/details&#34; target=&#34;_blank&#34;&gt;《The Swift Programming Language》中文版&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;vim&#34;&gt;Vim&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://man.chinaunix.net/newsoft/vi/doc/help.html&#34; target=&#34;_blank&#34;&gt;Vim Manual(中文版)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.study-area.org/tips/vim/index.html&#34; target=&#34;_blank&#34;&gt;大家來學 VIM&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;visual-prolog&#34;&gt;Visual Prolog&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.visual-prolog.com/index.php?title=A_Beginners_Guide_to_Visual_Prolog_in_Chinese&#34; target=&#34;_blank&#34;&gt;Visual Prolog 7初学指南&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.visual-prolog.com/index.php?title=Visual_Prolog_for_Tyros_in_Chinese&#34; target=&#34;_blank&#34;&gt;Visual Prolog 7边练边学&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/vhf/free-programming-books&#34; target=&#34;_blank&#34;&gt;rel&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>常见尺寸规范</title>
            <link>http://blog.pytool.com/basic/2010-01-01-%E5%B8%B8%E8%A7%81%E5%B0%BA%E5%AF%B8%E8%A7%84%E8%8C%83/</link>
            <pubDate>Tue, 27 Sep 2016 15:55:04 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2010-01-01-%E5%B8%B8%E8%A7%81%E5%B0%BA%E5%AF%B8%E8%A7%84%E8%8C%83/</guid>
            <description>

&lt;h2 id=&#34;favicon-ico&#34;&gt;favicon.ico&lt;/h2&gt;

&lt;p&gt;尺寸: 32x32  常用:16*16 32*32 48*48 64*64 128*128&lt;/p&gt;

&lt;h2 id=&#34;会员卡&#34;&gt;会员卡&lt;/h2&gt;

&lt;p&gt;PVC卡 身份证&lt;br /&gt;
      外：88.5:57&lt;br /&gt;
      内尺寸 长 85.5mm   宽度 54 mm&lt;br /&gt;
      磁条： 宽度 12.5mm 高度 37.5 mm&lt;/p&gt;

&lt;p&gt;将APP内置的图标替换为高清图标&lt;br /&gt;
为了提升用户安装后的视觉体验，请您将APP内置的图标替换为高清图标，以便在vivo手机安装APP后显示清晰美观的应用图标。&lt;br /&gt;
请于APK内部图标路径替换相应图标，具体每个文件夹中对应的图标尺寸规范如下（原则是不低于规范尺寸,单位：px）：&lt;/p&gt;

&lt;p&gt;hdpi文件夹 —— 192x192&lt;br /&gt;
xhdpi文件夹 —— 256x256&lt;br /&gt;
xxhdpi文件夹 —— 384x384&lt;br /&gt;
xxxhdpi文件夹 —— 512x512&lt;/p&gt;

&lt;p&gt;注：分辨率适配目录参考&lt;/p&gt;

&lt;p&gt;480*800    drawable-hdpi&lt;br /&gt;
540*960    drawable-sw360dp-hdpi&lt;br /&gt;
720*1280   drawable-sw360dp-xhdpi&lt;br /&gt;
1080*1920  drawable-sw360dp-xxhdpi&lt;br /&gt;
1440*2560  drawable-sw360dp-xxxhdpi&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>基础知识合集</title>
            <link>http://blog.pytool.com/basic/2016-09-09-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
            <pubDate>Tue, 27 Sep 2016 15:54:37 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2016-09-09-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
            <description>

&lt;h2 id=&#34;催眠歌曲&#34;&gt;催眠歌曲&lt;/h2&gt;

&lt;p&gt;矜持 - 陈一发儿&lt;br /&gt;
克卜勒 - 陈一发儿&lt;br /&gt;
戴佩妮 - 我们的故事（翻唱）直播录音&lt;/p&gt;

&lt;h2 id=&#34;英语翻译&#34;&gt;英语翻译&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;instruct &amp;quot;scrapy crawl linkedin.com&amp;quot;&lt;/code&gt;` 执行一条指令&lt;br /&gt;
flexible 弹性布局 灵活&lt;br /&gt;
pragmatic 实用&lt;br /&gt;
Intercom 社会化客户关系管理平台 [resin.io daoclould.io]&lt;br /&gt;
anti-aliased 抗锯齿&lt;br /&gt;
Cheatsheet小抄 备忘单 Cheat（欺骗）&lt;br /&gt;
artifacts 可以译为“工件”、“制品”、“产出物” &amp;ndash;drone&lt;br /&gt;
Artifacts 项目的[打包部署]设置 &amp;ndash; IntelliJ IDEA&lt;br /&gt;
异形 Alien&lt;br /&gt;
penetration 渗透&lt;br /&gt;
exploit 利用 特指针对漏洞的利用&lt;br /&gt;
escape html字符转译 &amp;gt; &amp;gt; :: go 逃逸&lt;br /&gt;
invokes curl 调用curl&lt;br /&gt;
字符转译&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\   backslash  
`   backtick  
*   asterisk  
_   underscore  
{}  curly braces  
[]  square brackets  
()  parentheses  
#   hash mark  
+   plus sign  
-   minus sign (hyphen)  
.   dot  
!   exclamation mark  
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;google-hack&#34;&gt;google hack&lt;/h2&gt;

&lt;p&gt;破解 序列号 Crack Keygen/Serial&lt;/p&gt;

&lt;h2 id=&#34;常用uid&#34;&gt;常用uid&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;uid=27(mysql) gid=27(mysql) groups=27(mysql)&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;uid=33(www-data) gid=33(www-data) groups=33(www-data)&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;默认端口&#34;&gt;默认端口&lt;/h2&gt;

&lt;p&gt;scrapyd   6800&lt;/p&gt;

&lt;h1 id=&#34;建站&#34;&gt;建站：&lt;/h1&gt;

&lt;p&gt;10大优秀开源CMS&lt;br /&gt;
论坛 nodebb&lt;br /&gt;
Discourse中文论坛&lt;br /&gt;
Nodeclub&lt;br /&gt;
Discuz&lt;br /&gt;
wecenter&lt;/p&gt;

&lt;h1 id=&#34;在线资源&#34;&gt;在线资源&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://fontcdn.org/&#34; target=&#34;_blank&#34;&gt;FontCDN&lt;/a&gt;&lt;br /&gt;
  FontCDN is a tool for searching web fonts from Google Fonts.&lt;/p&gt;

&lt;h1 id=&#34;在线工具&#34;&gt;在线工具&lt;/h1&gt;

&lt;p&gt;语法着色Highlight&lt;br /&gt;
语法着色库 Prism.JS&lt;/p&gt;

&lt;p&gt;在线代码编辑器 CodeMirror&lt;/p&gt;

&lt;h1 id=&#34;软件&#34;&gt;软件&lt;/h1&gt;

&lt;p&gt;css实时编辑工具 LiveStyle&lt;/p&gt;

&lt;h1 id=&#34;文档生成&#34;&gt;文档生成&lt;/h1&gt;

&lt;p&gt;项目文档托管服务:Read the Fuck Document: readthedocs.org&lt;br /&gt;
全文检索引擎 Sphinx&lt;br /&gt;
RESTful API 文档生成工具  apidoc&lt;br /&gt;
&lt;code&gt;npm install apidoc -g&lt;/code&gt;&lt;br /&gt;
api 文档工具 Stamplay/docs&lt;/p&gt;

&lt;p&gt;PPMessage 是一个开源的在线客服平台&lt;/p&gt;

&lt;p&gt;微信团队前端开发工作流工具 WeFlow&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>EwoMail修改密码后无法登陆bug修复</title>
            <link>http://blog.pytool.com/basic/2017-07-11-ewomail-bug%E4%BF%AE%E5%A4%8D/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2017-07-11-ewomail-bug%E4%BF%AE%E5%A4%8D/</guid>
            <description>&lt;p&gt;EwoMail修改密码后无法登陆bug修复&lt;/p&gt;

&lt;p&gt;现象:&lt;br /&gt;
  新用户登陆后修改密码后 新密码旧密码都无法登陆&lt;/p&gt;

&lt;p&gt;排查 ：&lt;br /&gt;
1. 登陆数据库 查看密码&lt;br /&gt;
&lt;code&gt;select id,password from ewomail.i_users \G;&lt;/code&gt;&lt;br /&gt;
*************************** 11. row ***************************&lt;br /&gt;
      id: 12&lt;br /&gt;
password: d41d8cd98f00b204e9800998ecf8427e&lt;br /&gt;
*************************** 12. row ***************************&lt;br /&gt;
      id: 13&lt;br /&gt;
password: d41d8cd98f00b204e9800998ecf8427e&lt;br /&gt;
*************************** 13. row ***************************&lt;br /&gt;
      id: 14&lt;br /&gt;
password: d41d8cd98f00b204e9800998ecf8427e&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;MD5解密d41d8cd98f00b204e9800998ecf8427e发现是个空密码&lt;/p&gt;

&lt;p&gt;查询结果：&lt;br /&gt;
 [空密码]/[Empty String]&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;前端调试 ajax postform传值 Status Code:200 OK&lt;br /&gt;
PrevPassword=lsl123457&amp;amp;NewPassword=lshl123457&amp;amp;Action=ChangePassword&amp;amp;XToken=6b43065d8ab5c2ba300337907c7d21fb&lt;br /&gt;
所以问题出在后端程序处理&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;后端定位密码修改&lt;br /&gt;
app/libraries/RainLoop/EwoMail.php&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function updatePassword($email,$password,$new_passowrd)  
{  
    $newData = [  
        &#39;email&#39;=&amp;gt;$email,  
        &#39;password&#39;=&amp;gt;$password,  
        &#39;new_passowrd&#39;=&amp;gt;$new_passowrd  
    ];  
    $r = $this-&amp;gt;send(&#39;User/update_password&#39;,$newData);  
    return $r;  
}  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;继续跟踪 ewomail-admin/module/Api/User.php&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;/**  
 * 修改账号密码  
 */  
Rout::get(&#39;update_password&#39;,function(){  
    $email = iany(&#39;email&#39;);  
    $password = iany(&#39;password&#39;);  
    $new_password = iany(&#39;new_password&#39;);  
    if(!$email){  
        E::error(&#39;email domain parameter&#39;);  
    }  
    if(!$password){  
        E::error(&#39;password domain parameter&#39;);  
    }  
    if(!$password){  
        E::error(&#39;new_password domain parameter&#39;);  
    }  
    $row = App::$db-&amp;gt;getOne(&amp;quot;select * from &amp;quot;.table(&amp;quot;users&amp;quot;).&amp;quot; where email=&#39;$email&#39; and active=1&amp;quot;);  
    if(!$row){  
        E::error(&#39;Data does not exist&#39;);  
    }  
    if($row[&#39;password&#39;]!=md5($password)){  
        E::error(&#39;The original password is not correct&#39;);  
    }  
    $newData = [  
        &#39;password&#39;=&amp;gt;md5($new_password)  
    ];  
    App::$db-&amp;gt;update(&amp;quot;users&amp;quot;,$newData,&amp;quot;email=&#39;$email&#39;&amp;quot;);  
    E::success(&#39;&#39;);  
});  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;发现 &lt;code&gt;new_passowrd&lt;/code&gt; 笔误，改正&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function updatePassword($email,$password,$new_password)  
   {  
       $newData = [  
           &#39;email&#39;=&amp;gt;$email,  
           &#39;password&#39;=&amp;gt;$password,  
           &#39;new_password&#39;=&amp;gt;$new_password  
       ];  
       $r = $this-&amp;gt;send(&#39;User/update_password&#39;,$newData);  
       return $r;  
   }  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;问题修复。&lt;/p&gt;

&lt;p&gt;总结：问题虽然不大，但是查起来确实麻烦&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Netstat 中 Recv-Q和Send-Q状态</title>
            <link>http://blog.pytool.com/basic/2015-01-29-netstat-%E4%B8%AD-recv-q%E5%92%8Csend-q%E7%8A%B6%E6%80%81/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2015-01-29-netstat-%E4%B8%AD-recv-q%E5%92%8Csend-q%E7%8A%B6%E6%80%81/</guid>
            <description>&lt;p&gt;实时监控网络状态：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;watch -n 1 netstat -ant&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;执行命令查看当前网络状态时候发现,执行了命令 netstat -anp&lt;/p&gt;

&lt;p&gt;b1发现recv-q 和 send-q 状态不是很正常，对这2个参数不了解，特意学习了一下，简单总结如下：&lt;br /&gt;
&lt;img src=&#34;http://www.code521.com/wp-content/uploads/2014/10/b1.jpg&#34; alt=&#34;&#34; /&gt;&lt;br /&gt;
recv-Q 表示网络接收队列&lt;br /&gt;
表示收到的数据已经在本地接收缓冲，但是还有多少没有被进程取走，recv()&lt;br /&gt;
如果接收队列Recv-Q一直处于阻塞状态，可能是遭受了拒绝服务 denial-of-service 攻击。&lt;/p&gt;

&lt;p&gt;send-Q 表示网路发送队列&lt;br /&gt;
对方没有收到的数据或者说没有Ack的,还是本地缓冲区.&lt;br /&gt;
如果发送队列Send-Q不能很快的清零，可能是有应用向外发送数据包过快，或者是对方接收数据包不够快。&lt;/p&gt;

&lt;p&gt;这两个值通常应该为0，如果不为0可能是有问题的。packets在两个队列里都不应该有堆积状态。可接受短暂的非0情况。&lt;/p&gt;

&lt;p&gt;从图中可以看到是大量的 send-Q ,可以判定是发送数据给目的地址的时候出现了阻塞的问题，导致了包堆积在本地缓存中，不能成功发出去。那么问题就产生在了客户端，根据公司的业务逻辑发现是客户端发送的TCP长连接数量过多。验证办法，尝试减少客户端和服务的长连接.查看效果&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>html实现网页</title>
            <link>http://blog.pytool.com/basic/2017-07-11-html%E5%AE%9E%E7%8E%B0%E7%BD%91%E9%A1%B5%E8%B7%B3%E8%BD%AC/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2017-07-11-html%E5%AE%9E%E7%8E%B0%E7%BD%91%E9%A1%B5%E8%B7%B3%E8%BD%AC/</guid>
            <description>

&lt;h2 id=&#34;纯html页面跳转&#34;&gt;纯html页面跳转&lt;/h2&gt;

&lt;p&gt;&lt;head&gt;&lt;br /&gt;
&lt;meta http-equiv=&#34;refresh&#34; content=&#34;10; url=http://www.baidu.com&#34;&gt;&lt;br /&gt;
&lt;/head&gt;&lt;/p&gt;

&lt;h2 id=&#34;javascript-跳转&#34;&gt;javaScript 跳转&lt;/h2&gt;

&lt;p&gt;方法一:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;script language=&amp;quot;javascript&amp;quot;&amp;gt;  
    window.location = &amp;quot;http://www.baidu.com&amp;quot;;  
&amp;lt;/script&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;方法二:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script language=&amp;quot;javascript&amp;quot;&amp;gt;  
    document.location = &amp;quot;http://www.baidu.com&amp;quot;;  
&amp;lt;/script&amp;gt;  


&amp;lt;html&amp;gt;  
  &amp;lt;head&amp;gt;  
    &amp;lt;title&amp;gt;正在跳转&amp;lt;/title&amp;gt;  
  &amp;lt;/head&amp;gt;  
&amp;lt;body&amp;gt;  
&amp;lt;script language=&#39;javascript&#39;&amp;gt;document.location = &#39;/websitems/&#39;&amp;lt;/script&amp;gt;  
&amp;lt;/body&amp;gt;  
&amp;lt;/html&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;（带进度条）&lt;/p&gt;

&lt;p&gt;&lt;html&gt;&lt;br /&gt;
&lt;head&gt;&lt;br /&gt;
&lt;meta http-equiv=&#34;Content-Language&#34; content=&#34;zh-cn&#34;&gt;&lt;br /&gt;
&lt;meta HTTP-EQUIV=&#34;Content-Type&#34; CONTENT=&#34;text/html; charset=gb2312&#34;&gt;&lt;br /&gt;
&lt;title&gt;跳转到baidu.com&lt;/title&gt;&lt;br /&gt;
&lt;/head&gt;&lt;br /&gt;
&lt;body&gt;&lt;br /&gt;
&lt;form name=loading&gt;&lt;br /&gt;
&lt;P align=center&gt;&lt;FONT face=Arial color=#0066ff size=2&gt;loading&amp;hellip;&lt;/FONT&gt;&lt;br /&gt;
&lt;INPUT style=&#34;PADDING-RIGHT: 0px; PADDING-LEFT: 0px; FONT-WEIGHT: bolder; PADDING-BOTTOM: 0px; COLOR: #0066ff; BORDER-TOP-style: none; PADDING-TOP: 0px; FONT-FAMILY: Arial; BORDER-RIGHT-style: none; BORDER-LEFT-style: none; BACKGROUND-COLOR: white; BORDER-BOTTOM-style: none&#34;  
size=46 name=chart&gt;&lt;br /&gt;
&lt;BR&gt;&lt;br /&gt;
&lt;INPUT style=&#34;BORDER-RIGHT: medium none; BORDER-TOP: medium none; BORDER-LEFT: medium none; COLOR: #0066ff; BORDER-BOTTOM: medium none; TEXT-ALIGN: center&#34; size=47 name=percent&gt;&lt;br /&gt;
&lt;script language=&#34;javascript&#34;&gt;&lt;br /&gt;
var bar=0&lt;br /&gt;
var line=&amp;ldquo;||&amp;rdquo;&lt;br /&gt;
var amount=&amp;ldquo;||&amp;rdquo;&lt;br /&gt;
count()&lt;br /&gt;
function count(){&lt;br /&gt;
    bar=bar+2&lt;br /&gt;
    amount =amount + line&lt;br /&gt;
    document.loading.chart.value=amount&lt;br /&gt;
    document.loading.percent.value=bar+&amp;ldquo;%&amp;rdquo;&lt;br /&gt;
    if (bar&lt;99){  
        setTimeout(&#34;count()&#34;,100);  
    }else{  
        window.location = &#34;http://www.baidu.com/&#34;;  
    }  
}  
&lt;/script&gt;&lt;br /&gt;
&lt;/P&gt;&lt;br /&gt;
&lt;/form&gt;&lt;br /&gt;
&lt;/body&gt;&lt;br /&gt;
&lt;/html&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>实现微信浏览器内打开App Store链接</title>
            <link>http://blog.pytool.com/basic/2015-01-29-%E5%BE%AE%E4%BF%A1%E6%89%93%E5%BC%80%E5%A4%96%E9%83%A8%E9%93%BE%E6%8E%A5/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2015-01-29-%E5%BE%AE%E4%BF%A1%E6%89%93%E5%BC%80%E5%A4%96%E9%83%A8%E9%93%BE%E6%8E%A5/</guid>
            <description>&lt;p&gt;实现微信浏览器内打开App Store链接
作者: 海蓝 分类: 程序生活 发布时间: 2014-05-09 22:17 ė 被戳了 2,679 次 6 暂无评论&lt;/p&gt;

&lt;p&gt;微信浏览器是不支持打开App Store 页面的，不知道微信为什么这么做。比如你页面写 &lt;a href=”http://itunes.apple.com/us/app/id399608199″&gt;download&lt;/a&gt; ，在微信浏览器点击链接是没有反应的，但是如果是其他的链接地址，比如百度那就没有问题&lt;/p&gt;

&lt;p&gt;后来我发现如果你在微信官方后台编辑图文，把原文链接写为：&lt;a href=&#34;http://itunes.apple.com/us/app/id399608199&#34; target=&#34;_blank&#34;&gt;http://itunes.apple.com/us/app/id399608199&lt;/a&gt; ，那就可以打开了，发现微信页面的“查看原文”是一个function，如下&lt;br /&gt;
Code&lt;/p&gt;

&lt;p&gt;真正的url是：&lt;a href=&#34;http://mp.weixin.qq.com/mp/redirect?url=http%3A%2F%2Fitunes.apple.com%2Fus%2Fapp%2Fid399608199%23rd&#34; target=&#34;_blank&#34;&gt;http://mp.weixin.qq.com/mp/redirect?url=http%3A%2F%2Fitunes.apple.com%2Fus%2Fapp%2Fid399608199%23rd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;看来微信允许打开mp.weixin.qq.com这个host下的网页，然后用js再打开真正的页面。&lt;/p&gt;

&lt;p&gt;现在简单了，将页面的代码写为：&lt;a href=”http://mp.weixin.qq.com/mp/redirect?url=http%3A%2F%2Fitunes.apple.com%2Fus%2Fapp%2Fid399608199%23rd”&gt;download&lt;/a&gt;，在微信浏览器内可以打开app store的地址了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/mp/redirect?url=https%3a%2f%2fitunes.apple.com%2fus%2fapp%2fyi-meng-lun-tan%2fid1187128260%3fmt%3d8&#34; target=&#34;_blank&#34;&gt;http://mp.weixin.qq.com/mp/redirect?url=https%3a%2f%2fitunes.apple.com%2fus%2fapp%2fyi-meng-lun-tan%2fid1187128260%3fmt%3d8&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>开源书籍</title>
            <link>http://blog.pytool.com/basic/2016-12-12-%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</link>
            <pubDate>Tue, 29 Mar 2016 21:25:45 CST</pubDate>
            <author>rinetd</author>
            <guid>http://blog.pytool.com/basic/2016-12-12-%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;计划
**&lt;br /&gt;
**&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;讨论&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;进行&lt;br /&gt;
** DONE 会员卡核销过程不直观，核销卡券在店铺流水中未体现&lt;br /&gt;
*** 增加文字提示 （赠送 xx 元）或（减免 xx 元）&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
